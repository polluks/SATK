ASMA Ver. 0.2.0                                                                                     08 Sep 2020 06:14:14  Page     1

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                               1 * Copyright (C) 2020 Harold Grovesteen
                                               2 *
                                               3 * This file is part of SATK.
                                               4 *
                                               5 *     SATK is free software: you can redistribute it and/or modify
                                               6 *     it under the terms of the GNU General Public License as published by
                                               7 *     the Free Software Foundation, either version 3 of the License, or
                                               8 *     (at your option) any later version.
                                               9 *
                                              10 *     SATK is distributed in the hope that it will be useful,
                                              11 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
                                              12 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                              13 *     GNU General Public License for more details.
                                              14 *
                                              15 *     You should have received a copy of the GNU General Public License
                                              16 *     along with SATK.  If not, see <http://www.gnu.org/licenses/>.
                                              17 *
ASMA Ver. 0.2.0  FBA BOOT LOADER                                                                    08 Sep 2020 06:14:14  Page     2

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                              19 * Program Description:
                                              20 *
                                              21 * LOADER is a generic boot loader program.  It requires input/output commands to
                                              22 * the IPL device to load the booted program.  This boot loader is executed by
                                              23 * means of an IPL from a FBA DASD volume.  Control is passed to the booted
                                              24 * program by means of a branch instruction.
                                              25 *
                                              26 * Various boot loader services are provided for use by the loader itself and
                                              27 * the booted program.
                                              28 *
                                              29 * Target Architecture: S/360, S/370, ESA/390, or z/Arch
                                              30 *
                                              31 * Devices Used:
                                              32 *   110 - FBA IPL volume containing the booted program
                                              33 *
                                              34 * Program Register Usage:
                                              35 *
                                              36 *   R0   Base register for access to the ASA.  Required by DSECT usage
                                              37 *        This is purely an assembler artifact.  R0 available for other uses
                                              38 *   R1   Device Channel and Unit Addresses for I/O instructions
                                              39 *   R2   Cumulative size of loaded program
                                              40 *   R3   Boot loader high water mark (can not write below it)
                                              41 *   R4   FBA I/O Area address (where a directed record is read)
                                              42 *   R5   Number of FBA sectors read for each directed record
                                              43 *   R6   Work register
                                              44 *   R8   Source address of directed record's content    ---+
                                              45 *   R9   Length of a directed record's program content     |-- MVCL
                                              46 *   R10  Destination address of directed record's content  |
                                              47 *   R11  Length of a directed record's program content  ---+
                                              48 *   R12  The program base register
                                              49 *   R13  available
                                              50 *   R14  available
                                              51 *   R15  Booted program's entry address
                                              52 *
                                              53 * Disabled Wait State PSW's address field values used by the program:
                                              54 *    X'000000' - Successful execution of the program
                                              55 *    X'000008' - Unexpected Restart interruption occurred. Old Restart PSW at
                                              56 *                address X'8'
                                              57 *    X'000018' - Unexpected External interruption occurred.  Old External PSW at
                                              58 *                address X'18'
                                              59 *    X'000020' - Unexpected Supervisor interruption occurred.  Old Supervisor
                                              60 *                PSW at address X'20'
                                              61 *    X'000028' - Unexpected Program interruption occurred. Old Program PSW at
                                              62 *                address X'28'
                                              63 *    X'000030' - Unexpected Machine Check interruption occurred.  Old Machine
                                              64 *                Check PSW at address X'30'
                                              65 *    X'000038' - Unexpected Input/Output interruption occurred.  Old
                                              66 *                Input/Output PSW at address X'38'
                                              67 *    X'050004' - IPL Device or channel not operational
                                              68 *    X'050008' - IPL Device or channel busy
                                              69 *    X'05000C' - IPL Device or channel had a problem. See SCSW in IOT entry
                                              70 *    X'050010' - Unexpected interruption from some other device. See ASA X'BA'
ASMA Ver. 0.2.0  FBA BOOT LOADER                                                                    08 Sep 2020 06:14:14  Page     3

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                              71 *    X'050014' - NOT USED
                                              72 *    X'050018' - IPL device not supported by this boot loader
                                              73 *    X'05001C' - Directed record overwriting boot loader
                                              74 *    X'050020' - Destructive overlap detected by MVCL while loading record
                                              75 *    X'050024' - Cumulative booted program sizes do not match in LOD1
                                              76 *    X'050028' - Can not change addressing mode for booted program
                                              77 *    X'05002C' - Incompatbile run-time and assembly-time architectures
ASMA Ver. 0.2.0  FBA BOOT LOADER - ARCHITECTURE LEVEL SET AND LOAD ASA CONTENT                      08 Sep 2020 06:14:14  Page     4

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                              79 * See all object data and macro generated model statements in the listing
                                              80          PRINT DATA,GEN

                                              82 * Inform the SATK macros of the architecture being targeted.  Inferred from
                                              83 * the ASMA -t command-line argument.
                                              84          ARCHLVL
                                              86+$AL      OPSYN AL
                                              87+$ALR     OPSYN ALR
                                              88+$B       OPSYN B
                                              89+$BAS     OPSYN BAS
                                              90+$BASR    OPSYN BASR
                                              91+$BC      OPSYN BC
                                              92+$BCTR    OPSYN BCTR
                                              93+$BE      OPSYN BE
                                              94+$BH      OPSYN BH
                                              95+$BL      OPSYN BL
                                              96+$BM      OPSYN BM
                                              97+$BNE     OPSYN BNE
                                              98+$BNH     OPSYN BNH
                                              99+$BNL     OPSYN BNL
                                             100+$BNM     OPSYN BNM
                                             101+$BNO     OPSYN BNO
                                             102+$BNP     OPSYN BNP
                                             103+$BNZ     OPSYN BNZ
                                             104+$BO      OPSYN BO
                                             105+$BP      OPSYN BP
                                             106+$BXLE    OPSYN BXLE
                                             107+$BZ      OPSYN BZ
                                             108+$CH      OPSYN CH
                                             109+$CLR     OPSYN CLR
                                             110+$L       OPSYN L
                                             111+$LH      OPSYN LH
                                             112+$LM      OPSYN LM
                                             113+$LNR     OPSYN LNR
                                             114+$LPSW    OPSYN LPSW
                                             115+$LR      OPSYN LR
                                             116+$LTR     OPSYN LTR
                                             117+$NR      OPSYN NR
                                             118+$SL      OPSYN SL
                                             119+$SLR     OPSYN SLR
                                             120+$SR      OPSYN SR
                                             121+$ST      OPSYN ST
                                             122+$STM     OPSYN STM
                                             123+$X       OPSYN X
                                             124+         MNOTE *,'ARCHLVL - ARCHITECTURE LEVEL SET - 3'
        ** [124] MNOTE *,ARCHLVL - ARCHITECTURE LEVEL SET - 3


                                             126 * Ensure interrupt traps are loaded by iplasma.py before program execution
                                             127 * begins.  This macro will create the memory region that will also contain
                                             128 * the IPL PSW.  The region name defaults to ASAREGN.  iplasma.py knows how
                                             129 * to deal with ASA creation.
ASMA Ver. 0.2.0  FBA BOOT LOADER - ARCHITECTURE LEVEL SET AND LOAD ASA CONTENT                      08 Sep 2020 06:14:14  Page     5

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT


                                             131 ASASECT  BLASALD
                            000000  0001FF   133+ASASECT  START 0,ASAREGN
000000  000A0000 00000008                    135+         PSW   0,0,2,0,X'008'      64-bit Restart ISR Trap New PSW
000008                      000008  000058   136+         ORG   ASASECT+X'058'
000058  000A0000 00000018                    138+         PSW   0,0,2,0,X'018'      64-bit External ISR Trap New PSW
000060  000A0000 00000020                    139+         PSW   0,0,2,0,X'020'      64-bit Supervisor Call ISR Trap New PSW
000068  000A0000 00000028                    140+         PSW   0,0,2,0,X'028'      64-bit Program ISR Trap New PSW
000070  000A0000 00000030                    141+         PSW   0,0,2,0,X'030'      64-bit Machine Check Trap New PSW
000078  000A0000 00000038                    142+         PSW   0,0,2,0,X'038'      64-bit Input/Output Trap New PSW
000080                      000080  000200   143+         ORG   ASASECT+512
                                             144          ASAIPL IA=LODSTART    Define the bare-metal program's IPL PSW
                            000000  0001FF   145+ASASECT  CSECT
000200                      000200  000000   146+         ORG   ASASECT
000000  00080000 00000400                    147+         PSW   0,0,0,0,LODSTART,24
000008                      000008  000200   148+         ORG   ASASECT+512      Reset CSECT to end of assigned storage area
                            000000  0001FF   149+ASASECT  CSECT



                                             151 *
                                             152 *  Commonly used FBA Values
                                             153 *

                                             155 * CCW Commands
                            000003  000001   156 NOP      EQU   X'03'     No operation CCW Command
                            000063  000001   157 DEFN_EXT EQU   X'63'     Define Extent CCW Command
                            000043  000001   158 LOC_DATA EQU   X'43'     Locate CCW Command (within a defined extent)
                            000042  000001   159 READ     EQU   X'42'     Read located data CCW Command

                                             161 * CCW Flags
                            000040  000001   162 CC       EQU   X'40'     CCW Command chaining
ASMA Ver. 0.2.0  FBA BOOT LOADER - INITIALIZATION                                                   08 Sep 2020 06:14:14  Page     6

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             164 *
                                             165 * FBA Boot Loader Program
                                             166 *

                            000400  000B6F   168 LODSECT  START X'400',LOADER   Start a second region for the loader itself
                                             169 * This results in LOADER.bin being created in the list directed IPL directory
                                             170          BLINIT DTYPE=LOD1LENF+LOD1FBA
000400                      000000           171+         USING ASA,0           Give me instruction access to the ASA and LOD1
000400  900F 0200                   000200   172+LODSTART STM   0,15,LODPARMS   Preserve Hercules IPL parameters, if any.
                                             173+* This must happen before any register is altered!
000404  0DC0                                 174+         BASR  12,0            Establish my base register
000406                      000406           175+         USING *,12            Tell the assembler
                                             176+* Ensure program is not re-entered by a Hercules console initiated restart.
                                             177+* Address 0 changed from its absolute storage role (IPL PSW) to its real
                                             178+* storage role (Restart New PSW) after the IPL.
                                             179+* Change from the IPL PSW at address 0 to a Restart New PSW trap
000406  D207 0000 C2EA      000000  0006F0   180+         MVC   RSTNPSW,PGMRS

                                             182+* Check that the IPL device created by IPLASMA can be processed by this
                                             183+* Boot loader.
                                             184+         CLI   LOD1DTYP,LOD1LENF+LOD1FBA \
00040C  9512 0244                   000244      +                                  Can I handle the IPL device type?
000410  4770 C27E                   000684   185+         BNE   BADDEVT            ..No, end with 018 error code



                                             187+* Store data in LOD1 record
000414  D207 0000 C2EA      000000  0006F0   189+         MVC   RSTNPSW,PGMRS
00041A  9211 0255                   000255   190+         MVI   LOD1IO,X'11'           Set I/O arch. and mode in use
00041E  9201 0256                   000256   191+         MVI   LOD1BLAM,X'01'         Set booted program entry AM as 24
000422  9203 0254                   000254   192+         MVI   LOD1CPU,3              Set assembled CPU architecture
000426  9206 0257                   000257   193+         MVI   LOD1BLSV,BLSNUM        Set start of unsupported services
00042A  4100 C302                   000708   194+         LA    0,BLS                  Locate services entry point
00042E  5000 0270                   000270   195+         ST    0,LOD1BLST             Store it in LOD1
000432  4100 C336                   00073C   196+         LA    0,BLSR                 Locate the service return
000436  5000 0278                   000278   197+         ST    0,LOD1RTN              Save it in LOD1 reserved area



                                             199+* Determine the running architecture of the CPU
00043A  D20F C092 01D0      000498  0001D0   201+         MVC   APSZ0010(16),X'1D0'      Save current 128-bit SVC PSW
000440  D207 C0A2 0060      0004A8  000060   202+         MVC   APSS0010(8),X'060'       Save current 64-bit SVC PSW
000446  D207 C0AA 0068      0004B0  000068   203+         MVC   APSP0010(8),X'068'       Save current 64-bit PGM PSW
00044C  D20F 01D0 C062      0001D0  000468   204+         MVC   X'1D0'(16,0),AP640010    Set up 128-bit SVC New PSW
000452  D207 0060 C072      000060  000478   205+         MVC   X'060'(8,0),AP310010     Set up 64-bit SVC New PSW
000458  D207 0068 C07A      000068  000480   206+         MVC   X'068'(8,0),AP240010     Set up 64-bit PGM New PSW
00045E  1B66                                 207+         SR    6,6                      Make sure result register is zero
000460  0A00                                 208+         SVC   0   NOW DO THE PROBE
                                             209+* Control never falls through here.  An interruption takes control elsewhere.

                                             211+* Data used by APROB
000468  00000001 80000000                    212+AP640010 PSWZ  0,0,0,0,IS640010,64           64-bit architecture detected
ASMA Ver. 0.2.0  FBA BOOT LOADER - INITIALIZATION                                                   08 Sep 2020 06:14:14  Page     7

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

000470  00000000 000004B8
000478  00080000 800004C0                    213+AP310010 PSW380 0,0,0,0,IS310010,31          31-bit architecture detected
000480  00080000 000004DE                    214+AP240010 PSWEC 0,0,0,0,IS240010,24           24-bit architecture detected
000488  00080000 800004F2                    215+WH310010 PSW380 0,0,0,0,APDN0010,31          31-bit tests complete
000490  00000000 000004F2                    216+STBC0010 PSWBC 0,0,0,0,APDN0010,24           Restores BC-mode for S/370 when detected
000498  00000000 00000000                    217+APSZ0010 DC    FD'0,0'                       128-bit SVC PSW save area
0004A0  00000000 00000000
0004A8  00000000 00000000                    218+APSS0010 DC    FD'0'                         64-bit SVC PSW save area
0004B0  00000000 00000000                    219+APSP0010 DC    FD'0'                         64-bit PGM PSW save area

0004B8                                       221+IS640010 DS    0H    64-bit architecture found
                                             222+*        LGHI  &REG,9  Use of LGHI ensures all high-order bits in 64-bit reg. are 0
0004B8  47690009                             223+         DC    AL1(X'47',6*16+9),HL2'9'
0004BC  47F0 C0EC                   0004F2   224+         B     APDN0010      64-bit tests are done

0004C0                                       226+IS310010 DS    0H    31-bit architecture found
                                             227+* Detect which 31-bit architecture
0004C0  D207 0068 C082      000068  000488   228+         MVC   X'068'(8,0),WH310010        Set up 31-bit trap PSW
                                             229+* A failure on the test instruction causes immediate end to any testing
                                             230+* Therefore, the level detected by the failure is set before the test instruction
                                             231+* is executed.
                                             232+* Level 7 - Detect native ESA/390
0004C6  4160 0007                   000007   233+         LA    6,7              Set level to 7 (native ESA/390)
                                             234+*        STFL  0(0)             STORE FACILITY LIST
0004CA  B2B10000                             235+         DC    X'B2B10000'
                                             236+* An operation exception definitely implies native ESA/390
                                             237+* Depending upon the platform STFL might actually work.  Test the STFL bits then.
0004CE  9140 00C8                   0000C8   238+         TM    200,X'40'        Is z/Architecture installed?
0004D2  4780 C0EC                   0004F2   239+         BZ    APDN0010         ..No, this is a native ESA/390 environment
                                             240+*                               ..Yes, ESA/390 on z was detected
0004D6  4160 0008                   000008   241+         LA    6,8              Set level to 8 (ESA/390 on z)
0004DA  47F0 C0EC                   0004F2   242+         B     APDN0010         31-bit tests are done

                                             244+* Detect which 24-bit architecture mode is actually running
0004DE                                       245+IS240010 DS    0H    24-bit architecture found
0004DE  4160 0003                   000003   246+         LA    6,3              Set level to 3 (assume S/370-EC mode)
0004E2  9108 0029                   000029   247+         TM    X'29',X'08'      Is EC-mode enabled in old-PSW?
0004E6  4710 C0EC                   0004F2   248+         BO    APDN0010         ..Yes, already in EC-mode, so done
0004EA  4160 0002                   000002   249+         LA    6,2              ..No, set level to 2 (S/370-BC mode)
0004EE  8200 C08A                   000490   250+         LPSW  STBC0010         Restore BC-mode operation

0004F2                                       252+APDN0010 DS    0H   Level found, restore previous new PSW's
0004F2  D20F 01D0 C092      0001D0  000498   253+         MVC   X'1D0'(16,0),APSZ0010      Restore previous 128-bit SVC PSW
0004F8  D207 0060 C0A2      000060  0004A8   254+         MVC   X'060'(8,0),APSS0010       Restore previous 64-bit SVC PSW
0004FE  D207 0068 C0AA      000068  0004B0   255+         MVC   X'068'(8,0),APSP0010       Restore previous 64-bit PGM PSW
000504  4260 0274                   000274   256+         STC   6,LOD1ARCH      Save the running CPU architecture



                                             258+* Ensure the running architecture can execute the assembled architecture.
000508  1F66                                 260+         SLR   6,6                      Clear the return code
00050A  9503 0274                   000274   261+         CLI   LOD1ARCH,3            Is running architecture S/370-EC?
ASMA Ver. 0.2.0  FBA BOOT LOADER - INITIALIZATION                                                   08 Sep 2020 06:14:14  Page     8

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

00050E  4780 C126                   00052C   262+         BE    AARX0011              ..Yes, architectures are compatible
000512  9502 0274                   000274   263+         CLI   LOD1ARCH,2            Is running architecture S/370-BC?
000516  4770 C122                   000528   264+         BNE   AARI0011              ..No, not compatible
00051A  8200 C11A                   000520   265+         LPSW  AARE0011              ..Yes, adjust to EC-mode
000520                                       266+AARE0011 DS    0D
000520  00080000 0000052C                    267+         PSWEC 0,0,0,0,AARX0011
000528                                       268+AARI0011 DS    0H
000528  4160 000C                   00000C   269+         LA    6,12                  Set incompatible architectures return code
00052C                                       270+AARX0011 DS    0H
00052C  47F6 C12A                   000530   271+         B     *+4(6)          Use the return code to decide action
000530  47F0 C13A                   000540   272+         B     ARCHSOK         ..0, architectures compatible, nothing to do
000534  47F0 C2A6                   0006AC   273+         B     ARCHBAD         ..4, change to z architecture (never)
000538  47F0 C2A6                   0006AC   274+         B     ARCHBAD         ..8, no support to downgrade to ESA/390 on z
00053C  47F0 C2A6                   0006AC   275+         B     ARCHBAD         .12, bad combination, can not run

000540                                       277+ARCHSOK  DS    0H
                                             278+*        SAM24                    Boot loader runs in 24-bit address mode



                                             280+* At this point the boot loader's system environment has been validated and,
                                             281+* if need be, adjusted for compatibility with the assembled architecture.  The
                                             282+* loader is now running in its anticipated environment.  Anticipated, that is,
                                             283+* by the loader's _assembled_ target architecture.
ASMA Ver. 0.2.0  FBA BOOT LOADER - PROCESSING                                                       08 Sep 2020 06:14:14  Page     9

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             285 * Test the service call framework
000540  41D0 C76A                   000B70   286          LA    13,EOBL+(SAVEAREA-DMEMORY)   Point to my save area
                                             287          BLSCALL SPB=TEST00
000544  4110 C23A                   000640   288+         LA    1,TEST00
000548  58F0 0270                   000270   289+         L     15,LOD1BLST
00054C  0DEF                                 290+         $BASR 14,15
00054E  12FF                                 291          $LTR  15,15
000550  4780 C150                   000556   292          $BZ   *+6            CC==0, success
000554  0000                                 293          DC    HL2'0'         Otherwise, die here



                                             295 * Initialize the I/O system and the I/O Table with the IPL device
                                             296          BLSCALL SPB=INIT01
000556  4110 C23E                   000644   297+         LA    1,INIT01
00055A  58F0 0270                   000270   298+         L     15,LOD1BLST
00055E  0DEF                                 299+         $BASR 14,15
000560  12FF                                 300          $LTR  15,15
000562  4780 C162                   000568   301          $BZ   *+6            RC==0, success
000566  0000                                 302          DC    HL2'0'         Otherwise, die here

                                             304 * Remember where the IPL Device is in the I/O Table.  Need it during use of
                                             305 * EXCP service.  So set it in the ORB.
000568  5860 C242                   000648   306          L     6,INIT01+(SPBIOTA-SPB)
00056C  5060 C252                   000658   307          ST    6,EXCPORB
000570                      000000           308          USING BLSIOT,6



                                             310 * Test the QIOT service
                                             311 * Look for the IPL device whatever its device number is
000570  D201 C248 6000      00064E  000000   312          MVC     QUERY02+2(2),BLSDEV
000576                                       313          DROP    6
                                             314          BLSCALL SPB=QUERY02
000576  4110 C246                   00064C   315+         LA    1,QUERY02
00057A  58F0 0270                   000270   316+         L     15,LOD1BLST
00057E  0DEF                                 317+         $BASR 14,15
000580  47FF C17E                   000584   318          B        *+4(15)     Use branch table to process return code
000584  47F0 C186                   00058C   319          $B       IPLFND      RC==0, found IPL device in I/O Table
000588  00000004                             320          DC       FL4'4'      RC==4, did not find the IPL device. Die here



                                             322 * Test the ENADEV service
                                             323 * This is commented out because the only device used by the boot loader is
                                             324 * the IPL device and it is enabled by the hardware during the IPL function.
                                             325 * For this reason, the I/O Table address is supplied by the INITIO service.
                                             326 * The boot loader does not need this service, but the booted program may.
                                             327 *         BLSCALL SPB=ENADEV03
                                             328 *         B     *+4(15)        Use branch table to process return code
                                             329 *         DC    F'0'           RC==0, entry added                    TESTED
                                             330 *         $B    IPLFND         RC==4, duplicate entry                TESTED
ASMA Ver. 0.2.0  FBA BOOT LOADER - PROCESSING                                                       08 Sep 2020 06:14:14  Page    10

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             331 *         DC    F'8'           RC==8, error state                    TESTED
                                             332 *         DC    F'12'          RC==12, device not operational        TESTED
                                             333 *         DC    F'16'          RC==16, I/O Table full                TESTED
                                             334 *         DC    F'20'          RC==20, device entry class mismatch   TESTED

                                             336 * Prepare for use of the IPL device by the boot loader
00058C  D201 C2B2 00BA      0006B8  0000BA   337 IPLFND   MVC   IPLDEV,IOICODE    Save the address of the IPL device
                                             338 * The IPL device must be available for use because we successfully got here.
                                             339 * Prepare the channel program for use of the IPL device by the boot loader

                                             341 * Initialize the static portions of the I/O related data
000592  1B22                                 342          SR    2,2          Clear cumulative size of loaded program to zero
000594  1892                                 343          LR    9,2          Clear size of data being moved from record
000596  1B62                                 344          SR    6,2          Clear work register
                                             345          LOADHL 6,LOD1MDLN  Fetch from LOD1 the maximum directed record length
000598  BF63 0246                   000246   346+         ICM   6,B'0011',LOD1MDLN   Load halfword without sign extention
                                             347          STCCWCNT 6,FBACCW3 CCW - Update count field in CCW
00059C  4060 C2D0                   0006D6   348+         STH   6,FBACCW3+6      Store count into a Format 0 CCW
0005A0  8860 0009                   000009   349          SRL   6,9(0)             Convert bytes into sectors.
0005A4  4060 C2E4                   0006EA   350          STH   6,LOCSECS    LOC - Will always read the same number of sectors
0005A8  1856                                 351          LR    5,6                Save the number of sectors (updates extent)
0005AA  0660                                 352          BCTR  6,0                And the logical end of the extent is constant
0005AC  5060 C2DE                   0006E4   353          ST    6,ENDLSEC    EXT - Set it in the FBA extent data
                                             354 * R6 is now available for other uses
0005B0  5840 026C                   00026C   355          L     4,LOD1IOA          Fetch where directed records are read
                                             356          STCCWADR 4,FBACCW3          CCW - Update the CCW for reading
0005B4  BE47 C2CB                   0006D1   357+         STCM  4,B'0111',FBACCW3+1    Store address into a Format 0 CCW
0005B8  D203 C2D6 0258      0006DC  000258   358          MVC   FRSTPSEC,LOD1FSEC     EXT - Set starting sector of first record
                                             359 * Initialize the static portions of record loading
0005BE  4184 0006                   000006   360          LA    8,6(4)       Locate start of directed record's content
0005C2  4130 CA42                   000E48   361          LA    3,EOBL+(HWM-DMEMORY)   Directed records may not overwrite me!

                                             363 READLOOP BLSCALL SPB=EXCP04
0005C6                                       364+READLOOP DS    0H
0005C6  4110 C24E                   000654   365+         LA    1,EXCP04
0005CA  58F0 0270                   000270   366+         L     15,LOD1BLST
0005CE  0DEF                                 367+         $BASR 14,15
0005D0  47FF C1CE                   0005D4   368          B     *+4(15)           Use the branch table to analyze return code
0005D4  47F0 C1E4                   0005EA   369          $B    MOVEREC           ..Success, move the directed record
0005D8  00000004                             370          DC    FL4'4'            ..Physical EOF should not occur for FBA device
0005DC  47F0 C26E                   000674   371          $B    DEVCSW            ..Error state
0005E0  47F0 C25E                   000664   372          $B    DEVNOAVL          ..Device busy, not avalable or invalid
0005E4  00000010                             373          DC    FL4'16'           ..Die here if ORB is invalid
0005E8  0000                                 374          DC    HL2'0'            Die here if unexpected return code



0005EA                                       376 MOVEREC  DS    0H    Move the directed record to its residence address
0005EA  58A4 0000                   000000   377          L     10,0(4)           Destination address of record's content
0005EE  153A                                 378          CLR   3,10              Will data from record overwrite boot loader?
0005F0  4720 C286                   00068C   379          BH    OVRWRITE          ..Yes, HWM higher than load address, quit now!
                                             380          LOADHL 9,4(4)           Size of record being loaded
ASMA Ver. 0.2.0  FBA BOOT LOADER - PROCESSING                                                       08 Sep 2020 06:14:14  Page    11

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

0005F4  BF93 4004                   000004   381+         ICM   9,B'0011',4(4)       Load halfword without sign extention
0005F8  1869                                 382          LR    6,9               Increment for cumulative program loaded
                                             383          VMOVE 10,8,DSTRCT=DESTRT
0005FA  18B9                                 384+         LR    10+1,8+1          Same size to the receiving location
0005FC  0EA8                                 385+         MVCL  10,8              Move directed record
0005FE  4710 C28E                   000694   386+         $BC   B'0001',DESTRT    Destructive overlap detected (CC=3), quit

000602  5E60 024C                   00024C   388          AL    6,LOD1BPLD        Increment loaded program size
000606  5060 024C                   00024C   389          ST    6,LOD1BPLD        Update the cumulative program size in LOD1

                                             391 * Determine if last record has been loaded
00060A  9180 4000                   000000   392          TM    0(4),X'80'        Bit 0 of destination address one?
00060E  4710 C21A                   000620   393          BO    CKSIZE            ..Yes, check if correct amount loaded
000612  1865                                 394          LR    6,5               Fetch the number of sectors read
000614  5E60 C2D6                   0006DC   395          AL    6,FRSTPSEC        Update starting sector for the next extent
000618  5060 C2D6                   0006DC   396          ST    6,FRSTPSEC  EXT - Update the FBA extent with new starting sector
00061C  47F0 C1C0                   0005C6   397          B     READLOOP          Read the next record.

                                             399 * Total bytes loaded should match what LOD1 says is the booted program size
000620  D503 0248 024C      000248  00024C   400 CKSIZE   CLC   LOD1BPLN,LOD1BPLD  Do the cumulative sizes match in LOD1?
000626  4770 C296                   00069C   401          BNE   CUMERROR           ..No, something went wrong, quit



                                             403 * Enter the boot loaded program...

                                             405          BOOTNTR
00062A  9180 0250                   000250   406+         TM    LOD1ENTR,X'80'     Is 31-bit addressing set in address?
00062E  4710 C29E                   0006A4   407+         BO    AMERROR            ..Yes, can not do that, so quit
000632  9101 0253                   000253   408+         TM    LOD1ENTR+3,X'01'   Is 64-bit addressing set in address?
000636  4710 C29E                   0006A4   409+         BO    AMERROR            ..Yes, can not do that either, quit
00063A  58F0 0250                   000250   410+         L     15,LOD1ENTR        Fetch entry point for booted program from LOD1
00063E  07FF                                 411+         BR    15                 Enter the booted program



                                             413 * Service NOOP SPB
000640                                       414          DS    0F
000640  00000000                             415 TEST00   DC    Y(NOOP),H'0'         Tests service functionality

                                             417 * Service IOINIT SPB
000644                                       418          DS    0F
000644  00010000 00000000                    419 INIT01   DC    Y(IOINIT),H'0',F'0'  Perform I/O initialization

                                             421 * Service QIOT SPB
00064C                                       422          DS    0F
00064C  00020000 00000000                    423 QUERY02  DC    Y(QIOT),H'0',F'0'    Locate the IPL device in the device table

                                             425 * Service ENADEV SPB
                                             426 *         DS    0F      This SPB is used for testing ENADEV service
                                             427 *ENADEV03 DC    Y(ENADEV),X'0110',X'00000000'  Add a device
ASMA Ver. 0.2.0  FBA BOOT LOADER - PROCESSING                                                       08 Sep 2020 06:14:14  Page    12

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

000654                                       429          DS    0F
                                             430 * Service EXCP SPB
000654  00040C00                             431 EXCP04   DC    Y(EXCP),AL1(SPBEWDC),XL1'0'
                                             432 EXCPORB  BLSORB CCW=FBACCW1
000658                                       434+EXCPORB  DS    0XL12
000658  00000000                             435+         DC    A(0)                         Word 0 - Interruption Parameter
00065C  00                                   436+         DC    AL1((0)*16+B'0000')          Word 1, bits 0-7
00065D  00                                   437+         DC    BL1'00000000'                Word 1, bits 8-15
00065E  FF                                   438+         DC    AL1(255)                     Word 1, bits 16-23
00065F  00                                   439+         DC    BL1'00000000'                 Word 1, bits 24-31
000660  000006C0                             440+         DC    AL4(FBACCW1)                 Word 2 - CCW address



                                             442 * End the bare-metal program with an error indicated in PSW
000664  9204 C301                   000707   443 DEVNOAVL MVI   DIE+7,X'04'   Code 004 device is not available
000668  8200 C2FA                   000700   444          LPSW  DIE
00066C  9208 C301                   000707   445 DEVBUSY  MVI   DIE+7,X'08'   Code 008 device is busy (no wait)
000670  8200 C2FA                   000700   446          LPSW  DIE
000674  920C C301                   000707   447 DEVCSW   MVI   DIE+7,X'0C'   Code 00C CSW stored in ASA
000678  8200 C2FA                   000700   448          LPSW  DIE
00067C  9210 C301                   000707   449 DEVUNKN  MVI   DIE+7,X'10'   Code 010 unexpected device caused I/O interruption
000680  8200 C2FA                   000700   450          LPSW  DIE
                                             451 *SERVERR  MVI   DIE+7,X'14'   Code 014 booted program may not call this service
                                             452 *         LPSW  DIE
000684  9218 C301                   000707   453 BADDEVT  MVI   DIE+7,X'18'   Code 018 IPL device type unsupported
000688  8200 C2FA                   000700   454          LPSW  DIE
00068C  921C C301                   000707   455 OVRWRITE MVI   DIE+7,X'1C'   Code 01C Overwriting boot loader
000690  8200 C2FA                   000700   456          LPSW  DIE
000694  9220 C301                   000707   457 DESTRT   MVI   DIE+7,X'20'   Code 020 Destructive overlap detected by MVCL
000698  8200 C2FA                   000700   458          LPSW  DIE
00069C  9224 C301                   000707   459 CUMERROR MVI   DIE+7,X'24'   Code 024 Cumulative booted program sizes do no match
0006A0  8200 C2FA                   000700   460          LPSW  DIE
0006A4  9228 C301                   000707   461 AMERROR  MVI   DIE+7,X'28'   Code 028 Can not change booted pgm addressing mode
0006A8  8200 C2FA                   000700   462          LPSW  DIE
0006AC  922C C301                   000707   463 ARCHBAD  MVI   DIE+7,X'2C'   Code 028 Incompatible assembled vs run-time archs
0006B0  8200 C2FA                   000700   464          LPSW  DIE

                                             466 * General Constants:
0006B4  00000001                             467 ONE      DC    F'1'      The constant 'one'.

                                             469 * I/O related information
0006B8  0000                                 470 IPLDEV   DC    XL2'0000'   IPL device address from I/O interrupt information


                                             472 *
                                             473 * FBA CCW chain used by the boot loader to read a directed record
                                             474 *
0006C0  630006D8 40000010                    475 FBACCW1  CCW   DEFN_EXT,EXTENT,CC,EXTENTL   Define extent for the read
0006C8  430006E8 40000008                    476 FBACCW2  CCW   LOC_DATA,LOCATE,CC,LOCATEL   Establish location for read
0006D0  42000000 00000000                    477 FBACCW3  CCW   READ,0,0,0                   Read the directed record
                                             478 *         CCW   NOP,0,0,1                    ..then a NOP.
ASMA Ver. 0.2.0  FBA BOOT LOADER - PROCESSING                                                       08 Sep 2020 06:14:14  Page    13

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             479 * If the preceding NOP CCW command is enabled, then the FBACCW3 must set
                                             480 * command chaining in the flag byte, setting the third operand to X'40'

                                             482 * FBA extent used for reading a directed record.  Unlike typical operations
                                             483 * where the extent is constant and the locate data changes, when reading
                                             484 * directed boot loader records, the extent changes and the locate information
                                             485 * remains unchanged.
0006D8  40000000                             486 EXTENT   DC    XL4'40000000'   Extent file mask: Inhibit all writes
0006DC  00000000                             487 FRSTPSEC DC    FL4'0'       ** Physical first sector of the extent
0006E0  00000000                             488 FRSTLSEC DC    FL4'0'          First logical sector of the extent, always 0
                                             489 * Last logical sector of the extent, always the same based upon record length
0006E4  00000000                             490 ENDLSEC  DC    FL4'0'
                            000010  000001   491 EXTENTL  EQU   *-EXTENT        Length of an FBA extent (16 bytes)
                                             492 * ** This field is adjusted for each read of a directed record.

                                             494 * FBA locate used for reading a directed record
0006E8  06                                   495 LOCATE   DC    XL1'06'         Read sector operation being performed
0006E9  00                                   496          DC    XL1'00'         Replication count ignored for read sector
0006EA  0000                                 497 LOCSECS  DC    HL2'0'          Number of sectors being read
0006EC  00000000                             498          DC    FL4'0'          First sector (relative to the extent), always 0
                            000008  000001   499 LOCATEL  EQU   *-LOCATE        Length of the FBA locate information (8 bytes)


                                             501 * PSW used by the boot loader
                                             502 PGMRS    DWAIT CODE=008     Restart New PSW trap.  Points to Restart Old PSW
0006F0  000A0000 00010008                    503+PGMRS    PSW   0,0,2,0,X'010008'


                                             505 * PSW's terminating program execution
                                             506 DONE     DWAITEND              Successful execution of the program
0006F8  000A0000 00000000                    508+DONE     PSW   0,0,2,0,X'000000'
                                             509 DIE      DWAIT PGM=05,CMP=0,CODE=000  Code set at run-time
000700  000A0000 00050000                    510+DIE      PSW   0,0,2,0,X'050000'
ASMA Ver. 0.2.0  BOOT LOADER - SERVICES                                                             08 Sep 2020 06:14:14  Page    14

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             512          COPY  'bls.asm'
                                             513 * Copyright (C) 2020 Harold Grovesteen
                                             514 *
                                             515 * This file is part of SATK.
                                             516 *
                                             517 *     SATK is free software: you can redistribute it and/or modify
                                             518 *     it under the terms of the GNU General Public License as published by
                                             519 *     the Free Software Foundation, either version 3 of the License, or
                                             520 *     (at your option) any later version.
                                             521 *
                                             522 *     SATK is distributed in the hope that it will be useful,
                                             523 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
                                             524 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                             525 *     GNU General Public License for more details.
                                             526 *
                                             527 *     You should have received a copy of the GNU General Public License
                                             528 *     along with SATK.  If not, see <http://www.gnu.org/licenses/>.
                                             529 *
                                             530 *
                                             531 * The Boot Loader Services Framework
                                             532 *

                                             534 BLS      SERVS  SERVTBL
000708                                       535+BLS      DS    0H   Boot Loader 32-bit services entry point
000708                      000000           536+         USING ASA,0          Address Assigned Storage area
000708                      000000           537+         USING SPB,1          Pointer to Service Parameter Block
000708                      000000           538+         USING SAVEA,13       Register save area from caller
000708  90EC D00C                   00000C   539+         $STM  14,12,SAVER14       Preserve caller's registers except R13
00070C  18CF                                 540+         $LR   12,15          Establish my local register
00070E                      000708           541+         USING BLS,12         ..and tell the assembler

                                             543+* Locate the service's entry point
00070E  4820 1000                   000000   544+         $LH   2,SPBID         Fetch the Service ID from the SPB
000712  BD21 0257                   000257   545+         CLM   2,B'0001',LOD1BLSV   Is ID valid? (Must be < LOD1 number)
000716  4740 C018                   000720   546+         $BL   CALLSRV         ..Yes, call the service then
00071A  11F2                                 547+         $LNR  15,2            Turn the Service ID into a negative value
00071C  47F0 C034                   00073C   548+         $B    BLSR            Return to caller with invalid Service ID

000720                                       550+CALLSRV  DS    0H              Call the actual service now
000720  8920 0002                   000002   551+         SLL   2,2             Turn Service ID into table displacement (x4)
000724  4122 C040                   000748   552+         LA    2,SERVTBL(2)    Turn displacement into an address
000728  BF2F 2000                   000000   554+         ICM   2,B'1111',0(2)       Load fullword and test the value
00072C  4770 C030                   000738   555+         $BNZ  BLSCALL         Table entry not zero, so can call it
000730  48F0 C03E                   000746   556+         $LH   15,BLSMONE      Set return code to negative one
000734  47F0 C034                   00073C   557+         $B    BLSR            ..and return to caller

000738                                       559+BLSCALL  DS    0H         Good address!
000738  18C2                                 560+         $LR   12,2       Set up base register for service routine
00073A  07FC                                 561+         BR    12         Go to the requested service (use as base register)

00073C                                       563+BLSR     DS    0H             Return to service caller from requested service
                                             564+* Return from called service has the caller's save area in R13
ASMA Ver. 0.2.0  BOOT LOADER - SERVICES                                                             08 Sep 2020 06:14:14  Page    15

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

00073C                      000000           565+         USING SAVEA,13
00073C  5000 D010                   000010   566+         $ST   0,SAVER15         Save return code in caller's save area
000740  98EC D00C                   00000C   567+         $LM   14,12,SAVER14     Restore caller's registers
                                             568+* Retrun is actually in R15 now
000744  07FE                                 569+         BR    14                Return to caller

000746  FFFF                                 571+BLSMONE  DC    H'-1'          Negative one used for empty service slot



                                             573 *
                                             574 * Boot Loader Service Table
                                             575 *

                                             577          BLSTABLE
000748  00000764                             579+SERVTBL  DC    A(SERVNOOP)
                            000000  000001   580+NOOP     EQU   0
00074C  00000790                             582+         DC    A(SERVIOIN)
                            000001  000001   583+IOINIT   EQU   1
000750  00000814                             585+         DC    A(SERVQIOT)
                            000002  000001   586+QIOT     EQU   2
000754  00000850                             588+         DC    A(SERVENAD)
                            000003  000001   589+ENADEV   EQU   3
000758  0000092C                             591+         DC    A(SERVEXCP)
                            000004  000001   592+EXCP     EQU   4
00075C  00000AF8                             594+         DC    A(SERVPEND)
                            000005  000001   595+PNDING   EQU   5
                            000006  000001   597+BLSNUM   EQU   6           Number of defined services



                                             599 * Register Contents at service entry
                                             600 *  R0  - unpredictable but usable (also ASA base register)
                                             601 *  R1  - Pointer to Service Parameter Block (passed by framework)
                                             602 *  R2  - unpredictable but usable (used by service framework as work register)
                                             603 *  R3  - unpredictable but usable
                                             604 *  R4  - unpredictable but usable
                                             605 *  R5  - unpredictable but usable
                                             606 *  R6  - unpredictable but usable
                                             607 *  R7  - unpredictable but usable
                                             608 *  R8  - unpredictable but usable
                                             609 *  R9  - unpredictable but usable
                                             610 *  R9  - unpredictable but usable
                                             611 *  R10 - unpredictable but usable
                                             612 *  R11 - unpredictable but usable
                                             613 *  R12 - The service's entry point (set by service framework, use as base)
                                             614 *  R13 - Pointer to service CALLER'S save area (passed by framework)
                                             615 *  R14 - unpredictable but usable
                                             616 *  R15 - unpredictable but usable
                                             617 *

                                             619 * Use LOD1RTN address to return to caller from the service.
ASMA Ver. 0.2.0  BOOT LOADER - SERVICES                                                             08 Sep 2020 06:14:14  Page    16

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             620 * Register usage on entry to SERVRTN
                                             621 *  R0 - Return code from service.  Framework will move it to R15
                                             622 *  R13 - Service caller's save area
                                             623 *  R15 - Address from LOD1RTN to return to framework
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 0 - NOOP                                                     08 Sep 2020 06:14:14  Page    17

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             625 *
                                             626 * Boot Loader Service - 0 - NOOP
                                             627 *

                                             629          SERVNOOP
000760                                       631+         DS    0F
000760  C2D3E200                             632+         DC    CL3'BLS',AL1(NOOP)
000764                                       633+SERVNOOP DS    0H             Start of service
000764                      000764           634+         USING SERVNOOP,12    Establish service addressing
000764                      000000           635+         USING ASA,0          Address the ASA
000764                      000000           636+         USING SPB,1          Address the SPB (address from framework)
000764                      000000           637+         USING SAVEA,13       Address caller's save area
                                             638+         LA    2,EOBL+(NOOPSAVE-DMEMORY) \
000764  4120 C454                   000BB8      +                                      Point to my save area
000768  5020 D008                   000008   639+         $ST   2,SAVEFWD      Save my save area address in caller's save area
00076C                                       640+         DROP  13             Forget caller's save area
00076C                      000000           641+         USING SAVEA,2        Now address MY save area
00076C  50D0 2004                   000004   642+         $ST   13,SAVEBCK     Preserve caller's R13 now in my save area
000770  18D2                                 643+         $LR   13,2           Now point save area to MY save area with R13
000772                                       644+         DROP  2
000772                      000000           645+         USING SAVEA,13       Re-establish addressing to my save area with R13
000772  48B0 1002                   000002   646+         $LH   11,SPBSI        Get the service information
000776  41B0 B001                   000001   647+         LA    11,1(,11)       Increment the service information by 1
00077A  40B0 1002                   000002   648+         STH   11,SPBSI        Set new value in service information
00077E  1B00                                 649+         $SR   0,0             Set the condition code to zero
000780                      000000           651+         USING SAVEA,13      On return, service points to its save area
000780  58D0 D004                   000004   652+         $L    13,SAVEBCK     Restore caller's save area address from service
                                             653+* R13 now points to the caller's registers
000784  58F0 0278                   000278   654+         L     15,LOD1RTN      Return to the framework for the return
000788                                       655+         DROP  0               Forget ASA
000788                                       656+         DROP  13              Forget any save area addressing as we leave
000788  07FF                                 657+         BR    15              Return now to the framework...

ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 1 - IOINIT                                                   08 Sep 2020 06:14:14  Page    18

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             660 *
                                             661 * Boot Loader Service - 1 - IOINIT
                                             662 *
                                             663 * Register Usage:
                                             664 *   R0 - Return Code
                                             665 *   R1 - Address of the INTHND SPB when used
                                             666 *   R3 - Used to point to caller's save area when booted program being checked
                                             667 *   R4 - Address of the IOINIT input SPB (from R1 entry contents)
                                             668 *   R5 - Start of I/O table address and table entry start
                                             669 *   R6 - I/O table entry length
                                             670 *   R7 - Address of the last byte of the I/O table itself
                                             671 *   R12 - Base register
                                             672 *   R15 - Return address to serivce framework

                                             674          SERVIOIN
00078C                                       676+         DS    0F
00078C  C2D3E201                             677+         DC    CL3'BLS',AL1(IOINIT)
000790                                       678+SERVIOIN DS    0H             Start of service
000790                      000790           679+         USING SERVIOIN,12    Establish service addressing
000790                      000000           680+         USING ASA,0          Address the ASA
000790                      000000           681+         USING SPB,1          Address the SPB (address from framework)
000790                      000000           682+         USING SAVEA,13       Address caller's save area
                                             683+         LA    2,EOBL+(IOINSAVE-DMEMORY) \
000790  4120 C470                   000C00      +                                      Point to my save area
000794  5020 D008                   000008   684+         $ST   2,SAVEFWD      Save my save area address in caller's save area
000798                                       685+         DROP  13             Forget caller's save area
000798                      000000           686+         USING SAVEA,2        Now address MY save area
000798  50D0 2004                   000004   687+         $ST   13,SAVEBCK     Preserve caller's R13 now in my save area
00079C  18D2                                 688+         $LR   13,2           Now point save area to MY save area with R13
00079E                                       689+         DROP  2
00079E                      000000           690+         USING SAVEA,13       Re-establish addressing to my save area with R13
                                             691+* Move input option to INTHND SPB for call
00079E  1841                                 692+         $LR   4,1              Need to free up R1 for I/O commands
0007A0                                       693+         DROP  1
0007A0                      000000           694+         USING SPB,4            Set new register for addressing input SPB

0007A0                                       696+IOIA0041 DS    0H    Add IPL Device to the I/O Table
0007A0  4160 C5D8                   000D68   697+         LA    6,EOBL+(IOTBL-DMEMORY)   Locate the start of the I/O table
0007A4  5060 C3D0                   000B60   698+         ST    6,IOTBLBA                Set up BXLE sum register
0007A8  5850 C3CC                   000B5C   699+         L     5,IOTMAX                 Fetch the length of the table
0007AC  1E56                                 700+         ALR   5,6                      Calculate the byte following the table
0007AE  5050 C3CC                   000B5C   701+         ST    5,IOTMAX                 Replace length with addresss
0007B2                      000000           702+         USING BLSIOT,6                 Point to the first entry.
                                             703+* Add the IPL device to the I/O Table
0007B2  4850 00BA                   0000BA   704+         $LH   5,IOICODE                Fetch the IPL device address
0007B6  4050 6000                   000000   705+         STH   5,BLSDEV                 Add the channel/unit address to IOTE
0007BA  5050 6004                   000004   706+         ST    5,BLSHDW                 Make it the hardware address too
0007BE  D200 6002 4002      000002  000002   707+         MVC   BLSTYP,SPBSI             Set device type from SPB SI

                                             709+* Generate the IPL device status error mask
0007C4  92F1 600C                   00000C   711+         MVI   BLSERR,X'F1'        This is the generic device error check
                                             712+* This checks for these error conditions:
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 1 - IOINIT                                                   08 Sep 2020 06:14:14  Page    19

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             713+*   X'80' - Attention (MAY BE TURNED OFF FOR SOME DEVICES)
                                             714+*   X'40' - Status Modifier
                                             715+*   X'20' - Control-Unit End
                                             716+*   X'10' - Busy
                                             717+*   X'01' - Unit Exception (MAY BE TURNED OFF FOR SOME DEVICES)
                                             718+*
                                             719+* While Unit Check is an error condition, it must be explicitly checked so
                                             720+* that the service can indicate a pending action to read sense data by the
                                             721+* program.  Yes, it is an error condition, but requires special handling.
                                             722+* When set, the service indicates both an error condition AND a pending action.
                                             723+*   X'02' - Unit Check (sense is pending)
                                             724+*
                                             725+* This ignores these normal status conditions.  They must be checked by the
                                             726+* service depending upon the EXCP SPB controls.
                                             727+*   X'08' - Channel end
                                             728+*   X'04' - Device end

                                             730+* If device recognizes physical end-of-file with Unit Exception, not an error
                                             731+* So turn it off.
0007C8  9180 6002                   000002   732+         TM    BLSTYP,BLSPEOF      Does device use UE for end-of-file condition?
0007CC  47E0 C044                   0007D4   733+         $BNO  ERRU0043            ..No, check if device uses ATTN
0007D0  94FE 600C                   00000C   734+         NI    BLSERR,X'FE'        ..Yes, turn off UE as an error status

                                             736+* If device signals data is ready with Attention, turn it off as an error.
0007D4  9140 6002                   000002   737+ERRU0043 TM    BLSTYP,BLSUNSOL     Does device use ATTN when data is ready?
0007D8  47E0 C050                   0007E0   738+         $BNO  ERRX0043            ..No, modifications to error status done
0007DC  947F 600C                   00000C   739+         NI    BLSERR,X'7F'        ..Yes, turn off ATTN as an error status

                                             741+* Note: At present no device uses UE for physical end-of-file and Attention
                                             742+* for data ready, but this code allows for both to be set in the device
                                             743+* class value.

0007E0                                       745+ERRX0043 DS    0H  Error mask completed
0007E0  5060 4004                   000004   746+         ST    6,SPBIOTA                Return to caller the IPL device's IOTA
0007E4                                       747+         DROP  6                        Done with the table for now
0007E4  4170 601F                   00001F   748+         LA    7,BLSIOEL-1(,6)          Add the entry length -1
0007E8  5070 C3D8                   000B68   749+         ST    7,IOTBLEA                Set up the BXLE comparand register
0007EC  B722 C07C                   00080C   750+         LCTL  2,2,INTMASK
0007F0  9201 4002                   000002   751+         MVI   SPBSI,X'01'          Indicate CCW Format 0 in use
0007F4  47F0 C070                   000800   752+         B     IOINRTN0             Return to my caller
0007F8  4100 0004                   000004   753+IOINRTN4 LA    0,4               Set return code 4 from service
0007FC  47F0 C072                   000802   754+         $B    IOINRTN           Return to caller
000800  1B00                                 755+IOINRTN0 $SR   0,0               Set return code from service
000802                                       756+         DROP  4                 Forget input SPB
000802                      000000           758+         USING SAVEA,13      On return, service points to its save area
000802  58D0 D004                   000004   759+IOINRTN  $L    13,SAVEBCK     Restore caller's save area address from service
                                             760+* R13 now points to the caller's registers
000806  58F0 0278                   000278   761+         L     15,LOD1RTN      Return to the framework for the return
00080A                                       762+         DROP  0               Forget ASA
00080A                                       763+         DROP  13              Forget any save area addressing as we leave
00080A  07FF                                 764+         BR    15              Return now to the framework...
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 1 - IOINIT                                                   08 Sep 2020 06:14:14  Page    20

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

00080C                                       766+         DS    0F      Make sure interruption mask is on a fullword boundary
00080C  FFFFFFFF                             767+INTMASK  DC    X'FFFFFFFF'      Enable all channels for interruptions
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 2 - QIOT                                                     08 Sep 2020 06:14:14  Page    21

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             769 *
                                             770 * Boot Loader Service - 2 - QIOT
                                             771 *
                                             772 * Register Usage:
                                             773 *   R0 - Return Code
                                             774 *   R1 - Address of the SPB and its extention
                                             775 *   R5 - Start of I/O table address and table entry start
                                             776 *   R6 - I/O table entry length
                                             777 *   R7 - Address of the last byte of the I/O table itself
                                             778 *   R12 - Base register
                                             779 *   R15 - Return address to serivce framework

                                             781          SERVQIOT
000810                                       783+         DS    0F
000810  C2D3E202                             784+         DC    CL3'BLS',AL1(QIOT)
000814                                       785+SERVQIOT DS    0H             Start of service
000814                      000814           786+         USING SERVQIOT,12    Establish service addressing
000814                      000000           787+         USING ASA,0          Address the ASA
000814                      000000           788+         USING SPB,1          Address the SPB (address from framework)
000814                      000000           789+         USING SAVEA,13       Address caller's save area
                                             790+         LA    2,EOBL+(QIOTSAVE-DMEMORY) \
000814  4120 C434                   000C48      +                                      Point to my save area
000818  5020 D008                   000008   791+         $ST   2,SAVEFWD      Save my save area address in caller's save area
00081C                                       792+         DROP  13             Forget caller's save area
00081C                      000000           793+         USING SAVEA,2        Now address MY save area
00081C  50D0 2004                   000004   794+         $ST   13,SAVEBCK     Preserve caller's R13 now in my save area
000820  18D2                                 795+         $LR   13,2           Now point save area to MY save area with R13
000822                                       796+         DROP  2
000822                      000000           797+         USING SAVEA,13       Re-establish addressing to my save area with R13
000822  1B00                                 798+         $SR   0,0                 Set return code to 0, optimistically
000824  9857 C34C                   000B60   799+         LM    5,7,IOTBLBA         Initialize the search registers
000828                      000000           800+         USING BLSIOT,5
000828                                       801+QIOTLOOP DS    0H                  Check the table entry device number
000828  D501 1002 5000      000002  000000   802+         CLC   SPBSI,BLSDEV         Is this the device being sought?
00082E  4780 C028                   00083C   803+         $BE   QIOFOUND             ..Yes, return the entry's address
000832  8756 C014                   000828   804+         $BXLE 5,6,QIOTLOOP         ..No, try again
                                             805+* Did not find the device in the table
000836  1850                                 806+         $LR   5,0                  Prepare to clear the SPBE
000838  4100 0004                   000004   807+         LA    0,4                  Set return code to 4 (not found)
00083C                                       808+QIOFOUND DS    0H      Found the entry
00083C  5050 1004                   000004   809+         ST    5,SPBIOTA     Return the entry address in the SPBE or zero
000840                                       810+         DROP  5
000840                      000000           812+         USING SAVEA,13      On return, service points to its save area
000840  58D0 D004                   000004   813+QIORETRN $L    13,SAVEBCK     Restore caller's save area address from service
                                             814+* R13 now points to the caller's registers
000844  58F0 0278                   000278   815+         L     15,LOD1RTN      Return to the framework for the return
000848                                       816+         DROP  0               Forget ASA
000848                                       817+         DROP  13              Forget any save area addressing as we leave
000848  07FF                                 818+         BR    15              Return now to the framework...
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 3 - ENADEV                                                   08 Sep 2020 06:14:14  Page    22

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             820 *
                                             821 * Boot Loader Service - 3 - ENADEV
                                             822 *
                                             823 * Register Usage:
                                             824 *   R0 - Return Code
                                             825 *   R1 - Hardware device address for I/O commands
                                             826 *   R2 - Address of the new table entry
                                             827 *   R3 - New end of the I/O Table after entry is added
                                             828 *   R4 - Address of the SPB and its extention
                                             829 *   R5 - Address of the existing I/O Table entry of the device
                                             830 *   R6 - Location where channel subsystem SCHIB's are stored
                                             831 *   R12 - Base register
                                             832 *   R15 - Return address to serivce framework

                                             834          SERVENAD
00084C                                       836+         DS    0F
00084C  C2D3E203                             837+         DC    CL3'BLS',AL1(ENADEV)
000850                                       838+SERVENAD DS    0H             Start of service
000850                      000850           839+         USING SERVENAD,12    Establish service addressing
000850                      000000           840+         USING ASA,0          Address the ASA
000850                      000000           841+         USING SPB,1          Address the SPB (address from framework)
000850                      000000           842+         USING SAVEA,13       Address caller's save area
                                             843+         LA    2,EOBL+(ENADSAVE-DMEMORY) \
000850  4120 C440                   000C90      +                                      Point to my save area
000854  5020 D008                   000008   844+         $ST   2,SAVEFWD      Save my save area address in caller's save area
000858                                       845+         DROP  13             Forget caller's save area
000858                      000000           846+         USING SAVEA,2        Now address MY save area
000858  50D0 2004                   000004   847+         $ST   13,SAVEBCK     Preserve caller's R13 now in my save area
00085C  18D2                                 848+         $LR   13,2           Now point save area to MY save area with R13
00085E                                       849+         DROP  2
00085E                      000000           850+         USING SAVEA,13       Re-establish addressing to my save area with R13
00085E                                       851+         DROP  1
00085E  1841                                 852+         $LR   4,1              Need to free up R1 for I/O commands
000860                      000000           853+         USING SPB,4            Set new register for addressing SPB
000860  1B00                                 854+         SR    0,0              Set return code to 0, optimistically

                                             856+* Determine if device is already in the table
000862  D201 C0D0 4002      000920  000002   857+         MVC   ENAQIOT+2,SPBSI   Set device address in my QIOT
000868  4110 C0CE                   00091E   859+         LA    1,ENAQIOT
00086C  58F0 0270                   000270   860+         L     15,LOD1BLST
000870  0DEF                                 861+         $BASR 14,15
000872  12FF                                 862+         LTR   15,15        Test the QIOT return code
000874  4770 C04A                   00089A   863+         BNZ   ENADADD      ..Not found, so device eligible for being added

                                             865+* Make sure the device class is the same
000878  5850 C0D2                   000922   866+         L     5,ENAQIOT+SPBIOTA   Fetch the address of the existing entry
00087C  D500 4004 5002      000004  000002   867+         CLC   SPBDCLS,BLSTYP-BLSIOT(5)  Do the device classes match?
000882  4780 C03E                   00088E   868+         $BE   ENADOK           ..Yes, just return the address
                                             869+* Device class does not match
000886  4100 0014                   000014   870+         LA    0,20             Set return code of 20
00088A  47F0 C0C4                   000914   871+         $B    ENADRTN          Return to caller
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 3 - ENADEV                                                   08 Sep 2020 06:14:14  Page    23

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

00088E                                       873+ENADOK   DS    0H   Simply return with the I/O Table address
00088E  5050 4004                   000004   874+         ST    5,SPBIOTA
000892  4100 0004                   000004   875+         LA    0,4              Set return address to 4
000896  47F0 C0C4                   000914   876+         $B    ENADRTN

00089A                                       878+ENADADD  DS    0H   Try to add the device to the table
00089A  5820 C318                   000B68   879+         L     2,IOTBLEA        Locate the current end of the table
00089E  1832                                 880+         LR    3,2              Calculate the new end of the table
0008A0  5E30 C314                   000B64   881+         AL    3,IOTBLI         New ending address for new table entry
0008A4  5530 C30C                   000B5C   882+         CL    3,IOTMAX         Did we go beyond the end of the table?
0008A8  4740 C064                   0008B4   883+         $BL   ENADTEST         ..No, good to go (room to add new entry)
0008AC  4100 0010                   000010   884+         LA    0,16             ..Yes, return with 16 return code, table full
0008B0  47F0 C0C4                   000914   885+         $B    ENADRTN          Quit now.

0008B4                                       887+ENADTEST DS    0H   Test if the device is usable.
0008B4  4120 2001                   000001   888+         LA    2,1(,2)          Point to the table entry being added
0008B8                      000000           889+         USING BLSIOT,2         Set up addressing for the new I/O Table entry
0008B8  4810 4002                   000002   890+         LH    1,SPBSI          Fetch the device number (also hardware address)
0008BC  9D00 1000                   000000   891+         TIO   0(1)             Test if the device is available or not.
                                             892+* CC==0 (device available) add it to the I/O Table
0008C0  4780 C092                   0008E2   893+         BC    B'1000',ENADGOOD
                                             894+* CC==1 (CSW stored in ASA) error status available
0008C4  4740 C07C                   0008CC   895+         BC    B'0100',ENADERR
                                             896+* CC==2 (device or channel busy)
                                             897+*        BC    B'0010', FALL THROUGH
                                             898+* CC==3 (not operational)
                                             899+*        BC    B'0001', FALL THROUGH
0008C8  47F0 C08A                   0008DA   900+         B     ENADNOAV

0008CC                                       902+ENADERR  DS    0H       Error status, return code 8
0008CC  D201 4006 0044              000044   903+         MVC   SPBDEVST(2),CSW+4   Move error data to SPBE
0008D2  4100 0008                   000008   904+         LA    0,8                 Exit with return code 8
0008D6  47F0 C0C4                   000914   905+         $B    ENADRTN

                                             907+ENADNOAV DS    0H \
0008DA                                          +                 Device is invalid
0008DA  4100 000C                   00000C   908+         LA    0,12     Return with condition code 12
0008DE  47F0 C0C4                   000914   909+         $B    ENADRTN

0008E2                                       911+ENADGOOD DS    0H  Add the channel device to the table...
0008E2  4010 2000                   000000   912+         STH   1,BLSDEV            Set I/O Table device number
0008E6  5010 2004                   000004   913+         ST    1,BLSHDW            Set I/O Table hardware address
0008EA  D200 2002 4004      000002  000004   914+         MVC   BLSTYP,SPBDCLS      Set the device class in the entry

                                             916+* Create the device error mask from the device class entry
0008F0  92F1 200C                   00000C   918+         MVI   BLSERR,X'F1'        This is the generic device error check
                                             919+* This checks for these error conditions:
                                             920+*   X'80' - Attention (MAY BE TURNED OFF FOR SOME DEVICES)
                                             921+*   X'40' - Status Modifier
                                             922+*   X'20' - Control-Unit End
                                             923+*   X'10' - Busy
                                             924+*   X'01' - Unit Exception (MAY BE TURNED OFF FOR SOME DEVICES)
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 3 - ENADEV                                                   08 Sep 2020 06:14:14  Page    24

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             925+*
                                             926+* While Unit Check is an error condition, it must be explicitly checked so
                                             927+* that the service can indicate a pending action to read sense data by the
                                             928+* program.  Yes, it is an error condition, but requires special handling.
                                             929+* When set, the service indicates both an error condition AND a pending action.
                                             930+*   X'02' - Unit Check (sense is pending)
                                             931+*
                                             932+* This ignores these normal status conditions.  They must be checked by the
                                             933+* service depending upon the EXCP SPB controls.
                                             934+*   X'08' - Channel end
                                             935+*   X'04' - Device end

                                             937+* If device recognizes physical end-of-file with Unit Exception, not an error
                                             938+* So turn it off.
0008F4  9180 2002                   000002   939+         TM    BLSTYP,BLSPEOF      Does device use UE for end-of-file condition?
0008F8  47E0 C0B0                   000900   940+         $BNO  ERRU0051            ..No, check if device uses ATTN
0008FC  94FE 200C                   00000C   941+         NI    BLSERR,X'FE'        ..Yes, turn off UE as an error status

                                             943+* If device signals data is ready with Attention, turn it off as an error.
000900  9140 2002                   000002   944+ERRU0051 TM    BLSTYP,BLSUNSOL     Does device use ATTN when data is ready?
000904  47E0 C0BC                   00090C   945+         $BNO  ERRX0051            ..No, modifications to error status done
000908  947F 200C                   00000C   946+         NI    BLSERR,X'7F'        ..Yes, turn off ATTN as an error status

                                             948+* Note: At present no device uses UE for physical end-of-file and Attention
                                             949+* for data ready, but this code allows for both to be set in the device
                                             950+* class value.

00090C                                       952+ERRX0051 DS    0H  Error mask completed

00090C                                       954+ENADSSPB DS    0H   Update the SPBE with the entry's address
00090C  5020 4004                   000004   955+         ST    2,SPBIOTA           Set the I/O Table entry address in SPBE
                                             956+* Officially add the entry to the table
000910  5030 C318                   000B68   957+         ST    3,IOTBLEA           Update the end of the table
000914                      000000           959+         USING SAVEA,13      On return, service points to its save area
000914  58D0 D004                   000004   960+ENADRTN  $L    13,SAVEBCK     Restore caller's save area address from service
                                             961+* R13 now points to the caller's registers
000918  58F0 0278                   000278   962+         L     15,LOD1RTN      Return to the framework for the return
00091C                                       963+         DROP  0               Forget ASA
00091C                                       964+         DROP  13              Forget any save area addressing as we leave
00091C  07FF                                 965+         BR    15              Return now to the framework...

00091E  00020000 00000000                    967+ENAQIOT  DC    Y(QIOT),H'0',F'0'  Check to see if device in table
000926  0000
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 4 - EXCP                                                     08 Sep 2020 06:14:14  Page    25

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             969 *
                                             970 * Boot Loader Service - 4 - EXCP
                                             971 *
                                             972 * SPB:
                                             973 *      SPB Bytes 0,1   - EXCP Service ID (4)
                                             974 *      SPB Byte 2      - SI EXCP input function control mask (See SPB DSECT)
                                             975 *      SPB Byte 3      - not used
                                             976 *      SPB Bytes 4-7   - ORB - I/O Table device entry address
                                             977 *      SPB Bytes 8-11  - ORB - Key and flags
                                             978 *      SPB Bytes 12-15 - ORB - CCW program starting address
                                             979 *
                                             980 * Register Usage:
                                             981 *   R0 - Return Code
                                             982 *   R1 - Hardware device address for I/O commands (from I/O Table)
                                             983 *   R2 -
                                             984 *   R3 - I/O Error execution register
                                             985 *   R4 - Address of the SPB and its extention (the ORB)
                                             986 *   R5 - Address of the primary device IOT entry
                                             987 *   R6 - Interrupting device I/O Table entry (may not be the R5 entry)
                                             988 *   R7 - Start of I/O table address and table entry start --------+
                                             989 *        When found this becomes the secondary device IOT address |
                                             990 *   R8 - I/O table entry length                                   |-- BXLE
                                             991 *   R9 - Address of the last byte of the I/O table itself --------+
                                             992 *   R12 - Base register
                                             993 *   R15 - Return address to serivce framework
                                             994 *

                                             996 SERVEXCP SERVEXCP
000928                                       998+         DS    0F
000928  C2D3E204                             999+         DC    CL3'BLS',AL1(EXCP)
00092C                                      1000+SERVEXCP DS    0H             Start of service
00092C                      00092C          1001+         USING SERVEXCP,12    Establish service addressing
00092C                      000000          1002+         USING ASA,0          Address the ASA
00092C                      000000          1003+         USING SPB,1          Address the SPB (address from framework)
00092C                      000000          1004+         USING SAVEA,13       Address caller's save area
                                            1005+         LA    2,EOBL+(EXCPSAVE-DMEMORY) \
00092C  4120 C3AC                   000CD8      +                                      Point to my save area
000930  5020 D008                   000008  1006+         $ST   2,SAVEFWD      Save my save area address in caller's save area
000934                                      1007+         DROP  13             Forget caller's save area
000934                      000000          1008+         USING SAVEA,2        Now address MY save area
000934  50D0 2004                   000004  1009+         $ST   13,SAVEBCK     Preserve caller's R13 now in my save area
000938  18D2                                1010+         $LR   13,2           Now point save area to MY save area with R13
00093A                                      1011+         DROP  2
00093A                      000000          1012+         USING SAVEA,13       Re-establish addressing to my save area with R13
00093A                                      1013+         DROP  1
00093A  1841                                1014+         $LR   4,1     Free up R1 for I/O commands and preserve SPB
00093C                      000000          1015+         USING SPB,4
00093C  1F00                                1016+         $SLR  0       Set the return code to 0, optimistically

                                            1018+*
                                            1019+* Validate the ORB
                                            1020+*
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 4 - EXCP                                                     08 Sep 2020 06:14:14  Page    26

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

00093E  D503 4004 C234      000004  000B60  1021+         CLC   SPBEORBT,IOTBLBA     Is the I/O Table address below table?
000944  4740 C192                   000ABE  1022+         $BL   EXCP16RC             ..Yes, not a valid address
000948  D503 4004 C23C      000004  000B68  1023+         CLC   SPBEORBT,IOTBLEA     Is the address beyond the table?
00094E  4720 C192                   000ABE  1024+         $BH   EXCP16RC             ..Yes, not a valid address
000952  9103 4007                   000007  1025+         TM    SPBEORBT+3,X'03'     Is the address on a full word?
000956  4770 C192                   000ABE  1026+         $BNZ  EXCP16RC             ..No, not a valid address
00095A  910F 4008                   000008  1027+         TM    SPBEORBK,SPBEORBR    Are bits 4-7 of the key field zeros?
00095E  4770 C192                   000ABE  1028+         $BNZ  EXCP16RC             ..No, not valid for an ORB
000962  9500 4009                   000009  1029+         CLI   SPBEORB1,X'00'       Is the F flag zero (and the rest zeros)?
000966  4770 C192                   000ABE  1030+         $BNE  EXCP16RC             ..No, not a valid flag setting
00096A  9500 400B                   00000B  1031+         CLI   SPBEORB2,X'00'       Is byte 3 of word 1 zero?
00096E  4770 C192                   000ABE  1032+         $BNE  EXCP16RC             ..No, not valid for an ORB



                                            1034+*
                                            1035+* STEP 1 - Start I/O operations for the device
                                            1036+*
000972  D200 C1C6 4002      000AF2  000002  1037+         MVC   PDEVENDS,SPBECTL     Move the SPB SI control mask
000978  940C C1C6                   000AF2  1038+         NI    PDEVENDS,PDEVENDM    Isolate channel end and device end bits
                                            1039+* This mask will be used to determine when the primary device is done

00097C  9180 4002                   000002  1041+         TM    SPBECTL,SPBEBY1      Is the channel program bypassed?
000980  4710 C090                   0009BC  1042+         $BO   EXCPDOWT             ..Yes, go to step 2, waiting
000984  D502 400D C1BC      00000D  000AE8  1043+         CLC   SPBEORBP,EXCPZERO    Is channel program address missing?
00098A  4780 C192                   000ABE  1044+         $BE   EXCP16RC             ..Yes, not valid for this ORB

00098E  5850 4004                   000004  1046+         L     5,SPBEORBT           Fetch the I/O Table entry address from ORB
000992                      000000          1047+         USING BLSIOT,5             Address the entry
                                            1048+* NEED TO CHECK FOR BUSY STATE
000992  D200 0048 4008      000048  000008  1049+         MVC   CAWKEY,SPBEORBK      Move the key to the CAW in ASA
000998  D202 0049 400D      000049  00000D  1050+         MVC   CAWADDR,SPBEORBP     Move the CCW address to the CAW in ASA
00099E  D201 5008 C1BC      000008  000AE8  1051+         MVC   BLSUNCH,EXCPZERO     Clear the status field to zeros
0009A4  5810 5004                   000004  1052+         L     1,BLSHDW             Fetch the device's hardware address

                                            1054+* Try to start the I/O at the primary device
0009A8  9C00 1000                   000000  1055+         SIO   0(1)     Request device channel program to start, did it?
0009AC  4740 C186                   000AB2  1056+         BC    B'0100',EXCP12RC     ..No, CC=1 device not available
0009B0  4720 C186                   000AB2  1057+         BC    B'0010',EXCP12RC     ..No, CC=2 device or channel is busy
0009B4  4710 C17A                   000AA6  1058+         BC    B'0001',EXCP08RC     ..No, CC=3 CSW stored in ASA at X'40'
                                            1059+* I/O Started - busy with my work.  Indicate the device is busy...
0009B8  9280 5003                   000003  1060+         MVI   BLSTATUS,BLSBUSY     ..and clear other status bits



                                            1062+*
                                            1063+* STEP 2 - Wait for I/O Operation to complete with an interruption
                                            1064+*
0009BC                                      1065+EXCPDOWT DS    0H   Wait for an interrupt from a device
0009BC  D207 0078 C1AC              000AD8  1066+         MVC   IONPSW(8),EXCPCONT   Set up new PSW for after I/O interrupt
0009C2  8200 C1A4                   000AD0  1067+         $LPSW EXCPWAIT   Wait for I/O interruption and CSW from channel
                            0009C6  000001  1068+EXCPDONE EQU   *          EXCP continues here after I/O interruption
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 4 - EXCP                                                     08 Sep 2020 06:14:14  Page    27

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

0009C6  D207 0078 C1B4              000AE0  1069+         MVC   IONPSW(8),EXCPTRAP   Restore I/O trap PSW
                                            1070+* Determine if an unexpected interrupt occurred
0009CC  BD13 00BA                   0000BA  1071+         CLM   1,B'0011',IOICODE   Is the interrupt from the primary device?
0009D0  4770 C0B2                   0009DE  1072+         BNE   EXCPFIND       ..No, find the secondary device's IOT entry
0009D4  9201 C240                   000B6C  1073+         MVI   INTSRC,INTPRI  ..Yes, remember it is the primary device
0009D8  1875                                1074+         LR    7,5            Set up R7 for IOT entry base, as used below
0009DA  47F0 C0D0                   0009FC  1075+         B     EXCPMVST       Move it to the primary device IOT entry
0009DE                                      1076+         DROP  5

                                            1078+*
                                            1079+* Locate the secondary interrupting device IOT entry from its hardware address
                                            1080+*
0009DE  9879 C234                   000B60  1081+EXCPFIND LM    7,9,IOTBLBA         Initialize the search registers
0009E2                      000000          1082+         USING BLSIOT,7
                                            1083+*Same logic as in QIOT service, except looking for hardware address
0009E2                                      1084+EXCPQIOT DS    0H
0009E2  D501 00BA 7006      0000BA  000006  1085+         CLC   IOICODE,BLSHDW+2     Is this the primary device?
0009E8  4780 C0CC                   0009F8  1086+         $BE   EXCPFNDS             ..Yes, found the secondary device
0009EC  8778 C0B6                   0009E2  1087+         $BXLE 7,8,EXCPQIOT         ..No, try another device
                                            1088+* Did not find the device in the table, so can not be the expected device
                                            1089+* Only devices in the table are processable here, so ignore unknown device
0009F0  9200 C240                   000B6C  1090+         MVI   INTSRC,X'00'   From an unknown device
0009F4  47F0 C090                   0009BC  1091+         $B    EXCPDOWT       Try for an interrupt from the primary device
0009F8  9202 C240                   000B6C  1092+EXCPFNDS MVI   INTSRC,INTSEC  Remember the interrupt is from a secondary device

0009FC                                      1094+EXCPMVST DS    0H    Move the status to the found IOT entry
                                            1095+* Clear unused bytes
0009FC  D203 7011 C1BC              000AE8  1096+         MVC   BLSSW+1(4),EXCPZERO
                                            1097+* Move the CSW flag
000A02  D200 7010 0040              000040  1098+         MVC   BLSSW+(SCSWFLAG-SCSW)(L'SCSWFLAG),CSW+(CSWFLAG-CSWFMT)
                                            1099+* Move the CSW CCW address, status, and residual count fields
000A08  D206 7015 0041              000041  1100+         MVC   BLSSW+(SCSWCCW+SCSW)+1(7),CSW+(CSWCCW-CSWFMT)

                                            1102+* Accumulate the status for this device
000A0E  D601 7008 7018      000008  000018  1103+         OC    BLSUNCH,BLSSW+(SCSWUS-SCSW)
000A14  9602 7003                   000003  1104+         OI    BLSTATUS,BLSTATS       BLSUNCH has status



                                            1106+*
                                            1107+* STEP 3 - Analyze Status (from either expected or unexpected device)
                                            1108+*
000A18                                      1109+EXCPANAL DS    0H   Analyze status in the IOT entry
000A18  9102 7003                   000003  1110+         TM    BLSTATUS,BLSTATS    Status in the IOT entry?
000A1C  4710 C0F6                   000A22  1111+         $BO   *+6                 ..Yes, keep going
000A20  0000                                1112+         DC    H'0'                ..No, should have status here.  DIE!

                                            1114+* Determine if unsolicited status normal for this device
000A22  9140 7002                   000002  1115+         TM    BLSTYP,BLSUNSOL     Does the device generate unsolicited ATTN?
000A26  47E0 C11C                   000A48  1116+         $BNO  EXCPSOL             ..No, so solicited status
000A2A  9180 7008                   000008  1117+         TM    BLSUNIT,BLSATTN     ..Yes, so is this an ATTN?
000A2E  47E0 C11C                   000A48  1118+         BNO   EXCPSOL     ..No, so assume solicited status for primary device
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 4 - EXCP                                                     08 Sep 2020 06:14:14  Page    28

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

000A32  9204 700B                   00000B  1119+         MVI   BLSACT,BLSREAD      ..Yes, indicate this device needs a read
000A36  9620 7003                   000003  1120+         OI    BLSTATUS,BLSTATO    There is a pending action for this device
000A3A  9201 4003                   000003  1121+         MVI   SPBPEND,SPBPENDG    Tell the program some device needs action
000A3E  1557                                1122+         $CLR  5,7                 Is this the primary device?
000A40  4770 C090                   0009BC  1123+         $BNE  EXCPDOWT            ..No, try for another interrupt

                                            1125+* Primary device sent Attention status.  So, return code is 0
000A44                                      1126+         DROP  7                   Forget interrupting device entry
000A44  47F0 C164                   000A90  1127+         B     EXCP00RC            Return code 0

000A48                                      1129+EXCPSOL  DS    0H      Determine primary device's state
000A48                      000000          1130+         USING BLSIOT,5
000A48  9500 5009                   000009  1131+         CLI   BLSCH,X'00'         Did a channel error occur?
000A4C  4770 C17A                   000AA6  1132+         $BNE  EXCP08RC            ..Yes, indicate an error condition
000A50  4330 500C                   00000C  1133+         IC    3,BLSERR            Fetch the error mask for the device
000A54  4430 C1C2                   000AEE  1134+         EX    3,EXCPDERR          ..Did a general device error occur?
000A58  4770 C17A                   000AA6  1135+         $BNZ  EXCP08RC            ..Yes, return with 8 as return code

000A5C  9102 5008                   000008  1137+         TM    BLSUNIT,SCSWUC      Did a Unit Check occur?
000A60  47E0 C148                   000A74  1138+         $BNO  EXCPSOLE            ..No, check for possible EOF condition
000A64  9200 500B                   00000B  1139+         MVI   BLSACT,BLSRDSN      ..Yes, indicate this device has sense data
000A68  9201 4003                   000003  1140+         MVI   SPBPEND,SPBPENDG    Tell the program some device needs action
000A6C  9620 5003                   000003  1141+         OI    BLSTATUS,BLSTATO    There is a pending action for this device
000A70  47F0 C17A                   000AA6  1142+         $B    EXCP08RC            Also indicate the primary device has error.

000A74                                      1144+EXCPSOLE DS    0H     Determine if ending status is good
                                            1145+* Determine if the device ended as expected
                                            1146+* Checking termination settings from input SPBSI
000A74  4330 C1C6                   000AF2  1147+         IC    3,PDEVENDS          Fetch the ending mask for the operation
000A78  4430 C1C2                   000AEE  1148+         EX    3,EXCPDERR          Did device end?
000A7C  47E0 C090                   0009BC  1149+         $BNO  EXCPDOWT            ..No, wait for another interrupt
000A80  9180 5002                   000002  1150+         TM    BLSTYP,BLSPEOF      Does device detect physcial end-of-file?
000A84  47E0 C164                   000A90  1151+         $BNO  EXCP00RC            ..No, return code 0
000A88  9101 5008                   000008  1152+         TM    BLSUNIT,SCSWUX      Did Unit Exception occur?
000A8C  4710 C16E                   000A9A  1153+         $BO   EXCP04RC            ..Yes, return code 4
000A90                      000000          1154+         USING BLSIOT,5            Return to the caller with return code 0
                                            1155+*
                                            1156+* Return to service caller with primary device return code
                                            1157+*
000A90                                      1158+EXCP00RC DS    0H   Primary device successful
000A90  947F 5003                   000003  1159+         NI    BLSTATUS,X'FF'-BLSBUSY    Turn off busy flag
000A94  1F00                                1160+         $SLR  0,0               Set return code to 0
000A96  47F0 C196                   000AC2  1161+         $B    EXCPRCAL

000A9A                                      1163+EXCP04RC DS    0H   Primary device detected physical end-of-file condition
000A9A  947F 5003                   000003  1164+         NI    BLSTATUS,X'FF'-BLSBUSY    Turn off busy flag
000A9E  4100 0004                   000004  1165+         LA    0,4                Set return code to 4
000AA2  47F0 C196                   000AC2  1166+         $B    EXCPRCAL
000AA6                                      1167+EXCP08RC DS    0H   Primary device is in an error condition
000AA6  947F 5003                   000003  1168+         NI    BLSTATUS,X'FF'-BLSBUSY    Turn off busy flag
000AAA  4100 0008                   000008  1169+         LA    0,8                Set return code to 8
000AAE  47F0 C196                   000AC2  1170+         $B    EXCPRCAL
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 4 - EXCP                                                     08 Sep 2020 06:14:14  Page    29

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT


000AB2                                      1172+EXCP12RC DS    0H   Device not available
000AB2  947F 5003                   000003  1173+         NI    BLSTATUS,X'FF'-BLSBUSY    Turn off busy flag
000AB6  4100 000C                   00000C  1174+         LA    0,12                Set return code to 12
000ABA  47F0 C196                   000AC2  1175+         $B    EXCPRCAL

000ABE                                      1177+EXCP16RC DS    0H   Return invalid ORB
000ABE  4100 0010                   000010  1178+         LA    0,16                Set return code to 16

000AC2                                      1180+         DROP  4
000AC2                                      1181+         DROP  5

                                            1183+*
                                            1184+* Return to service caller
                                            1185+*
000AC2                      000000          1187+         USING SAVEA,13      On return, service points to its save area
000AC2  58D0 D004                   000004  1188+EXCPRCAL $L    13,SAVEBCK     Restore caller's save area address from service
                                            1189+* R13 now points to the caller's registers
000AC6  58F0 0278                   000278  1190+         L     15,LOD1RTN      Return to the framework for the return
000ACA                                      1191+         DROP  0               Forget ASA
000ACA                                      1192+         DROP  13              Forget any save area addressing as we leave
000ACA  07FF                                1193+         BR    15              Return now to the framework...

000AD0  020A0000 00000000                   1195+EXCPWAIT PSW   2,0,2,0,0          Causes CPU to wait for I/O interruption
000AD8  00080000 000009C6                   1196+EXCPCONT PSW   0,0,0,0,EXCPDONE   Causes the CPU to continue after waiting
000AE0  000A0000 00000038                   1197+EXCPTRAP PSW   0,0,2,0,X'38'      I/O trap New PSW (restored after I/O)
000AE8  00000000                            1198+EXCPZERO DC    F'0'               A constant of zeros
000AEC  0001                                1199+EXCPONE  DC    H'1'               A constant of one

                                            1201+* These two locations detect device errors for a specific device type
                                            1202+* The device type implies the EXCPDEMK content.
000AEE                      000000          1203+         USING BLSIOT,5    Set addressing for executed instruction
000AEE  9100 5008                   000008  1204+EXCPDERR TM    BLSUNIT,0   Executed to detect device errors or ending status
000AF2                                      1205+         DROP  5

                                            1207+* Successful primary device unit status mask (driven by EXCP SPB SI data)
000AF2  00                                  1208+PDEVENDS DC    XL1'00'            Primary unit status mask success
                            00000C  000001  1209+PDEVENDM EQU   X'0C'    Isolate the Channel End and Device status bits
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 5 - PNDING                                                   08 Sep 2020 06:14:14  Page    30

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                            1211 *
                                            1212 * Boot Loader Service - 5 - PNDING
                                            1213 *
                                            1214 * Register Usage:
                                            1215 *   R0 - Return Code
                                            1216 *   R1 - AVAILABLE
                                            1217 *   R2 - AVAILABLE
                                            1218 *   R3 - AVAILABLE
                                            1219 *   R4 - Address of the SPB and its extention
                                            1220 *   R5 - AVAILABLE
                                            1221 *   R6 - AVAILABLE
                                            1222 *   R7 - Start of I/O table address and table entry start --------+
                                            1223 *        When found this becomes the secondary device IOT address |
                                            1224 *   R8 - I/O table entry length                                   |-- BXLE
                                            1225 *   R9 - Address of the last byte of the I/O table itself --------+
                                            1226 *   R10 - AVAILABLE
                                            1227 *   R11 - AVAILABLE
                                            1228 *   R12 - Base register
                                            1229 *   R15 - Return address to serivce framework
                                            1230 *

                                            1232          SERVPEND
000AF4                                      1234+         DS    0F
000AF4  C2D3E205                            1235+         DC    CL3'BLS',AL1(PNDING)
000AF8                                      1236+SERVPEND DS    0H             Start of service
000AF8                      000AF8          1237+         USING SERVPEND,12    Establish service addressing
000AF8                      000000          1238+         USING ASA,0          Address the ASA
000AF8                      000000          1239+         USING SPB,1          Address the SPB (address from framework)
000AF8                      000000          1240+         USING SAVEA,13       Address caller's save area
                                            1241+         LA    2,EOBL+(PENDSAVE-DMEMORY) \
000AF8  4120 C228                   000D20      +                                      Point to my save area
000AFC  5020 D008                   000008  1242+         $ST   2,SAVEFWD      Save my save area address in caller's save area
000B00                                      1243+         DROP  13             Forget caller's save area
000B00                      000000          1244+         USING SAVEA,2        Now address MY save area
000B00  50D0 2004                   000004  1245+         $ST   13,SAVEBCK     Preserve caller's R13 now in my save area
000B04  18D2                                1246+         $LR   13,2           Now point save area to MY save area with R13
000B06                                      1247+         DROP  2
000B06                      000000          1248+         USING SAVEA,13       Re-establish addressing to my save area with R13
000B06  1B00                                1249+         $SR   0,0                 Set return code to 0, optimistically
                                            1250+*         ICM   5,B'1111',SPBIOTA   Was an IOT address supplied?
000B08  BF5F 1004                   000004  1252+         ICM   5,B'1111',SPBIOTA    Load fullword and test the value
000B0C  4780 C024                   000B1C  1253+         $BZ   PNDSRCH             ..No entry address, so search the table
000B10                      000000          1254+         USING BLSIOT,5            Address the IOT entry
000B10  9120 5003                   000003  1255+         TM    BLSTATUS,BLSTATO    Does device have a pending action?
000B14  4710 C038                   000B30  1256+         $BO   PNDINGD             ..Yes, need to report to the program
000B18  47F0 C050                   000B48  1257+         $B    PNDRTN              ..No, return code of zero then

000B1C                                      1259+PNDSRCH  DS    0H   Search the IOT for a pending action
000B1C  9857 C068                   000B60  1260+         LM    5,7,IOTBLBA         Initialize the search registers
000B20  9120 5003                   000003  1261+PNDLOOP  TM    BLSTATUS,BLSTATO    Does device have a pending action?
000B24  4710 C038                   000B30  1262+         $BO   PNDINGD             ..Yes, need to report to the program
000B28  8756 C028                   000B20  1263+         $BXLE 5,6,PNDLOOP         ..No, try next table entry
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 5 - PNDING                                                   08 Sep 2020 06:14:14  Page    31

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                            1264+* Did not find a device with a pending action
000B2C  47F0 C050                   000B48  1265+         $B    PNDRTN              Return code 0

000B30                                      1267+PNDINGD  DS    0H   Report pending action to the program
000B30  9504 500B                   00000B  1268+         CLI   BLSACT,BLSREAD      Is a program read pending?
000B34  4780 C048                   000B40  1269+         $BE   PNDSNS              ..No, must be sense
000B38  4100 0004                   000004  1270+         LA    0,4                 ..Yes, return code 4
000B3C  47F0 C04C                   000B44  1271+         $B    PNDDEV  Report to the program the device with the pending action
000B40  4100 0008                   000008  1272+PNDSNS   LA    0,8                 Tell program device has sense data

000B44  5050 1004                   000004  1274+PNDDEV   ST    5,SPBIOTA     Tell the program which device has action pending
000B48                                      1275+         DROP  5
000B48                      000000          1277+         USING SAVEA,13      On return, service points to its save area
000B48  58D0 D004                   000004  1278+PNDRTN   $L    13,SAVEBCK     Restore caller's save area address from service
                                            1279+* R13 now points to the caller's registers
000B4C  58F0 0278                   000278  1280+         L     15,LOD1RTN      Return to the framework for the return
000B50                                      1281+         DROP  0               Forget ASA
000B50                                      1282+         DROP  13              Forget any save area addressing as we leave
000B50  07FF                                1283+         BR    15              Return now to the framework...
ASMA Ver. 0.2.0  BOOT LOADER - COMMON SERVICES DATA                                                 08 Sep 2020 06:14:14  Page    32

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                            1285 *
                                            1286 * Common information used by Boot Loader Services
                                            1287 *

                                            1289          BLCOMMON
                                            1290+* End-of-Boot-Loader Address used to identify if caller is the boot loader
000B54  00000B70                            1291+EOBLA    DC    A(EOBL)      Boot Loader's ending address
                                            1292+* IPL Device I/O Table Address
000B58  00000000                            1293+IPLDEVTA DC    A(0)     Returned by IOINIT service. Established upon return

                                            1295+* ENADEV service uses this to determine if the table is full.  The field
                                            1296+* is initialized in the assembly to the total length of the I/O Table and
                                            1297+* converted to an address by the IOINIT service.
000B5C  00000100                            1298+IOTMAX   DC    A(IOTDEVS*BLSIOEL)   The byte following the I/O Table.

                                            1300+* These values may be used by a BXLE.  The first entry is pointed to by the
                                            1301+* initial 'sum' register value.  If the table entry fails, use BXLE to
                                            1302+* point to the next entry.  The entire table has been examined when the
                                            1303+* branch is not taken.  The IOINIT service adds the IPL device to the table.
                                            1304+* So there is always at least one device in the table
000B60  00000000                            1305+IOTBLBA  DC    A(0)    Set by IOINIT service               BXLE R1   sum
000B64  00000020                            1306+IOTBLI   DC    A(BLSIOEL)   Entry length (increment)       BXLE R3   even
000B68  00000000                            1307+IOTBLEA  DC    A(0)    Set by IOINIT service (comparand)   BXLE R3+1 odd

                                            1309+* Latest interruption source is the primary or secondary device
000B6C  00                                  1310+INTSRC   DC    X'00'    Interruption source
                            000001  000001  1311+INTPRI   EQU   X'01'    Interruption source is the primary device
                            000002  000001  1312+INTSEC   EQU   X'02'    Interruption source is the secondary device



                                            1314 * END OF bls.asm
ASMA Ver. 0.2.0  BOOT LOADER - MEMORY USAGE OUTSIDE OF REGION                                       08 Sep 2020 06:14:14  Page    33

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

000B70                                      1316 EOBL     DS    0D   The end of the boot loader that participates in IPL.
                                            1317 * DSECT DMEMORY is placed after this location

                                            1319          BLMEM
                                            1320+* This DSECT defines memory usage not part of the assembled region
                                            1321+* By placing areas within this section, the boot loader size is reduced.
                                            1322+* The boot loader must provide addressability to these areas at run-time.
                                            1323+DMEMORY  DSECT
                                            1324+*
                                            1325+*  Service related save areas
                                            1326+*
000000  00000000 00000000                   1328+SAVEAREA DC    18F'0'      32-bit register save area
000008  00000000 00000000
000010  00000000 00000000
000018  00000000 00000000
000020  00000000 00000000
000028  00000000 00000000
000030  00000000 00000000
000038  00000000 00000000
000040  00000000 00000000
000048  00000000 00000000                   1330+NOOPSAVE DC    18F'0'      32-bit register save area
000050  00000000 00000000
000058  00000000 00000000
000060  00000000 00000000
000068  00000000 00000000
000070  00000000 00000000
000078  00000000 00000000
000080  00000000 00000000
000088  00000000 00000000
000090  00000000 00000000                   1332+IOINSAVE DC    18F'0'      32-bit register save area
000098  00000000 00000000
0000A0  00000000 00000000
0000A8  00000000 00000000
0000B0  00000000 00000000
0000B8  00000000 00000000
0000C0  00000000 00000000
0000C8  00000000 00000000
0000D0  00000000 00000000
0000D8  00000000 00000000                   1334+QIOTSAVE DC    18F'0'      32-bit register save area
0000E0  00000000 00000000
0000E8  00000000 00000000
0000F0  00000000 00000000
0000F8  00000000 00000000
000100  00000000 00000000
000108  00000000 00000000
000110  00000000 00000000
000118  00000000 00000000
000120  00000000 00000000                   1336+ENADSAVE DC    18F'0'      32-bit register save area
000128  00000000 00000000
000130  00000000 00000000
000138  00000000 00000000
000140  00000000 00000000
ASMA Ver. 0.2.0  BOOT LOADER - MEMORY USAGE OUTSIDE OF REGION                                       08 Sep 2020 06:14:14  Page    34

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

000148  00000000 00000000
000150  00000000 00000000
000158  00000000 00000000
000160  00000000 00000000
000168  00000000 00000000                   1338+EXCPSAVE DC    18F'0'      32-bit register save area
000170  00000000 00000000
000178  00000000 00000000
000180  00000000 00000000
000188  00000000 00000000
000190  00000000 00000000
000198  00000000 00000000
0001A0  00000000 00000000
0001A8  00000000 00000000
0001B0  00000000 00000000                   1340+PENDSAVE DC    18F'0'      32-bit register save area
0001B8  00000000 00000000
0001C0  00000000 00000000
0001C8  00000000 00000000
0001D0  00000000 00000000
0001D8  00000000 00000000
0001E0  00000000 00000000
0001E8  00000000 00000000
0001F0  00000000 00000000



                                            1342+* I/O Table is placed last so that it can be dynamically extended if needed.
                                            1343+* No service is provided for that purpose, but it can be done by increasing
                                            1344+* IOTMAX by size of the number of additional table entries being added.  IOTBLI
                                            1345+* contains the size of each individual entry.
0001F8                                      1347+         DS    0D
0001F8  00000000 00000000                   1348+IOTBL    DS    (8*7)F'0'             Define the I/O table
000200  00000000 00000000
000208  00000000 00000000
000210  00000000 00000000
000218  00000000 00000000
000220  00000000 00000000
000228  00000000 00000000
000230  00000000 00000000
000238  00000000 00000000
000240  00000000 00000000
000248  00000000 00000000
000250  00000000 00000000
000258  00000000 00000000
000260  00000000 00000000
000268  00000000 00000000
000270  00000000 00000000
000278  00000000 00000000
000280  00000000 00000000
000288  00000000 00000000
000290  00000000 00000000
000298  00000000 00000000
0002A0  00000000 00000000
ASMA Ver. 0.2.0  BOOT LOADER - MEMORY USAGE OUTSIDE OF REGION                                       08 Sep 2020 06:14:14  Page    35

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

0002A8  00000000 00000000
0002B0  00000000 00000000
0002B8  00000000 00000000
0002C0  00000000 00000000
0002C8  00000000 00000000
0002D0  00000000 00000000
                            000008  000001  1349+IOTDEVS  EQU   8                     Number of devices in the I/O table
                            0002D8  000001  1350+IOTBLE   EQU   *



                            0002D8  000001  1352+HWM      EQU   IOTBLE     Can not load any directed record lower than here
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:14:14  Page    36

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                            1354          BLSPB
                                            1355+*
                                            1356+* Boot Loader Services Parameter Block
                                            1357+*
                                            1358+SPB      DSECT
000000  0000                                1359+SPBID    DS    H           Service ID of requested service from caller
000002  0000                                1360+SPBSI    DS    H           Service Information provided by caller
                            000004  000001  1361+SPBE     EQU   *           Start of SPB extension used by service

                                            1363+* This SPBE field is used by IOINIT, QIOT, ENADEV, and PNDING services
000004  00000000                            1364+SPBIOTA  DS    F           I/O Table entry address as service input or output

                                            1366+* IOINIT SPBE - SERVICE ID 1
                                            1367+*   SPB: DC  Y(IOINIT),H'0'
000008                      000008  000002  1368+         ORG   SPBSI
000002  00                                  1369+SPBCCWF  DS    X           CCW Format used by boot loader services
                            000001  000001  1370+SPBCCW0  EQU   X'01'       CCW Format 0 used
                            000002  000001  1371+SPBCCW1  EQU   X'02'       CCW Format 1 used
000003  00                                  1372+         DS    X
000004  00000000                            1373+         DS    F           Returned address of I/O Table entry

                                            1375+* QIOT SPBE -   SERVICE ID 2
                                            1376+*   SPB: DC  Y(QIOT),H'0',F'0'
000008                      000008  000004  1377+         ORG   SPBE
000004  00000000                            1378+         DS    F           Returned address of I/O Table entry

                                            1380+* ENADEV SPBE - SERVICE ID 3
                                            1381+*   SPB: DC   Y(ENADEV),H'0',AL1(BLSTYP),XL3'000000'
000008                      000008  000004  1382+         ORG   SPBE
000004  00                                  1383+SPBDCLS  DS    X           Input Device Class (same values as BLSTYP)
000005                      000005  000004  1384+         ORG   SPBE  (RC==0 or RC==4)
000004  00000000                            1385+         DS    F           Returned address of I/O Table entry
000008                      000008  000004  1386+         ORG   SPBE  (RC==8)
000004  00                                  1387+         DS    X           Input Device Class (SPBDCLS)
000005  00                                  1388+         DS    X           RESERVED
000006  00                                  1389+SPBDEVST DS    X           Device status (if available)
000007  00                                  1390+SPBCHST  DS    X           Channel status (if available)
000008                      000008  000004  1391+         ORG   SPBE  (RC==12, RC==16, or RC==20)
000004  00                                  1392+         DS    X           Input Device Class (SPBDCLS)
000005  000000                              1393+         DS    XL3         RESERVED


                                            1395+* EXCP SPB -    SERVICE ID 4
                                            1396+*   SPB: DC   Y(EXCP),H'0'
                                            1397+*        BLSORB
000008                      000008  000002  1398+         ORG   SPBSI
000002  00                                  1399+SPBECTL  DS    X           EXCP input function control mask
                            000080  000001  1400+SPBEBY1  EQU   X'80'       Bypass Step 1 processing (start I/O)
                                            1401+* SPBEBY2  EQU   X'40'       Bypass Step 2 processing (I/O wait)
                                            1402+* SPBEBY3  EQU   X'20'       Bypass Step 3 processing (status analysis)
                            00000C  000001  1403+SPBEWTM  EQU   X'0C'       Mask to isolate wait conditions
                                            1404+*                          Step 2 wait conditions:
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:14:14  Page    37

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                            00000C  000001  1405+SPBEWDC  EQU   12            - Wait for both device and channel end
                            000008  000001  1406+SPBEWCO  EQU   8             - Wait for channel end (may also have device end)
                            000004  000001  1407+SPBEWDO  EQU   4             - Wait for device end (may also have channel end)
                            000000  000001  1408+SPBEWNO  EQU   0             - Do not wait for both device and channel end
                            00000C  000001  1409+SPBENRM  EQU   SPBEWDC     Usual controls for most I/O actions
                            000080  000001  1410+SPBEATN  EQU   SPBEBY1     Usual controls for ATTN wait

000003  00                                  1412+SPBPEND  DS    X           EXCP output pending data condition
                            000001  000001  1413+SPBPENDG EQU   X'01'       I/O Table has pending actions for other devices
                            000000  000001  1414+SPBPENDN EQU   X'00'       I/O Table has no pending actions

000004  00000000 00000000                   1416+SPBEORB  DS    3F          Operational Request Block
00000C  00000000
000010                      000010  000004  1417+         ORG   SPBEORB
000004  00000000                            1418+SPBEORBT DS    F       +0  Device I/O Table address (Interruption Parameter)
000008  00                                  1419+SPBEORBK DS    X       +4  Storage Key field
                            0000F0  000001  1420+SPBEORBM EQU   X'F0'       Storage Key mask
                            00000F  000001  1421+SPBEORBR EQU   X'0F'       Reserved portion of key field byte
000009  00                                  1422+SPBEORB1 DS    X       +5  F flag byte required content
00000A  00                                  1423+SPBEORBL DS    X       +6  Logical Path Mask
00000B  00                                  1424+SPBEORB2 DS    X       +7  Required content
00000C                                      1425+SPBEORBC DS    0XL4    +8  31-bit channel program address
00000C  00                                  1426+         DS    X       +8  Ignored for early architectures
00000D  000000                              1427+SPBEORBP DS    XL3     +9  24-bit channel program address


                                            1429+* PNDGIN SPB -    SERVICE ID 5
                                            1430+*   SPB: DC   Y(PNDING),H'0',F'0'
000010                      000010  000004  1431+         ORG   SPBE
000004  00000000                            1432+         DS    F           Returned IOT entry address of pending device



                                            1434 BLSIOT   BLSIOT
                                            1435+*
                                            1436+* Boot Loader I/O Table Entry
                                            1437+*
                                            1438+BLSIOT   DSECT
000000  0000                                1439+BLSDEV   DS    H        +0 I/O device number

000002  00                                  1441+BLSTYP   DS    X        +2 I/O device class and attributes
                            000080  000001  1442+BLSPEOF  EQU   B'10000000' 'Detects physical end-of-file' mask
                            000040  000001  1443+BLSUNSOL EQU   B'01000000' 'Generates unsolicited status' mask
                            000038  000001  1444+BLSSCLS  EQU   B'00111000' Device subclass mask
                                            1445+* Note: the device class is positioned in the byte so it can be used for the
                                            1446+* channel subsystem SCHIB I/O subclass code field without shifting.
                            0000F8  000001  1447+BLSRSV   EQU   B'11111000' Reserved bits mask (zeros)              UE
                                            1448+*                        CLASS                                    PEOF ATTN
                                            1449+*              B'00000000' 0 - Highest priority available           ?    ?
                            000008  000001  1450+BLSFBA   EQU   B'00001000' 1 - Fixed-Block-Architecture DASD device N    N
                            000089  000001  1451+BLSCKD   EQU   B'10001001' 1 - Count-Key-Data DASD device           Y    N
                            000090  000001  1452+BLSTAPE  EQU   B'10010000' 2 - Sequential tape device               Y    N
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:14:14  Page    38

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                            000098  000001  1453+BLSCARD  EQU   B'10011000' 3 - Sequential input card device         Y    N
                            000020  000001  1454+BLSPUN   EQU   B'00100000' 4 - Sequential output punch device       N    N
                            000028  000001  1455+BLSPR    EQU   B'00101000' 5 - Sequential output printer device     N    N
                            000070  000001  1456+BLSCON   EQU   B'01110000' 6 - Operator console device              N    Y
                            000078  000001  1457+BLS3270  EQU   B'01111000' 7 - Operator 3270 terminal device        N    Y

000003  00                                  1459+BLSTATUS DS    X        +3 Current device status
                            000080  000001  1460+BLSBUSY  EQU   B'10000000' Device is busy
                                            1461+* Note: When BLSBUSY set, BLSTAT, BLSTATO, BLSTATS and BLSSNSP turned off,
                                            1462+* (set to 0).
                            000040  000001  1463+BLSTAT   EQU   B'01000000' Status in BLSSW.
                            000020  000001  1464+BLSTATO  EQU   B'00100000' Pending action present in BLSACT
                            000002  000001  1465+BLSTATS  EQU   B'00000010' Unit and channel status present in BLSUNCH
                            000001  000001  1466+BLSSNSP  EQU   B'00000001' Sense data is present in BLSSNS

000004  00000000                            1468+BLSHDW   DS    F        +4 Hardware defined device address

000008                                      1470+BLSUNCH  DS    0XL2     +8 Accumulated status when bit 1 set to 1 in BLSTATUS
000008  00                                  1471+BLSUNIT  DS    X           Unit status
                            000080  000001  1472+BLSATTN  EQU   B'10000000' Attention status
                            000001  000001  1473+BLSUE    EQU   B'00000001' Unit exception status (physical EOF)
000009  00                                  1474+BLSCH    DS    X           Channel status


00000A  00                                  1476+BLSSNS   DS    XL1     +10 Sense data present when bit 7 set to 1 in BLSTATUS

00000B  00                                  1478+BLSACT   DS    XL1     +11 Pending action when bit 2 set to 1 in BLSTATUS
                            000000  000001  1479+BLSRDSN  EQU   X'00'       Device has pending sense data to be read
                            000004  000001  1480+BLSREAD  EQU   X'04'       Device has pending data to be read

00000C  00                                  1482+BLSERR   DS    XL1     +12 Device status error mask, set by ENADEV

00000D  000000                              1484+BLSRSV2  DS    XL3     +13 RESERVED

000010  00000000 00000000                   1486+BLSSW    DS    3F      +16 SCSW of the latest interruption
000018  00000000

00001C  00000000                            1488+BLSPROG  DS    F       +28 Reserved for booted program usage
                            000020  000001  1489+BLSIOEL  EQU   *-BLSIOT    Length of an I/O Table Entry (32 bytes)



                                            1491 *
                                            1492 * Subroutine Register Save Area DSECT
                                            1493 *

                                            1495          SAVEAREA DSECT=YES
                                            1496+SAVEA    DSECT
000000  00000000                            1497+SAVERSV  DS    F'0'        Reserved save area field
000004  00000000                            1498+SAVEBCK  DS    A(0)        Backward save area pointer (points to caller)
000008  00000000                            1499+SAVEFWD  DS    A(0)        Forward save area pointer (points to called)
00000C  00000000                            1500+SAVER14  DS    A(0)        Saved R14 (caller's return address)
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:14:14  Page    39

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

000010  00000000                            1501+SAVER15  DS    A(0)        Saved R15 (called routine entry address)
000014  00000000                            1502+SAVER0   DS    F'0'        Saved R0
000018  00000000                            1503+SAVER1   DS    F'0'        Saved R1
00001C  00000000                            1504+SAVER2   DS    F'0'        Saved R2
000020  00000000                            1505+SAVER3   DS    F'0'        Saved R3
000024  00000000                            1506+SAVER4   DS    F'0'        Saved R4
000028  00000000                            1507+SAVER5   DS    F'0'        Saved R5
00002C  00000000                            1508+SAVER6   DS    F'0'        Saved R6
000030  00000000                            1509+SAVER7   DS    F'0'        Saved R7
000034  00000000                            1510+SAVER8   DS    F'0'        Saved R8
000038  00000000                            1511+SAVER9   DS    F'0'        Saved R9
00003C  00000000                            1512+SAVER10  DS    F'0'        Saved R10
000040  00000000                            1513+SAVER11  DS    F'0'        Saved R11
000044  00000000                            1514+SAVER12  DS    F'0'        Saved R12
                            000048  000001  1515+SAVELEN  EQU   *-SAVEA     Length of 32-bit subroutine save area



                                            1517 *
                                            1518 * Input/Output Structure DSECT's
                                            1519 *

                                            1521          BLSIODS

                                            1523+*
                                            1524+* I/O Operation Request Block (ORB)
                                            1525+*

                                            1529+ORB      DSECT
000000  00000000                            1530+ORBPARM  DC    F'0'     Word 0, bits 0-31

000004  00                                  1532+ORB1_0   DC    X'00'    Word 1, bits 0-7
                            0000F0  000001  1533+ORBKEYM  EQU   X'F0'    Word 1, bits 0-3   - Storage Key Mask
                            000008  000001  1534+ORBS     EQU   X'08'    Word 1, bit 4      - Suspend Control
                            000004  000001  1535+ORBC     EQU   X'04'    Word 1, bit 5      - Streaming Mode Control
                            000002  000001  1536+ORBM     EQU   X'02'    Word 1, bit 6      - Modification Control
                            000001  000001  1537+ORBY     EQU   X'01'    Word 1, bit 7      - Synchronization Control

000005  00                                  1539+ORB1_8   DC    X'00'    Word 1, bits 8-15
                            000080  000001  1540+ORBF     EQU   X'80'    Word 1, bit 8      - CCW Format-Control
                            000040  000001  1541+ORBP     EQU   X'40'    Word 1, bit 9      - Pre-fetch control
                            000020  000001  1542+ORBI     EQU   X'20'    Word 1, bit 10     - Initial-status Interruption Control
                            000010  000001  1543+ORBA     EQU   X'10'    Word 1, bit 11     - Address Limit Checking Control
                            000008  000001  1544+ORBU     EQU   X'08'    Word 1, bit 12     - Suppress-suspended-interruption control
                            000004  000001  1545+ORBB     EQU   X'04'    Word 1, bit 13     - Channel-Program-Type Control
                            000002  000001  1546+ORBH     EQU   X'02'    Word 1, bit 14     - Format 2-IDAW Control
                            000001  000001  1547+ORBT     EQU   X'01'    Word 1, bit 15     - 2K-IDAW control
000006  00                                  1548+ORBLPM   DC    X'00'    Word 1, bits 16-23 - Logical Path Mask
000007  00                                  1549+ORRB1_24 DC    X'00'    Word 1, bits 24-31
                            000080  000001  1550+ORBL     EQU   X'80'    Word 1, bit 24     - Incorrect Length Suppression Mode
                            00007F  000001  1551+ORBRSV3  EQU   X'7F'    Word 1, bits 25-31 - reserved must be zeros
                            000040  000001  1552+ORBD     EQU   X'40'    Word 1, bit 25     - MIDAW Addressing Control
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:14:14  Page    40

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                            00003E  000001  1553+ORBRSV26 EQU   X'3E'    Word 1, bits 26-30 - reserved must be zeros
                            00007E  000001  1554+ORBRSV25 EQU   X'7E'    Word 1, bits 25-30 - reserved must be zeros
                            000001  000001  1555+ORBX     EQU   X'01'    Word 1, bit 31     - ORB-extension control

000008  00000000                            1557+ORBCCW   DC    A(0)     Word 2, bits 1-31  - Channel Program Address
                            000080  000001  1558+ORBRSV4  EQU   X'80'    Word 2, bit 0      - reserved must be zero
                            00000C  000001  1559+ORBLEN   EQU   *-ORB Length of standard ORB
                                            1560+* Extended ORB fields
00000C  00                                  1561+ORBCSS   DC    X'00'    Word 3, bits 0-7   - Channel Subsystem Priority
00000D  00                                  1562+ORBRSV5  DC    X'00'    Word 3, bits 8-15  - reserved must be zeros
00000E                                      1563+ORBPGM   DC    0X'00'   Word 3, bits 16-23 - Transport mode reserves for program use
00000E  00                                  1564+ORBCU    DC    X'00'    Word 3, bits 16-23 - Control Unit Priority
00000F  00                                  1565+ORBRSV6  DC    X'00'    Word 3, bits 24-31 - reserved must be zeros
000010  00000000 00000000                   1566+ORBRSV7  DC    XL16'00' Words 4-7          - reserved must be zeros
000018  00000000 00000000
                            000020  000001  1567+ORBXLEN  EQU   *-ORB Length of extended ORB




                                            1570+*
                                            1571+* Channel Subsystem Status Word (SCSW)
                                            1572+*

                                            1576+SCSW     DSECT Subchannel          Status Word
000000  00                                  1577+SCSWFLAG DC    X'00'    Flags
                            0000F0  000001  1578+SCSWKEYM EQU   X'F0'    Storage Key Mask of subchannel storage key
                            000008  000001  1579+SCSWSUSC EQU   X'08'    Suspend Control
                            000004  000001  1580+SCSWESWF EQU   X'04'    Extended Status Word Format
                            000003  000001  1581+SCSWDCCM EQU   X'03'    Deferred condiont code mask
                            000000  000001  1582+SCSWDCC0 EQU   X'00'    Normal I/O interruption
                            000001  000001  1583+SCSWDCC1 EQU   X'01'    Deferred condition code is 1
                            000003  000001  1584+SCSWDCC3 EQU   X'03'    Deferred condition code is 3

000001  00                                  1586+SCSWCTLS DC    X'00'    General Controls
                            000080  000001  1587+SCSWCCWF EQU   X'80'    CCW Format control when ...
                            000040  000001  1588+SCSWCCWP EQU   X'40'    CCW Prefetch Control
                            000020  000001  1589+SCSWISIC EQU   X'20'    Initial-Status-Interruption Control
                            000010  000001  1590+SCSWALKC EQU   X'10'    Address-Limit-Checking Control
                            000008  000001  1591+SCSWSSIC EQU   X'08'    Suppress suspended interruption
                            000004  000001  1592+SCSW0CC  EQU   X'04'    Zero-Condition Code
                            000002  000001  1593+SCSWECWC EQU   X'02'    Extended Control Word control
                            000001  000001  1594+SCSWPNOP EQU   X'01'    Path Not Operational

000002  00                                  1596+SCSW1    DC    X'00'    Control Byte 1
                            000070  000001  1597+SCSWFM   EQU   X'70'    Functional Control Mask
                            000040  000001  1598+SCSWFS   EQU   X'40'    Function Control - Start Function
                            000020  000001  1599+SCSWFH   EQU   X'20'    Function Control - Halt Function
                            000010  000001  1600+SCSWFC   EQU   X'10'    Function Control - Clear Function
                            000008  000001  1601+SCSWARP  EQU   X'08'    Activity Control - Resume pending
                            000004  000001  1602+SCSWASP  EQU   X'04'    Activity Control - Start pending
                            000002  000001  1603+SCSWAHP  EQU   X'02'    Activity Control - Halt pending
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:14:14  Page    41

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                            000001  000001  1604+SCSWACP  EQU   X'01'    Activity Control - Clear pending
000003  00                                  1605+SCSW2    DC    X'00'    Control Byte 2
                            000080  000001  1606+SCSWASA  EQU   X'80'    Activity Control - Subchannel Active
                            000040  000001  1607+SCSWADA  EQU   X'40'    Activity Control - Device Active
                            000020  000001  1608+SCSWASUS EQU   X'20'    Activity Control - Suspended
                            000010  000001  1609+SCSWSAS  EQU   X'10'    Status Control   - Alert Status
                            000008  000001  1610+SCSWSINT EQU   X'08'    Status Control   - Intermediate Status
                            000004  000001  1611+SCSWSPRI EQU   X'04'    Status Control   - Primary Status
                            000002  000001  1612+SCSWSSEC EQU   X'02'    Status Control   - Secondary Status
                            000001  000001  1613+SCSWSPEN EQU   X'01'    Status Control   - Status Pending

000004  00000000                            1615+SCSWCCW  DC    A(0)     CCW Address

000008  00                                  1617+SCSWUS   DC    X'00'    Unit Status
                            000080  000001  1618+SCSWATTN EQU   X'80'    Attention
                            000040  000001  1619+SCSWSM   EQU   X'40'    Status modifier
                            000020  000001  1620+SCSWCUE  EQU   X'20'    Control-unit end
                            000010  000001  1621+SCSWBUSY EQU   X'10'    Busy
                            000008  000001  1622+SCSWCE   EQU   X'08'    Channel end
                            000004  000001  1623+SCSWDE   EQU   X'04'    Device end
                            000002  000001  1624+SCSWUC   EQU   X'02'    Unit check
                            000001  000001  1625+SCSWUX   EQU   X'01'    Unit exception

000009  00                                  1627+SCSWCS   DC    X'00'    Channel Status
                            000080  000001  1628+SCSWPCI  EQU   X'80'    Program-controlled interruption
                            000040  000001  1629+SCSWIL   EQU   X'40'    Incorrect length
                            000020  000001  1630+SCSWPRGM EQU   X'20'    Program check
                            000010  000001  1631+SCSWPROT EQU   X'10'    Protection Check
                            000008  000001  1632+SCSWCDAT EQU   X'08'    Channel-data check
                            000004  000001  1633+SCSWCCTL EQU   X'04'    Channel-control check
                            000002  000001  1634+SCSWICTL EQU   X'02'    Interface-control check
                            000001  000001  1635+SCSWCHNG EQU   X'01'    Chaining check

00000A  0000                                1637+SCSWCNT  DC    H'0'     Residual CCW count
                            00000C  000001  1638+SCSWL    EQU   *-SCSW




                                            1641+*
                                            1642+* Channel Command Word Format-0 (CCW0)
                                            1643+*

                                            1647+CCW0     DSECT
000000  00                                  1648+CCW0CODE DC    X'00'         Device specific Command Code
000001  000000                              1649+CCW0ADDR DC    AL3(0)        Data Address
000004  00                                  1650+CCW0FLGS DC    X'00'         Flags (see flag equates)
000005  00                                  1651+         DC    X'00'         not used - must be zeros
000006  0000                                1652+CCW0CNT  DC    H'0'          Byte Count
                            000008  000001  1653+CCW0L    EQU   *-CCW0 Length of CCW Format 0

                                            1655+* Chanel Command Word Flags used by both CCW formats 0 and 1
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:14:14  Page    42

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                            000080  000001  1656+CCWCD    EQU   X'80'         Chain Data flag
                            000040  000001  1657+CCWCC    EQU   X'40'         Command Chain flag
                            000020  000001  1658+CCWSLI   EQU   X'20'         Suppress Length Indication flag
                            000010  000001  1659+CCWSKIP  EQU   X'10'         Suprress data transfer flag (skip)
                            000008  000001  1660+CCWPCI   EQU   X'08'         Causes an intermediate interruption (programmed control)
                            000004  000001  1661+CCWIDA   EQU   X'04'         Use Indirect Data Addressing
                            000002  000001  1662+CCWSUSP  EQU   X'02'         Cause suspension before executing this command word




                                            1665+*
                                            1666+* Channel Status Word
                                            1667+*

                                            1671+CSWFMT   DSECT
000000  00                                  1672+CSWFLAG  DC    X'00'    Flags
                            0000F0  000001  1673+CSWKEYM  EQU   X'F0'    Storage Key Mask of subchannel storage key
                                            1674+* The following flags are not available and always zero on System/360
                            000008  000001  1675+CSWSUSP  EQU   X'08'    I/O operation CCW suspended
                            000004  000001  1676+CSWLOG   EQU   X'04'    Further I/O instructions blocked due to pending logout
                            000003  000001  1677+CSWDCCM  EQU   X'03'    Deferred condiont code mask
                            000000  000001  1678+CSWDCC0  EQU   X'00'    Normal I/O interruption
                            000001  000001  1679+CSWDCC1  EQU   X'01'    Deferred condition code is 1
                            000003  000001  1680+CSWDCC3  EQU   X'03'    Deferred condition code is 3

000001  000000                              1682+CSWCCW   DC    AL3(0)   Last CCW address plus 8

000004  00                                  1684+CSWUS    DC    X'00'    Unit Status
                            000080  000001  1685+CSWATTN  EQU   X'80'    Attention
                            000040  000001  1686+CSWSM    EQU   X'40'    Status modifier
                            000020  000001  1687+CSWCUE   EQU   X'20'    Control-unit end
                            000010  000001  1688+CSWBUSY  EQU   X'10'    Busy
                            000008  000001  1689+CSWCE    EQU   X'08'    Channel end
                            000004  000001  1690+CSWDE    EQU   X'04'    Device end
                            000002  000001  1691+CSWUC    EQU   X'02'    Unit check
                            000001  000001  1692+CSWUX    EQU   X'01'    Unit exception

000005  00                                  1694+CSWCS    DC    X'00'    Channel Status
                            000080  000001  1695+CSWPCI   EQU   X'80'    Program-controlled interruption
                            000040  000001  1696+CSWIL    EQU   X'40'    Incorrect length
                            000020  000001  1697+CSWPRGM  EQU   X'20'    Program check
                            000010  000001  1698+CSWPROT  EQU   X'10'    Protection Check
                            000008  000001  1699+CSWCDAT  EQU   X'08'    Channel-data check
                            000004  000001  1700+CSWCCTL  EQU   X'04'    Channel-control check
                            000002  000001  1701+CSWICTL  EQU   X'02'    Interface-control check
                            000001  000001  1702+CSWCHNG  EQU   X'01'    Chaining check

000006  0000                                1704+CSWCNT   DC    H'0'     Residual CCW count
                            000008  000001  1705+CSWFMTL  EQU   *-CSWFMT Length of CSW

ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:14:14  Page    43

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT




                                            1709 *
                                            1710 * Hardware and Software Assigned Storage Locations
                                            1711 *

                                            1713 * This DSECT allows symbolic access to these locations.  The DSECT created is
                                            1714 * named ASA.  Addressing is established by: USING  ASA,0
                                            1715 * In this context, general register 0 is an assembler artifact.  Instructions
                                            1716 * that have R0 as a base register never actually use it for address generation.

                                            1718 ASA      BLSASA
                                            1720+ASA      DSECT
                            000000  000001  1721+ASBEGIN  EQU   *                   Start of absolute/real assigned storage areas
000000  00000000 00000000                   1722+IPLPSW   DC    FD'0'        000 A  Initial Program Load Program Status Word
000008  00000000 00000000                   1723+IPLCCW1  DC    FD'0'        008 A  Initial Program Load first Channel Command Word
000010  00000000 00000000                   1724+IPLCCW2  DC    FD'0'        010 A  Initial program Load second Channel Command Word
                                            1725+* RESTART RELATED PROGRAM STATUS WORDS
000018                      000018  000000  1726+         ORG   ASBEGIN
000000  00000000 00000000                   1727+RSTNPSW  DC    FD'0'        000 R  Restart New PSW
000008  00000000 00000000                   1728+RSTOPSW  DC    FD'0'        008 R  Restart Old PSW
000010  00000000 00000000                   1729+UA0      DC    FD'0'        010 R  Unassigned Area 0
                                            1730+* INTERRUPTION OLD PROGRAM STATUS WORD SAVE AREAS
000018  00000000 00000000                   1731+EXTOPSW  DC    FD'0'        018 R  External Interrupt Old PSW
000020  00000000 00000000                   1732+SVCOPSW  DC    FD'0'        020 R  Supervisor Call Old PSW
000028  00000000 00000000                   1733+PGMOPSW  DC    FD'0'        028 R  Program Old PSW
000030  00000000 00000000                   1734+MCKOPSW  DC    FD'0'        030 R  Machine Check Old PSW
000038  00000000 00000000                   1735+IOOPSW   DC    FD'0'        038 R  Input/Output Old PSW
                                            1736+* System/360 or System/370 Basic Control Mode INTERRUPTION INFORMATION
000040                      000040  00001A  1737+         ORG   EXTOPSW+2
00001A  0000                                1738+BCEXTCOD DC    H'0'         01A R  External Interuption Code
00001C                      00001C  000022  1739+         ORG   SVCOPSW+2
000022  0000                                1740+BCSVCCOD DC    H'00'        022 R  Supervisor Call Interruption Code
000024                      000024  00002A  1741+         ORG   PGMOPSW+2
00002A  0000                                1742+BCPGMCOD DC    H'0'         02A R  Program Interruption Code
00002C                      00002C  000032  1743+         ORG   MCKOPSW+2
000032  0000                                1744+BCMCKCOD DC    H'0'         032 R  Machine Check Interruption Code
000034                      000034  00003A  1745+         ORG   IOOPSW+2
00003A  0000                                1746+BCIOCOD  DC    H'0'         03A R  Input/Output Interruption Code (Device CCUU)
00003C                      00003C  000040  1747+         ORG   *+4
                                            1748+* CHANNEL-BASED INPUT/OUTPUT INTERRUPT RELATED
000040  00000000 00000000                   1749+CSW      DC    FD'0'        040 R  Channel Status Word
000048                                      1750+CAW      DC    0F'0'        048 R  Channel Address Word
000048  00                                  1751+CAWKEY   DC    X'00'        048 R  Channel Storage Key (bits 0-3)
                            000008  000001  1752+CAWSUSP  EQU   X'08'        048 R  Suspend Control (bit 4)
000049  000000                              1753+CAWADDR  DC    AL3(0)       049 R  Channel Command Address
00004C  00000000                            1754+UA1      DC    F'0'         04C R  Unassigend Area 1
                                            1755+* MISCELANEOUS AREAS
000050  00000000                            1756+TIMER    DC    F'0'         050 R  System/360 and System/370 Interval Timer
000054  00000000                            1757+TTDES    DC    F'0'         054 R  System/370 Trace-Table-Designation
                                            1758+* INTERRUPTION NEW PROGRAM STATUS WORD AREAS
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:14:14  Page    44

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

000058  00000000 00000000                   1759+EXTNPSW  DC    FD'0'        058 R  External New PSW
000060  00000000 00000000                   1760+SVCNPSW  DC    FD'0'        060 R  Supervisor Call New PSW
000068  00000000 00000000                   1761+PGMNPSW  DC    FD'0'        068 R  Program New PSW
000070  00000000 00000000                   1762+MCKNPSW  DC    FD'0'        070 R  Machine Check New PSW
000078  00000000 00000000                   1763+IONPSW   DC    FD'0'        078 R  Input/Output New PSW
                                            1764+* System/360 Diagnostic Scanout Area
000080                                      1765+SCANOUT  DS    0X           080 A  System/360 Diagnostic Scanout Area
                            000000  000001  1766+SCANOUTL EQU   *-SCANOUT           System/360 Diagnostic Scanout Area Length
                                            1767+* EXTERNAL INTERRUPTION INFORMATION
000080                      000080  000080  1768+         ORG   ASBEGIN+X'80'
000080  00000000                            1769+EXTIPARM DC    F'0'         080 R  External-interruption Parameter
000084  0000                                1770+EXTCPUAD DC    H'0'         084 R  External-interruption CPU Address
000086  0000                                1771+EXTICODE DC    H'0'         086 R  External-interruption Code
                                            1772+* SUPERVISOR CALL INTERRUPTION INFORMATION
000088                                      1773+SVCIID   DC    0F'0'        088 R  Supervisor-Call Interuption Identification
000088  00                                  1774+         DC    X'00'        088 R  not-used - zeros stored
000089  00                                  1775+SVCIILC  DC    X'00'        089 R  Supervisor-Call instruction length code
                            00000C  000001  1776+SVCIILCM EQU   B'00001100'         Supervisor-Call ILC mask, zeros stored in other bits
00008A  0000                                1777+SVCICODE DC    H'0'         08A R  Supervisor-Call Interruption Code
                                            1778+* PROGRAM INTERRUPTION INFORMATION
00008C                                      1779+PGMIID   DC    0F'0'        08C R  Program-interruption identification
00008C  00                                  1780+         DC    X'00'        08C R  not-used - zeros stored
00008D  00                                  1781+PGMIILC  DC    X'00'        08D R  Program instruction lengh code
                            00000C  000001  1782+PGMIILCM EQU   B'00001100'         Progrtam ILC mask, zeros stored in other bits
00008E  0000                                1783+PGMICODE DC    H'0'         08E R  Program Interruption Code
000090                                      1784+PGMDXC   DC    0F'0'        090 R  Data-Exception Code
000090  00000000                            1785+PGMTRX   DC    F'0'         090 R  Translation-Exception Identification
000094                                      1786+MONCLS   DC    0H'0'        094 R  Monitor-Class Number
000094  00                                  1787+         DC    X'00'        094 R  not-used - zeros stored
000095  00                                  1788+MONNUMBR DC    X'00'        095 R  Monitor-Class Number stored
000096  00                                  1789+PERCODE  DC    X'00'        096 R  Program-Event-Recording Code
                            0000F0  000001  1790+PERCODMK EQU   B'11110000'         Program-Event-Recordind Code mask in bits 0-3
000097  00                                  1791+         DC    X'00'        097 R  PER Code not used - zeros stored
000098  00000000                            1792+PERADDR  DC    F'0'         098 R  PER Address
00009C  00000000                            1793+MONCODE  DC    F'0'         09C R  Monitor Event Code in bytes 1-3, zeros in byte 0
0000A0  00                                  1794+PGMACCID DC    X'00'        0A0 R  Exception accress identification
0000A1  00                                  1795+PERACCID DC    X'00'        0A1 R  PER access identification
0000A2  00                                  1796+MPGACCID DC    X'00'        0A2 R  MOVE PAGE Operand access identification
0000A3                                      1797+SSARCHMD DC    0X'00'       0A3 A  Store Status Architectural Mode Identification
0000A3  00                                  1798+MKARCHMD DC    X'00'        0A3 R  Machine-Check Architectural Mode Identification
0000A4  00000000                            1799+UA2      DC    F'0'         0A4 R  Unused area
                                            1800+* z/Architecture PROGRAM INTERRUPTION INFORMATION
0000A8  00000000 00000000                   1801+ZPGMTRX  DC    FD'0'        0A8 R  Translation Exception information
0000B0  00000000 00000000                   1802+ZMONCODE DC    FD'0'        0B0 R  Monitor Code
                                            1803+* System/370 CHANNEL INPUT/OUTPUT INFORMATION
0000B8                      0000B8  0000A8  1804+         ORG   ASBEGIN+X'A8'
0000A8  00000000                            1805+CHANID   DC    F'0'         0A8 R  System/370 STORE CHANNEL ID location
0000AC  00000000                            1806+IOELADDR DC    F'0'         0AC R  System/370 I/O Extended Logout Address
0000B0  00000000                            1807+LCHANLOG DC    F'0'         0B0 R  System/370 Limited Channel Logout Area
0000B4  00000000                            1808+UA3      DC    F'0'         0B4 R  unused by System/370
0000B8  00                                  1809+UA4      DC    X'00'        0B8 R  unused by System/370
0000B9  00                                  1810+MEASUREB DC    X'00'        0B9 R  System/370 Measurement Byte
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:14:14  Page    45

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

0000BA  0000                                1811+IOICODE  DC    H'0'         0BA R  System/370 Input/Output Interruption Device Address
                                            1812+* CHANNEL SUBSYSTEM INPUT/OUTPUT INFORMATION
0000BC                      0000BC  0000B8  1813+         ORG   ASBEGIN+X'B8'
0000B8  00000000                            1814+IOSSID   DC    F'0'         0B8 R  Channel subsystem-identification word
0000BC  00000000                            1815+IOIPARM  DC    F'0'         0BC R  Channel subsystem I/O Interruption parameter
0000C0  00000000                            1816+IOIID    DC    F'0'         0C0 R  Channel subsystem I/O Interruption Identification
0000C4  00000000                            1817+PCFETO   DC    A(0)         0C4 R  ESA/390 PROGRAM CALL FAST Entry Table Origin
0000C8  00000000                            1818+STFLDATA DC    F'0'         0C8 R  STORE FACILITY LIST storage area
0000CC  00000000 00000000                   1819+UA5      DC    XL8'00'      0CC R  unused area
                                            1820+* MACHINE-CHECK INTERRUPTION INFORMATION
0000D4  00000000                            1821+MKXSAA   DC    F'0'         0D4 R  Machine-Check Extended Save Area Address
0000D8  00000000 00000000                   1822+MKCPUTIM DC    FD'0'        0D8 R  Machine-Check CPU timer save area
0000E0  00000000 00000000                   1823+MKCLKCMP DC    FD'0'        0E0 R  Machine-Check clock comparator save area
0000E8  00000000                            1824+MKICODE  DC    F'0'         0E8 R  Machine-Check interruption code
0000EC  00000000 00000000                   1825+UA6      DC    XL8'00'      0EC R  unused area
0000F4  00000000                            1826+MKDMGCOD DC    F'0'         0F4 R  Machine-Check external damage code
0000F8                                      1827+ZMKFAILA DC    0FD'0'       0F8 R  Machine-Check failing storage address
0000F8  00000000                            1828+MKFAILA  DC    F'0'         0F8 R  Machine-Check failing storage address
0000FC  00000000                            1829+MKMODEL  DC    F'0'         0FC R  Machine-Check model dependent information
000100  00000000 00000000                   1830+MKLOGOUT DC    4F'0'        100 R  ESA machine-check fixed logout area
000108  00000000 00000000
000110                      000110  000100  1831+         ORG   ASBEGIN+X'100'
000100  00000000 00000000                   1832+ZEMONCTR DC    AD(0)        100 R  Enhanced-Monitor Counter-Array Origin
000108  00000000                            1833+ZEMONSIZ DC    F'0'         108 R  Enhanced-Monitor Counter-Array Size
00010C  00000000                            1834+ZEMONCNT DC    F'0'         10C R  Enhanced-Monitor Exception Count
000110  00000000 00000000                   1835+ZBRKADDR DC    AD(0)        110 R  Breaking-Event Address
000118  00000000 00000000                   1836+UA7      DC    FD'0'        118 R  unused area
000120  00000000 00000000                   1837+MKARS    DC    16F'0'       120 R  Machine-Check access register save area
000128  00000000 00000000
000130  00000000 00000000
000138  00000000 00000000
000140  00000000 00000000
000148  00000000 00000000
000150  00000000 00000000
000158  00000000 00000000
000160                      000160  000100  1838+         ORG   ASBEGIN+X'100'
000100  00000000 00000000                   1839+MCKLOG   DC    24F'0'       100 R  System/370, 370-XA machine-Check fixed logout area.
000108  00000000 00000000
000110  00000000 00000000
000118  00000000 00000000
000120  00000000 00000000
000128  00000000 00000000
000130  00000000 00000000
000138  00000000 00000000
000140  00000000 00000000
000148  00000000 00000000
000150  00000000 00000000
000158  00000000 00000000
000160  00000000 00000000                   1840+MKFPRS   DC    4D'0'        160 R  Machine-Check floating point register save area
000168  00000000 00000000
000170  00000000 00000000
000178  00000000 00000000
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:14:14  Page    46

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

000180  00000000 00000000                   1841+NKGRS    DC    16F'0'       180 R  Machine-Check general register save area
000188  00000000 00000000
000190  00000000 00000000
000198  00000000 00000000
0001A0  00000000 00000000
0001A8  00000000 00000000
0001B0  00000000 00000000
0001B8  00000000 00000000
0001C0  00000000 00000000                   1842+MKCRS    DC    16F'0'       1C0 R  Machine-Check control register save area
0001C8  00000000 00000000
0001D0  00000000 00000000
0001D8  00000000 00000000
0001E0  00000000 00000000
0001E8  00000000 00000000
0001F0  00000000 00000000
0001F8  00000000 00000000
                                            1843+* STORE/STATUS SAVE AREAS
000200                      000200  0000D4  1844+         ORG   ASBEGIN+X'D4'
0000D4  00000000                            1845+SSXSAA   DC    A(0)         0D4 A  Store Status Extended Save Area Address
0000D8  00000000 00000000                   1846+SSCPUTIM DC    FD'0'        0D8 A  CPU Timer save area
0000E0  00000000 00000000                   1847+SSCLKCMP DC    FD'0'        0E0 A  Clock-Comparator save area
0000E8                      0000E8  000100  1848+         ORG   ASBEGIN+X'100'
000100  00000000 00000000                   1849+SSPSW    DC    FD'0'        100 A  Program-Status Word save area
000108  00000000                            1850+SSPREFIX DC    F'0'         108 A  Prefix save area
00010C  00000000                            1851+SSMODEL  DC    F'0'         10C A  Model-dependent save area
000110                      000110  000120  1852+         ORG   ASBEGIN+X'120'
000120  00000000 00000000                   1853+SSARS    DC    16F'0'       120 A  Access-register save area
000128  00000000 00000000
000130  00000000 00000000
000138  00000000 00000000
000140  00000000 00000000
000148  00000000 00000000
000150  00000000 00000000
000158  00000000 00000000
000160  00000000 00000000                   1854+SSFPRS   DC    4D'0'        160 A  Floating-point register save area
000168  00000000 00000000
000170  00000000 00000000
000178  00000000 00000000
000180  00000000 00000000                   1855+SSGRS    DC    16F'0'       180 A  General register save area
000188  00000000 00000000
000190  00000000 00000000
000198  00000000 00000000
0001A0  00000000 00000000
0001A8  00000000 00000000
0001B0  00000000 00000000
0001B8  00000000 00000000
0001C0  00000000 00000000                   1856+SSCRS    DC    16F'0'       1C0 A  Control register save area
0001C8  00000000 00000000
0001D0  00000000 00000000
0001D8  00000000 00000000
0001E0  00000000 00000000
0001E8  00000000 00000000
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:14:14  Page    47

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

0001F0  00000000 00000000
0001F8  00000000 00000000
                                            1857+* z/Architecture OLD PROGRAM STATUS WORDS
000200                      000200  000120  1858+         ORG   ASBEGIN+X'120'
000120  00000000 00000000                   1859+ZRSTOPSW DC    XL16'00'     120 R  Restart Old PSW
000128  00000000 00000000
000130  00000000 00000000                   1860+ZEXTOPSW DC    XL16'00'     130 R  External Old PSW
000138  00000000 00000000
000140  00000000 00000000                   1861+ZSVCOPSW DC    XL16'00'     140 R  Supervisor-Call Old PSW
000148  00000000 00000000
000150  00000000 00000000                   1862+ZPGMOPSW DC    XL16'00'     150 R  Program Old PSW
000158  00000000 00000000
000160  00000000 00000000                   1863+ZMCKOPSW DC    XL16'00'     160 R  Machine-Check Old PSW
000168  00000000 00000000
000170  00000000 00000000                   1864+ZIOOPSW  DC    XL16'00'     170 R  Input-Output Old PSW
000178  00000000 00000000
000180  00000000 00000000                   1865+UA8      DC    XL32'00'     180 R  z/Architecture unused area
000188  00000000 00000000
000190  00000000 00000000
000198  00000000 00000000
                                            1866+* z/Architecture NEW PROGRAM STATUS WORD AREAS
0001A0  00000000 00000000                   1867+ZRSTNPSW DC    XL16'00'     1A0 R  Restart New PSW
0001A8  00000000 00000000
0001B0  00000000 00000000                   1868+ZEXTNPSW DC    XL16'00'     1B0 R  External New PSW
0001B8  00000000 00000000
0001C0  00000000 00000000                   1869+ZSVCNPSW DC    XL16'00'     1C0 R  Supervisor-Call New PSW
0001C8  00000000 00000000
0001D0  00000000 00000000                   1870+ZPGMNPSW DC    XL16'00'     1D0 R  Program New PSW
0001D8  00000000 00000000
0001E0  00000000 00000000                   1871+ZMCKNPSW DC    XL16'00'     1E0 R  Machine-Check New PSW
0001E8  00000000 00000000
0001F0  00000000 00000000                   1872+ZIONPSW  DC    XL16'00'     1F0 R  Input/Output New PSW
0001F8  00000000 00000000
                            0011C0  000001  1873+ZSASDISP EQU   X'11C0'   Displacement to save areas defined by ASAZAREA macro
                            000200  000001  1874+ASEND    EQU   *                   End of absolute/real assigned storage areas
                            000200  000001  1875+ASLENGTH EQU   ASEND-ASBEGIN       Length of absolute/real assigned storage area
                                            1876+* LOGICAL ADDRESS USAGE
                            00031B  000001  1877+CPUID    EQU   *+X'11B'     31B L  System/370 CPU Identity used during DAS tracing
                                            1879+ASA      DSECT
000200                      000200  000200  1880+         ORG   ASA+X'200'
000200  00000000 00000000                   1881+LODPARMS DS    CL64     Hercules IPL parameters
000208  00000000 00000000
000210  00000000 00000000
000218  00000000 00000000
000220  00000000 00000000
000228  00000000 00000000
000230  00000000 00000000
000238  00000000 00000000
                                            1882+* Addresses reflect location of LOD1 record when placed in its ASA area
                                            1883+* 000240-00028F.  Fields identified with an asterisk (*) indicate that
                                            1884+* the boot loader supplies the information during execution.
                            000240  000001  1885+LOD1     EQU   *        Start of LOD1 record definition
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:14:14  Page    48

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

000240  00000000                            1886+LOD1REC  DS    CL4      000240 - Record ID 'LOD1' in EBCDIC

000244  00                                  1888+LOD1DTYP DS    XL1      000244 - IPL Device Type related information
                            000001  000001  1889+LOD1OBJ  EQU   B'00000001'   Booted program is in an object deck
                            000002  000001  1890+LOD1LENF EQU   B'00000010'   Directed record header contains a length field
                            000004  000001  1891+LOD1CARD EQU   B'00000100'   IPL device is a card reader
                            000008  000001  1892+LOD1TAPE EQU   B'00001000'   IPL device is a tape drive
                            000010  000001  1893+LOD1FBA  EQU   B'00010000'   IPL device is a FBA DASD drive
                            000020  000001  1894+LOD1CKD  EQU   B'00100000'   IPL device is a CKD DASD drive
                            000040  000001  1895+LOD1ECKD EQU   B'01000000'   IPL device is a ECKD DASD drive

000245  00                                  1897+LOD1BLFL DS    XL1      000245 - Boot loader flags
                            000080  000001  1898+LOD1BLCA EQU   B'10000000'   Change architecture before loading booted program
                            000040  000001  1899+LOD1BL64 EQU   B'01000000'   Set 64-bit address mode before entering program
                            000020  000001  1900+LOD1BLTR EQU   B'00100000'   Set trap new PSW's before entering program
                            000010  000001  1901+LOD1BLF1 EQU   B'00010000'   Use Format-1 CCW's and 31 bit addressing mode

000246  0000                                1903+LOD1MDLN DS    HL2      000246 - Maximum directed record length in bytes

                                            1905+* After loading of a booted progrm, these two fields must match.
                                            1906+* Note: not used when loading an absolute object deck.
000248  00000000                            1907+LOD1BPLN DS    FL4      000248 - Length of booted program content on medium
00024C  00000000                            1908+LOD1BPLD DS    FL4    * 00024C - Length of loaded boot program
000250  00000000                            1909+LOD1ENTR DS    FL4      000250 - Booted program's entry address

000254  00                                  1911+LOD1CPU  DS    XL1    * 000254 - Boot loader's CPU running architecture
                            000000  000001  1912+LOD1CPNA EQU   X'00'         CPU architecture not available
                            000001  000001  1913+LOD1360  EQU   X'01'         S/360 in BC mode
                            000002  000001  1914+LOD1370B EQU   X'02'         S/370 in BC mode
                            000003  000001  1915+LOD1370E EQU   X'03'         S/370 in EC mode
                            000004  000001  1916+LOD1380  EQU   X'04'         S/380
                            000005  000001  1917+LOD1370X EQU   X'05'         370-XA through ESA/390
                            000006  000001  1918+LOE1E370 EQU   X'06'         ESA/370
                            000007  000001  1919+LOD1E390 EQU   X'07'         ESA/390
                            000008  000001  1920+LOD1S390 EQU   X'08'         ESA/390 on dual z/Arthitecture(R) system
                            000009  000001  1921+LOD1ESAZ EQU   X'09'         z/Architecture on a dual z/Architecture system
                            00000A  000001  1922+LOD1Z    EQU   X'0A'         z/Architecture only system
                            0000FF  000001  1923+LOD1CPIN EQU   X'FF'         Invalid CPU operating environment

000255  00                                  1925+LOD1IO   DS    XL1    * 000255 - Boot loader's I/O architecture and mode
                            000000  000001  1926+LOD1IONA EQU   B'00000000'   I/O architecture and mode not available
                            000010  000001  1927+LOD1IACH EQU   B'00010000'   I/O architecture is channel based
                            000020  000001  1928+LOD1IACS EQU   B'00100000'   I/O architecture is channel subsystem based
                            0000C0  000001  1929+LOD1IAIN EQU   B'11000000'   I/O architecture is invalid
                            000001  000001  1930+LOD1IM24 EQU   B'00000001'   I/O architecture uses CCW Format-0 CCW's
                            000002  000001  1931+LOD1IM31 EQU   B'00000010'   I/O architecture uses CCW Format-0 CCW's
                            000004  000001  1932+LOD1IM64 EQU   B'00000100'   I/O architecture uses CCW1's plus IDAW-2's.
                            000008  000001  1933+LOD1IMIN EQU   B'00001000'   I/O architecture mode is invalid
                            0000C8  000001  1934+LOD1IOIN EQU   LOD1IAIN+LOD1IMIN  I/O architecture or mode invalid
                            000011  000001  1935+LOD1I370 EQU   LOD1IACH+LOD1IM24  S/360 and S/370 I/O
                            000022  000001  1936+LOD1IESA EQU   LOD1IACS+LOD1IM31  370-XA through ESA/390 I/O
                            000024  000001  1937+LOD1IZ   EQU   LOD1IACS+LOD1IM64  z/Architecture I/O
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:14:14  Page    49

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT


000256  00                                  1939+LOD1BLAM DS    XL1    * 000256 - Boot loader's addressing mode when booted
                                            1940+*                                program is entered
                            000000  000001  1941+LOD1AMAN EQU   X'00'         Addressing mode not available
                            000001  000001  1942+LOD1AM24 EQU   X'01'         Addressing mode is 24-bits
                            000002  000001  1943+LOD1AM31 EQU   X'02'         Addressing mode is 31-bits
                            000003  000001  1944+LOD1AM64 EQU   X'03'         Addressing mode is 64-bits
                            0000FF  000001  1945+LOD1AMIN EQU   X'FF'         Addressing mode is invalid

000257  00                                  1947+LOD1BLSV DS    XL1    * 000257 - Boot loader's services
                            000000  000001  1948+LOD1BLSN EQU   X'00'         Boot loader services are unavailable
                                            1949+* Meaning of these bits are defined by the boot loader. Not zero implies
                                            1950+* services are available and LOD1BLST is valid.  When zero, LOD1BLST is
                                            1951+* not available.

000258  00000000                            1953+LOD1FSEC DS    FL4      000258 - Directed record FBA DASD starting sector
00025C  0000                                1954+LOD1CCYL DS    HL2      00025C - Directed record CKD DASD starting cylinder
00025E  0000                                1955+LOD1CTRK DS    HL2      00025E - Directed record CKD DASD starting track
000260  00                                  1956+LOD1CREC DS    XL1      000260 - Directed record CKD DASD starting rec
000261  00                                  1957+LOD1CRTK DS    XL1      000261 - Number of directed records per track
000262  0000                                1958+LOD1CMCY DS    HL2      000262 - Maximum CKD DASD cylinder number
000264  0000                                1959+LOD1CMTR DS    HL2      000264 - Maximum CKD DASD track number
000266  0000                                1960+LOD1DEVN DS    HL2    * 000266 - Device Number of IPL device from CS
000268  00000000                            1961+LOC1DEVI DS    FL4    * 000268 - I/O command device ID (CUU / subchannel num)
00026C  00000000                            1962+LOD1IOA  DS    AL4(0)   00026C - Boot loader I/O area starting address
000270  00000000                            1963+LOD1BLST DS    AL4(0) * 000270 - Boot loader services address.
000274  00                                  1964+LOD1ARCH DS    XL1    * 000274 - Running architecture level at boot loader entry
000275  000000                              1965+LOD1RSV2 DS    XL3      000275 - RESERVED NOT IN USE
000278  00000000                            1966+LOD1RTN  DS    A(0)   * 000278 - Address returning to service caller

00027C  00000000 00000000                   1968+LOD1RSRV DS    5FL4     00027C - RESERVED NOT IN USE
000284  00000000 00000000
00028C  00000000
                            000050  000001  1969+LOD1LEN  EQU   *-LOD1   Length of LOD1 record
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:14:14  Page    50

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                            1971          END
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:14:14  Page    51

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

AARE0011            D    000520       8   266   265
AARI0011            H    000528       2   268   264
AARX0011            H    00052C       2   270   262   267
AMERROR             I    0006A4       4   461   407   409
AP240010            3    000480       8   214   206
AP310010            3    000478       8   213   205
AP640010            U    000468      16   212   204
APDN0010            H    0004F2       2   252   215   216   224   239   242   248
APSP0010            F    0004B0       8   219   203   255
APSS0010            F    0004A8       8   218   202   254
APSZ0010            F    000498       8   217   201   253
ARCHBAD             I    0006AC       4   463   273   274   275
ARCHSOK             H    000540       2   277   272
ASA                 4    000000     656  1720  1880   171   536   635   680   787   840  1002  1238
ASAREGN             2    000000     512   133
ASASECT             J    000000     512   133   136   143   146   148
ASBEGIN             U    000000       1  1721  1726  1768  1804  1813  1831  1838  1844  1848  1852  1858  1875
ASEND               U    000200       1  1874  1875
ASLENGTH            U    000200       1  1875
BADDEVT             I    000684       4   453   185
BCEXTCOD            H    00001A       2  1738
BCIOCOD             H    00003A       2  1746
BCMCKCOD            H    000032       2  1744
BCPGMCOD            H    00002A       2  1742
BCSVCCOD            H    000022       2  1740
BLS                 H    000708       2   535   194   541
BLS3270             U    000078       1  1457
BLSACT              X    00000B       1  1478  1119  1139  1268
BLSATTN             U    000080       1  1472  1117
BLSBUSY             U    000080       1  1460  1060  1159  1164  1168  1173
BLSCALL             H    000738       2   559   555
BLSCARD             U    000098       1  1453
BLSCH               X    000009       1  1474  1131
BLSCKD              U    000089       1  1451
BLSCON              U    000070       1  1456
BLSDEV              H    000000       2  1439   312   705   802   912
BLSERR              X    00000C       1  1482   711   734   739   918   941   946  1133
BLSFBA              U    000008       1  1450
BLSHDW              F    000004       4  1468   706   913  1052  1085
BLSIOEL             U    000020       1  1489   748  1298  1306
BLSIOT              4    000000      32  1438  1489   308   702   800   867   889  1047  1082  1130  1154  1203  1254
BLSMONE             H    000746       2   571   556
BLSNUM              U    000006       1   597   193
BLSPEOF             U    000080       1  1442   732   939  1150
BLSPR               U    000028       1  1455
BLSPROG             F    00001C       4  1488
BLSPUN              U    000020       1  1454
BLSR                H    00073C       2   563   196   548   557
BLSRDSN             U    000000       1  1479  1139
BLSREAD             U    000004       1  1480  1119  1268
BLSRSV              U    0000F8       1  1447
BLSRSV2             X    00000D       3  1484
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:14:14  Page    52

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

BLSSCLS             U    000038       1  1444
BLSSNS              X    00000A       1  1476
BLSSNSP             U    000001       1  1466
BLSSW               F    000010       4  1486  1096  1098  1100  1103
BLSTAPE             U    000090       1  1452
BLSTAT              U    000040       1  1463
BLSTATO             U    000020       1  1464  1120  1141  1255  1261
BLSTATS             U    000002       1  1465  1104  1110
BLSTATUS            X    000003       1  1459  1060  1104  1110  1120  1141  1159  1164  1168  1173  1255  1261
BLSTYP              X    000002       1  1441   707   732   737   867   914   939   944  1115  1150
BLSUE               U    000001       1  1473
BLSUNCH             X    000008       2  1470  1051  1103
BLSUNIT             X    000008       1  1471  1117  1137  1152  1204
BLSUNSOL            U    000040       1  1443   737   944  1115
CALLSRV             H    000720       2   550   546
CAW                 F    000048       4  1750
CAWADDR             R    000049       3  1753  1050
CAWKEY              X    000048       1  1751  1049
CAWSUSP             U    000008       1  1752
CC                  U    000040       1   162   475   476
CCW0                4    000000       8  1647  1653
CCW0ADDR            R    000001       3  1649
CCW0CNT             H    000006       2  1652
CCW0CODE            X    000000       1  1648
CCW0FLGS            X    000004       1  1650
CCW0L               U    000008       1  1653
CCWCC               U    000040       1  1657
CCWCD               U    000080       1  1656
CCWIDA              U    000004       1  1661
CCWPCI              U    000008       1  1660
CCWSKIP             U    000010       1  1659
CCWSLI              U    000020       1  1658
CCWSUSP             U    000002       1  1662
CHANID              F    0000A8       4  1805
CKSIZE              I    000620       6   400   393
CPUID               U    00031B       1  1877
CSW                 F    000040       8  1749   903  1098  1100
CSWATTN             U    000080       1  1685
CSWBUSY             U    000010       1  1688
CSWCCTL             U    000004       1  1700
CSWCCW              R    000001       3  1682  1100
CSWCDAT             U    000008       1  1699
CSWCE               U    000008       1  1689
CSWCHNG             U    000001       1  1702
CSWCNT              H    000006       2  1704
CSWCS               X    000005       1  1694
CSWCUE              U    000020       1  1687
CSWDCC0             U    000000       1  1678
CSWDCC1             U    000001       1  1679
CSWDCC3             U    000003       1  1680
CSWDCCM             U    000003       1  1677
CSWDE               U    000004       1  1690
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:14:14  Page    53

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

CSWFLAG             X    000000       1  1672  1098
CSWFMT              4    000000       8  1671  1705  1098  1100
CSWFMTL             U    000008       1  1705
CSWICTL             U    000002       1  1701
CSWIL               U    000040       1  1696
CSWKEYM             U    0000F0       1  1673
CSWLOG              U    000004       1  1676
CSWPCI              U    000080       1  1695
CSWPRGM             U    000020       1  1697
CSWPROT             U    000010       1  1698
CSWSM               U    000040       1  1686
CSWSUSP             U    000008       1  1675
CSWUC               U    000002       1  1691
CSWUS               X    000004       1  1684
CSWUX               U    000001       1  1692
CUMERROR            I    00069C       4   459   401
DEFN_EXT            U    000063       1   157   475
DESTRT              I    000694       4   457   386
DEVBUSY             I    00066C       4   445
DEVCSW              I    000674       4   447   371
DEVNOAVL            I    000664       4   443   372
DEVUNKN             I    00067C       4   449
DIE                 3    000700       8   510   443   444   445   446   447   448   449   450   453   454   455   456   457   458
                                                459   460   461   462   463   464
DMEMORY             4    000000     728  1323   286   361   638   683   697   790   843  1005  1241
DONE                3    0006F8       8   508
ENADADD             H    00089A       2   878   863
ENADERR             H    0008CC       2   902   895
ENADEV              U    000003       1   589   837
ENADGOOD            H    0008E2       2   911   893
ENADNOAV            H    0008DA       2   907   900
ENADOK              H    00088E       2   873   868
ENADRTN             I    000914       4   960   871   876   885   905   909
ENADSAVE            F    000120       4  1336   843
ENADSSPB            H    00090C       2   954
ENADTEST            H    0008B4       2   887   883
ENAQIOT             Y    00091E       2   967   857   859   866
ENDLSEC             U    0006E4       4   490   353
EOBL                D    000B70       8  1316   286   361   638   683   697   790   843  1005  1241  1291
EOBLA               A    000B54       4  1291
ERRU0043            I    0007D4       4   737   733
ERRU0051            I    000900       4   944   940
ERRX0043            H    0007E0       2   745   738
ERRX0051            H    00090C       2   952   945
EXCP                U    000004       1   592   431   999
EXCP00RC            H    000A90       2  1158  1127  1151
EXCP04              Y    000654       2   431   365
EXCP04RC            H    000A9A       2  1163  1153
EXCP08RC            H    000AA6       2  1167  1058  1132  1135  1142
EXCP12RC            H    000AB2       2  1172  1056  1057
EXCP16RC            H    000ABE       2  1177  1022  1024  1026  1028  1030  1032  1044
EXCPANAL            H    000A18       2  1109
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:14:14  Page    54

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

EXCPCONT            3    000AD8       8  1196  1066
EXCPDERR            I    000AEE       4  1204  1134  1148
EXCPDONE            U    0009C6       1  1068  1196
EXCPDOWT            H    0009BC       2  1065  1042  1091  1123  1149
EXCPFIND            I    0009DE       4  1081  1072
EXCPFNDS            I    0009F8       4  1092  1086
EXCPMVST            H    0009FC       2  1094  1075
EXCPONE             H    000AEC       2  1199
EXCPORB             X    000658      12   434   307
EXCPQIOT            H    0009E2       2  1084  1087
EXCPRCAL            I    000AC2       4  1188  1161  1166  1170  1175
EXCPSAVE            F    000168       4  1338  1005
EXCPSOL             H    000A48       2  1129  1116  1118
EXCPSOLE            H    000A74       2  1144  1138
EXCPTRAP            3    000AE0       8  1197  1069
EXCPWAIT            3    000AD0       8  1195  1067
EXCPZERO            F    000AE8       4  1198  1043  1051  1096
EXTCPUAD            H    000084       2  1770
EXTENT              X    0006D8       4   486   491   475
EXTENTL             U    000010       1   491   475
EXTICODE            H    000086       2  1771
EXTIPARM            F    000080       4  1769
EXTNPSW             F    000058       8  1759
EXTOPSW             F    000018       8  1731  1737
FBACCW1             W    0006C0       8   475   440
FBACCW2             W    0006C8       8   476
FBACCW3             W    0006D0       8   477   348   357
FRSTLSEC            U    0006E0       4   488
FRSTPSEC            U    0006DC       4   487   358   395   396
HWM                 U    0002D8       1  1352   361
IMAGE               1    000000    2416     0
INIT01              Y    000644       2   419   297   306
INTMASK             X    00080C       4   767   750
INTPRI              U    000001       1  1311  1073
INTSEC              U    000002       1  1312  1092
INTSRC              X    000B6C       1  1310  1073  1090  1092
IOELADDR            F    0000AC       4  1806
IOIA0041            H    0007A0       2   696
IOICODE             H    0000BA       2  1811   337   704  1071  1085
IOIID               F    0000C0       4  1816
IOINIT              U    000001       1   583   419   677
IOINRTN             I    000802       4   759   754
IOINRTN0            I    000800       2   755   752
IOINRTN4            I    0007F8       4   753
IOINSAVE            F    000090       4  1332   683
IOIPARM             F    0000BC       4  1815
IONPSW              F    000078       8  1763  1066  1069
IOOPSW              F    000038       8  1735  1745
IOSSID              F    0000B8       4  1814
IOTBL               F    0001F8       4  1348   697
IOTBLBA             A    000B60       4  1305   698   799  1021  1081  1260
IOTBLE              U    0002D8       1  1350  1352
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:14:14  Page    55

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

IOTBLEA             A    000B68       4  1307   749   879   957  1023
IOTBLI              A    000B64       4  1306   881
IOTDEVS             U    000008       1  1349  1298
IOTMAX              A    000B5C       4  1298   699   701   882
IPLCCW1             F    000008       8  1723
IPLCCW2             F    000010       8  1724
IPLDEV              X    0006B8       2   470   337
IPLDEVTA            A    000B58       4  1293
IPLFND              I    00058C       6   337   319
IPLPSW              F    000000       8  1722
IS240010            H    0004DE       2   245   214
IS310010            H    0004C0       2   226   213
IS640010            H    0004B8       2   221   212
LCHANLOG            F    0000B0       4  1807
LOADER              2    000400    1904   168
LOC1DEVI            U    000268       4  1961
LOCATE              X    0006E8       1   495   499   476
LOCATEL             U    000008       1   499   476
LOCSECS             U    0006EA       2   497   350
LOC_DATA            U    000043       1   158   476
LOD1                U    000240       1  1885  1969
LOD1360             U    000001       1  1913
LOD1370B            U    000002       1  1914
LOD1370E            U    000003       1  1915
LOD1370X            U    000005       1  1917
LOD1380             U    000004       1  1916
LOD1AM24            U    000001       1  1942
LOD1AM31            U    000002       1  1943
LOD1AM64            U    000003       1  1944
LOD1AMAN            U    000000       1  1941
LOD1AMIN            U    0000FF       1  1945
LOD1ARCH            X    000274       1  1964   256   261   263
LOD1BL64            U    000040       1  1899
LOD1BLAM            X    000256       1  1939   191
LOD1BLCA            U    000080       1  1898
LOD1BLF1            U    000010       1  1901
LOD1BLFL            X    000245       1  1897
LOD1BLSN            U    000000       1  1948
LOD1BLST            R    000270       4  1963   195   289   298   316   366   860
LOD1BLSV            X    000257       1  1947   193   545
LOD1BLTR            U    000020       1  1900
LOD1BPLD            U    00024C       4  1908   388   389   400
LOD1BPLN            U    000248       4  1907   400
LOD1CARD            U    000004       1  1891
LOD1CCYL            U    00025C       2  1954
LOD1CKD             U    000020       1  1894
LOD1CMCY            U    000262       2  1958
LOD1CMTR            U    000264       2  1959
LOD1CPIN            U    0000FF       1  1923
LOD1CPNA            U    000000       1  1912
LOD1CPU             X    000254       1  1911   192
LOD1CREC            X    000260       1  1956
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:14:14  Page    56

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

LOD1CRTK            X    000261       1  1957
LOD1CTRK            U    00025E       2  1955
LOD1DEVN            U    000266       2  1960
LOD1DTYP            X    000244       1  1888   184
LOD1E390            U    000007       1  1919
LOD1ECKD            U    000040       1  1895
LOD1ENTR            U    000250       4  1909   406   408   410
LOD1ESAZ            U    000009       1  1921
LOD1FBA             U    000010       1  1893   184
LOD1FSEC            U    000258       4  1953   358
LOD1I370            U    000011       1  1935
LOD1IACH            U    000010       1  1927  1935
LOD1IACS            U    000020       1  1928  1936  1937
LOD1IAIN            U    0000C0       1  1929  1934
LOD1IESA            U    000022       1  1936
LOD1IM24            U    000001       1  1930  1935
LOD1IM31            U    000002       1  1931  1936
LOD1IM64            U    000004       1  1932  1937
LOD1IMIN            U    000008       1  1933  1934
LOD1IO              X    000255       1  1925   190
LOD1IOA             R    00026C       4  1962   355
LOD1IOIN            U    0000C8       1  1934
LOD1IONA            U    000000       1  1926
LOD1IZ              U    000024       1  1937
LOD1LEN             U    000050       1  1969
LOD1LENF            U    000002       1  1890   184
LOD1MDLN            U    000246       2  1903   346
LOD1OBJ             U    000001       1  1889
LOD1REC             C    000240       4  1886
LOD1RSRV            U    00027C       4  1968
LOD1RSV2            X    000275       3  1965
LOD1RTN             A    000278       4  1966   197   654   761   815   962  1190  1280
LOD1S390            U    000008       1  1920
LOD1TAPE            U    000008       1  1892
LOD1Z               U    00000A       1  1922
LODPARMS            C    000200      64  1881   172
LODSECT             J    000400    1904   168
LODSTART            I    000400       4   172   147
LOE1E370            U    000006       1  1918
MCKLOG              F    000100       4  1839
MCKNPSW             F    000070       8  1762
MCKOPSW             F    000030       8  1734  1743
MEASUREB            X    0000B9       1  1810
MKARCHMD            X    0000A3       1  1798
MKARS               F    000120       4  1837
MKCLKCMP            F    0000E0       8  1823
MKCPUTIM            F    0000D8       8  1822
MKCRS               F    0001C0       4  1842
MKDMGCOD            F    0000F4       4  1826
MKFAILA             F    0000F8       4  1828
MKFPRS              D    000160       8  1840
MKICODE             F    0000E8       4  1824
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:14:14  Page    57

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

MKLOGOUT            F    000100       4  1830
MKMODEL             F    0000FC       4  1829
MKXSAA              F    0000D4       4  1821
MONCLS              H    000094       2  1786
MONCODE             F    00009C       4  1793
MONNUMBR            X    000095       1  1788
MOVEREC             H    0005EA       2   376   369
MPGACCID            X    0000A2       1  1796
NKGRS               F    000180       4  1841
NOOP                U    000000       1   580   415   632
NOOPSAVE            F    000048       4  1330   638
NOP                 U    000003       1   156
ONE                 F    0006B4       4   467
ORB                 4    000000      32  1529  1559  1567
ORB1_0              X    000004       1  1532
ORB1_8              X    000005       1  1539
ORBA                U    000010       1  1543
ORBB                U    000004       1  1545
ORBC                U    000004       1  1535
ORBCCW              A    000008       4  1557
ORBCSS              X    00000C       1  1561
ORBCU               X    00000E       1  1564
ORBD                U    000040       1  1552
ORBF                U    000080       1  1540
ORBH                U    000002       1  1546
ORBI                U    000020       1  1542
ORBKEYM             U    0000F0       1  1533
ORBL                U    000080       1  1550
ORBLEN              U    00000C       1  1559
ORBLPM              X    000006       1  1548
ORBM                U    000002       1  1536
ORBP                U    000040       1  1541
ORBPARM             F    000000       4  1530
ORBPGM              X    00000E       1  1563
ORBRSV25            U    00007E       1  1554
ORBRSV26            U    00003E       1  1553
ORBRSV3             U    00007F       1  1551
ORBRSV4             U    000080       1  1558
ORBRSV5             X    00000D       1  1562
ORBRSV6             X    00000F       1  1565
ORBRSV7             X    000010      16  1566
ORBS                U    000008       1  1534
ORBT                U    000001       1  1547
ORBU                U    000008       1  1544
ORBX                U    000001       1  1555
ORBXLEN             U    000020       1  1567
ORBY                U    000001       1  1537
ORRB1_24            X    000007       1  1549
OVRWRITE            I    00068C       4   455   379
PCFETO              A    0000C4       4  1817
PDEVENDM            U    00000C       1  1209  1038
PDEVENDS            X    000AF2       1  1208  1037  1038  1147
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:14:14  Page    58

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

PENDSAVE            F    0001B0       4  1340  1241
PERACCID            X    0000A1       1  1795
PERADDR             F    000098       4  1792
PERCODE             X    000096       1  1789
PERCODMK            U    0000F0       1  1790
PGMACCID            X    0000A0       1  1794
PGMDXC              F    000090       4  1784
PGMICODE            H    00008E       2  1783
PGMIID              F    00008C       4  1779
PGMIILC             X    00008D       1  1781
PGMIILCM            U    00000C       1  1782
PGMNPSW             F    000068       8  1761
PGMOPSW             F    000028       8  1733  1741
PGMRS               3    0006F0       8   503   180   189
PGMTRX              F    000090       4  1785
PNDDEV              I    000B44       4  1274  1271
PNDING              U    000005       1   595  1235
PNDINGD             H    000B30       2  1267  1256  1262
PNDLOOP             I    000B20       4  1261  1263
PNDRTN              I    000B48       4  1278  1257  1265
PNDSNS              I    000B40       4  1272  1269
PNDSRCH             H    000B1C       2  1259  1253
QIOFOUND            H    00083C       2   808   803
QIORETRN            I    000840       4   813
QIOT                U    000002       1   586   423   784   967
QIOTLOOP            H    000828       2   801   804
QIOTSAVE            F    0000D8       4  1334   790
QUERY02             Y    00064C       2   423   312   315
READ                U    000042       1   159   477
READLOOP            H    0005C6       2   364   397
RSTNPSW             F    000000       8  1727   180   189
RSTOPSW             F    000008       8  1728
SAVEA               4    000000      72  1496  1515   538   565   637   641   645   651   682   686   690   758   789   793   797
                                                812   842   846   850   959  1004  1008  1012  1187  1240  1244  1248  1277
SAVEAREA            F    000000       4  1328   286
SAVEBCK             A    000004       4  1498   642   652   687   759   794   813   847   960  1009  1188  1245  1278
SAVEFWD             A    000008       4  1499   639   684   791   844  1006  1242
SAVELEN             U    000048       1  1515
SAVER0              F    000014       4  1502
SAVER1              F    000018       4  1503
SAVER10             F    00003C       4  1512
SAVER11             F    000040       4  1513
SAVER12             F    000044       4  1514
SAVER14             A    00000C       4  1500   539   567
SAVER15             A    000010       4  1501   566
SAVER2              F    00001C       4  1504
SAVER3              F    000020       4  1505
SAVER4              F    000024       4  1506
SAVER5              F    000028       4  1507
SAVER6              F    00002C       4  1508
SAVER7              F    000030       4  1509
SAVER8              F    000034       4  1510
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:14:14  Page    59

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

SAVER9              F    000038       4  1511
SAVERSV             F    000000       4  1497
SCANOUT             X    000080       1  1765  1766
SCANOUTL            U    000000       1  1766
SCSW                4    000000      12  1576  1638  1098  1100  1103
SCSW0CC             U    000004       1  1592
SCSW1               X    000002       1  1596
SCSW2               X    000003       1  1605
SCSWACP             U    000001       1  1604
SCSWADA             U    000040       1  1607
SCSWAHP             U    000002       1  1603
SCSWALKC            U    000010       1  1590
SCSWARP             U    000008       1  1601
SCSWASA             U    000080       1  1606
SCSWASP             U    000004       1  1602
SCSWASUS            U    000020       1  1608
SCSWATTN            U    000080       1  1618
SCSWBUSY            U    000010       1  1621
SCSWCCTL            U    000004       1  1633
SCSWCCW             A    000004       4  1615  1100
SCSWCCWF            U    000080       1  1587
SCSWCCWP            U    000040       1  1588
SCSWCDAT            U    000008       1  1632
SCSWCE              U    000008       1  1622
SCSWCHNG            U    000001       1  1635
SCSWCNT             H    00000A       2  1637
SCSWCS              X    000009       1  1627
SCSWCTLS            X    000001       1  1586
SCSWCUE             U    000020       1  1620
SCSWDCC0            U    000000       1  1582
SCSWDCC1            U    000001       1  1583
SCSWDCC3            U    000003       1  1584
SCSWDCCM            U    000003       1  1581
SCSWDE              U    000004       1  1623
SCSWECWC            U    000002       1  1593
SCSWESWF            U    000004       1  1580
SCSWFC              U    000010       1  1600
SCSWFH              U    000020       1  1599
SCSWFLAG            X    000000       1  1577  1098
SCSWFM              U    000070       1  1597
SCSWFS              U    000040       1  1598
SCSWICTL            U    000002       1  1634
SCSWIL              U    000040       1  1629
SCSWISIC            U    000020       1  1589
SCSWKEYM            U    0000F0       1  1578
SCSWL               U    00000C       1  1638
SCSWPCI             U    000080       1  1628
SCSWPNOP            U    000001       1  1594
SCSWPRGM            U    000020       1  1630
SCSWPROT            U    000010       1  1631
SCSWSAS             U    000010       1  1609
SCSWSINT            U    000008       1  1610
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:14:14  Page    60

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

SCSWSM              U    000040       1  1619
SCSWSPEN            U    000001       1  1613
SCSWSPRI            U    000004       1  1611
SCSWSSEC            U    000002       1  1612
SCSWSSIC            U    000008       1  1591
SCSWSUSC            U    000008       1  1579
SCSWUC              U    000002       1  1624  1137
SCSWUS              X    000008       1  1617  1103
SCSWUX              U    000001       1  1625  1152
SERVENAD            H    000850       2   838   588   839
SERVEXCP            H    00092C       2  1000   591  1001
SERVIOIN            H    000790       2   678   582   679
SERVNOOP            H    000764       2   633   579   634
SERVPEND            H    000AF8       2  1236   594  1237
SERVQIOT            H    000814       2   785   585   786
SERVTBL             A    000748       4   579   552
SPB                 4    000000      16  1358   306   537   636   681   694   788   841   853  1003  1015  1239
SPBCCW0             U    000001       1  1370
SPBCCW1             U    000002       1  1371
SPBCCWF             X    000002       1  1369
SPBCHST             X    000007       1  1390
SPBDCLS             X    000004       1  1383   867   914
SPBDEVST            X    000006       1  1389   903
SPBE                U    000004       1  1361  1377  1382  1384  1386  1391  1431
SPBEATN             U    000080       1  1410
SPBEBY1             U    000080       1  1400  1410  1041
SPBECTL             X    000002       1  1399  1037  1041
SPBENRM             U    00000C       1  1409
SPBEORB             F    000004       4  1416  1417
SPBEORB1            X    000009       1  1422  1029
SPBEORB2            X    00000B       1  1424  1031
SPBEORBC            X    00000C       4  1425
SPBEORBK            X    000008       1  1419  1027  1049
SPBEORBL            X    00000A       1  1423
SPBEORBM            U    0000F0       1  1420
SPBEORBP            X    00000D       3  1427  1043  1050
SPBEORBR            U    00000F       1  1421  1027
SPBEORBT            F    000004       4  1418  1021  1023  1025  1046
SPBEWCO             U    000008       1  1406
SPBEWDC             U    00000C       1  1405  1409   431
SPBEWDO             U    000004       1  1407
SPBEWNO             U    000000       1  1408
SPBEWTM             U    00000C       1  1403
SPBID               H    000000       2  1359   544
SPBIOTA             F    000004       4  1364   306   746   809   866   874   955  1252  1274
SPBPEND             X    000003       1  1412  1121  1140
SPBPENDG            U    000001       1  1413  1121  1140
SPBPENDN            U    000000       1  1414
SPBSI               H    000002       2  1360  1368  1398   646   648   707   751   802   857   890
SSARCHMD            X    0000A3       1  1797
SSARS               F    000120       4  1853
SSCLKCMP            F    0000E0       8  1847
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:14:14  Page    61

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

SSCPUTIM            F    0000D8       8  1846
SSCRS               F    0001C0       4  1856
SSFPRS              D    000160       8  1854
SSGRS               F    000180       4  1855
SSMODEL             F    00010C       4  1851
SSPREFIX            F    000108       4  1850
SSPSW               F    000100       8  1849
SSXSAA              A    0000D4       4  1845
STBC0010            3    000490       8   216   250
STFLDATA            F    0000C8       4  1818
SVCICODE            H    00008A       2  1777
SVCIID              F    000088       4  1773
SVCIILC             X    000089       1  1775
SVCIILCM            U    00000C       1  1776
SVCNPSW             F    000060       8  1760
SVCOPSW             F    000020       8  1732  1739
TEST00              Y    000640       2   415   288
TIMER               F    000050       4  1756
TTDES               F    000054       4  1757
UA0                 F    000010       8  1729
UA1                 F    00004C       4  1754
UA2                 F    0000A4       4  1799
UA3                 F    0000B4       4  1808
UA4                 X    0000B8       1  1809
UA5                 X    0000CC       8  1819
UA6                 X    0000EC       8  1825
UA7                 F    000118       8  1836
UA8                 X    000180      32  1865
WH310010            3    000488       8   215   228
ZBRKADDR            A    000110       8  1835
ZEMONCNT            F    00010C       4  1834
ZEMONCTR            A    000100       8  1832
ZEMONSIZ            F    000108       4  1833
ZEXTNPSW            X    0001B0      16  1868
ZEXTOPSW            X    000130      16  1860
ZIONPSW             X    0001F0      16  1872
ZIOOPSW             X    000170      16  1864
ZMCKNPSW            X    0001E0      16  1871
ZMCKOPSW            X    000160      16  1863
ZMKFAILA            F    0000F8       8  1827
ZMONCODE            F    0000B0       8  1802
ZPGMNPSW            X    0001D0      16  1870
ZPGMOPSW            X    000150      16  1862
ZPGMTRX             F    0000A8       8  1801
ZRSTNPSW            X    0001A0      16  1867
ZRSTOPSW            X    000120      16  1859
ZSASDISP            U    0011C0       1  1873
ZSVCNPSW            X    0001C0      16  1869
ZSVCOPSW            X    000140      16  1861
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:14:14  Page    62

 MACRO     DEFN  REFERENCES

AARCH       259
APROB       200
ARCHIND      85
ARCHLVL      84
ASAIPL      144
ASALOAD     132
ASAREA     1719
BLASALD     131
BLCOMMON   1289
BLINIT      170
BLMEM      1319
BLSASA     1718
BLSCALL     287    296    314    363    858
BLSERR      710    917
BLSIODS    1521
BLSIOT     1434
BLSORB      432
BLSPB      1354
BLSTABLE    577
BOOTNTR     405
DSECTS     1527   1574   1645   1669
DWAIT       502    507    509
DWAITEND    506
IOFMT      1528   1575   1646   1670
IOTBL      1346
LOADHL      345    380
LOD1       1878
LTEST       553   1251
ORB         433
SAVEAREA   1327   1329   1331   1333   1335   1337   1339   1495
SERVENAD    834
SERVEND     596
SERVEXCP    996
SERVICE     630    675    782    835    997   1233
SERVID      578    581    584    587    590    593
SERVIOIN    674
SERVNOOP    629
SERVPEND   1232
SERVQIOT    781
SERVRTN     650    757    811    958   1186   1276
SERVS       534
STCCWADR    356
STCCWCNT    347
STLOD1      188
TRAP64      134    137
VMOVE       383
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:14:14  Page    63

   DESC     SYMBOL  SIZE    POS      ADDR

Entry: 0

Image      IMAGE    2416  000-96F  000-96F
  Region   ASAREGN   512  000-1FF  000-1FF
    CSECT  ASASECT   512  000-1FF  000-1FF
  Region   LOADER   1904  200-96F  400-B6F
    CSECT  LODSECT  1904  200-96F  400-B6F


 ADDR    POS                                OBJECT CONTENT                                         CHARACTER CONTENT


Region: ASAREGN

000000   000   00080000 00000400 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
000020   020   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
000040   040   00000000 00000000 00000000 00000000  00000000 00000000 000A0000 00000018   |................ ................|
000060   060   000A0000 00000020 000A0000 00000028  000A0000 00000030 000A0000 00000038   |................ ................|
000080   080   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
0000A0   0A0   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
0000C0   0C0   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
0000E0   0E0   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
000100   100   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
000120   120   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
000140   140   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
000160   160   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
000180   180   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
0001A0   1A0   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
0001C0   1C0   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
0001E0   1E0   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|

Region: LOADER

000400   200   900F0200 0DC0D207 0000C2EA 95120244  4770C27E D2070000 C2EA9211 02559201   |......K...B.n... ..B=K...B.k...k.|
000420   220   02569203 02549206 02574100 C3025000  02704100 C3365000 0278D20F C09201D0   |..k...k.....C.&. ....C.&...K..k..|
000440   240   D207C0A2 0060D207 C0AA0068 D20F01D0  C062D207 0060C072 D2070068 C07A1B66   |K..s.-K.....K... ..K..-..K....:..|
000460   260   0A000000 00000000 00000001 80000000  00000000 000004B8 00080000 800004C0   |................ ................|
000480   280   00080000 000004DE 00080000 800004F2  00000000 000004F2 00000000 00000000   |...............2 .......2........|
0004A0   2A0   00000000 00000000 00000000 00000000  00000000 00000000 47690009 47F0C0EC   |................ .............0..|
0004C0   2C0   D2070068 C0824160 0007B2B1 00009140  00C84780 C0EC4160 000847F0 C0EC4160   |K....b.-......j  .H.....-...0...-|
0004E0   2E0   00039108 00294710 C0EC4160 00028200  C08AD20F 01D0C092 D2070060 C0A2D207   |..j........-..b. ..K....kK..-.sK.|
000500   300   0068C0AA 42600274 1F669503 02744780  C1269502 02744770 C1228200 C11A0000   |.....-....n..... A.n.....A.b.A...|
000520   320   00080000 0000052C 4160000C 47F6C12A  47F0C13A 47F0C2A6 47F0C2A6 47F0C2A6   |.........-...6A. .0A..0Bw.0Bw.0Bw|
000540   340   41D0C76A 4110C23A 58F00270 0DEF12FF  4780C150 00004110 C23E58F0 02700DEF   |..G¦..B..0...... ..A&....B..0....|
000560   360   12FF4780 C1620000 5860C242 5060C252  D201C248 60004110 C24658F0 02700DEF   |....A....-B.&-B. K.B.-...B..0....|
000580   380   47FFC17E 47F0C186 00000004 D201C2B2  00BA1B22 18921B62 BF630246 4060C2D0   |..A=.0Af....K.B. .....k...... -B.|
0005A0   3A0   88600009 4060C2E4 18560660 5060C2DE  5840026C BE47C2CB D203C2D6 02584184   |h-.. -BU...-&-B. . .%..B.K.BO...d|
0005C0   3C0   00064130 CA424110 C24E58F0 02700DEF  47FFC1CE 47F0C1E4 00000004 47F0C26E   |........B+.0.... ..A..0AU.....0B>|
0005E0   3E0   47F0C25E 00000010 000058A4 0000153A  4720C286 BF934004 186918B9 0EA84710   |.0B;.......u.... ..Bf.l ......y..|
000600   400   C28E5E60 024C5060 024C9180 40004710  C21A1865 5E60C2D6 5060C2D6 47F0C1C0   |B.;-.<&-.<j. ... B...;-BO&-BO.0A.|
000620   420   D5030248 024C4770 C2969180 02504710  C29E9101 02534710 C29E58F0 025007FF   |N....<..Boj..&.. B.j.....B..0.&..|
000640   440   00000000 00010000 00000000 00020000  00000000 00040C00 00000000 0000FF00   |................ ................|
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:14:14  Page    64

 ADDR    POS                                OBJECT CONTENT                                         CHARACTER CONTENT

000660   460   000006C0 9204C301 8200C2FA 9208C301  8200C2FA 920CC301 8200C2FA 9210C301   |....k.C.b.B.k.C. b.B.k.C.b.B.k.C.|
000680   480   8200C2FA 9218C301 8200C2FA 921CC301  8200C2FA 9220C301 8200C2FA 9224C301   |b.B.k.C.b.B.k.C. b.B.k.C.b.B.k.C.|
0006A0   4A0   8200C2FA 9228C301 8200C2FA 922CC301  8200C2FA 00000001 00000000 00000000   |b.B.k.C.b.B.k.C. b.B.............|
0006C0   4C0   630006D8 40000010 430006E8 40000008  42000000 00000000 40000000 00000000   |...Q ......Y ... ........ .......|
0006E0   4E0   00000000 00000000 06000000 00000000  000A0000 00010008 000A0000 00000000   |................ ................|
000700   500   000A0000 00050000 90ECD00C 18CF4820  1000BD21 02574740 C01811F2 47F0C034   |................ ....... ...2.0..|
000720   520   89200002 4122C040 BF2F2000 4770C030  48F0C03E 47F0C034 18C207FC 5000D010   |i...... ........ .0...0...B..&...|
000740   540   98ECD00C 07FEFFFF 00000764 00000790  00000814 00000850 0000092C 00000AF8   |q............... .......&.......8|
000760   560   C2D3E200 4120C454 5020D008 50D02004  18D248B0 100241B0 B00140B0 10021B00   |BLS...D.&...&... .K........ .....|
000780   580   58D0D004 58F00278 07FF0000 C2D3E201  4120C470 5020D008 50D02004 18D21841   |.....0......BLS. ..D.&...&....K..|
0007A0   5A0   4160C5D8 5060C3D0 5850C3CC 1E565050  C3CC4850 00BA4050 60005050 6004D200   |.-EQ&-C..&C...&& C..&.. &-.&&-.K.|
0007C0   5C0   60024002 92F1600C 91806002 47E0C044  94FE600C 91406002 47E0C050 947F600C   |-. .k1-.j.-..... m.-.j -....&m"-.|
0007E0   5E0   50604004 4170601F 5070C3D8 B722C07C  92014002 47F0C070 41000004 47F0C072   |&- ...-.&.CQ...@ k. ..0.......0..|
000800   600   1B0058D0 D00458F0 027807FF FFFFFFFF  C2D3E202 4120C434 5020D008 50D02004   |.......0........ BLS...D.&...&...|
000820   620   18D21B00 9857C34C D5011002 50004780  C0288756 C0141850 41000004 50501004   |.K..q.C<N...&... ..g....&....&&..|
000840   640   58D0D004 58F00278 07FF0000 C2D3E203  4120C440 5020D008 50D02004 18D21841   |.....0......BLS. ..D &...&....K..|
000860   660   1B00D201 C0D04002 4110C0CE 58F00270  0DEF12FF 4770C04A 5850C0D2 D5004004   |..K... ......0.. .......¢.&.KN. .|
000880   680   50024780 C03E4100 001447F0 C0C45050  40044100 000447F0 C0C45820 C3181832   |&..........0.D&&  ......0.D..C...|
0008A0   6A0   5E30C314 5530C30C 4740C064 41000010  47F0C0C4 41202001 48104002 9D001000   |;.C...C.. ...... .0.D...... .....|
0008C0   6C0   4780C092 4740C07C 47F0C08A D2014006  00444100 000847F0 C0C44100 000C47F0   |...k. .@.0..K. . .......0.D.....0|
0008E0   6E0   C0C44010 20005010 2004D200 20024004  92F1200C 91802002 47E0C0B0 94FE200C   |.D ...&...K... . k1..j.......m...|
000900   700   91402002 47E0C0BC 947F200C 50204004  5030C318 58D0D004 58F00278 07FF0002   |j ......m"..&. . &.C......0......|
000920   720   00000000 00000000 C2D3E204 4120C3AC  5020D008 50D02004 18D21841 1F00D503   |........BLS...C. &...&....K....N.|
000940   740   4004C234 4740C192 D5034004 C23C4720  C1929103 40074770 C192910F 40084770   | .B.. AkN. .B... Akj. ...Akj. ...|
000960   760   C1929500 40094770 C1929500 400B4770  C192D200 C1C64002 940CC1C6 91804002   |Akn. ...Akn. ... AkK.AF .m.AFj. .|
000980   780   4710C090 D502400D C1BC4780 C1925850  4004D200 00484008 D2020049 400DD201   |....N. .A...Ak.&  .K... .K... .K.|
0009A0   7A0   5008C1BC 58105004 9C001000 4740C186  4720C186 4710C17A 92805003 D2070078   |&.A...&...... Af ..Af..A:k.&.K...|
0009C0   7C0   C1AC8200 C1A4D207 0078C1B4 BD1300BA  4770C0B2 9201C240 187547F0 C0D09879   |A.b.AuK...A..... ....k.B ...0..q.|
0009E0   7E0   C234D501 00BA7006 4780C0CC 8778C0B6  9200C240 47F0C090 9202C240 D2037011   |B.N.........g... k.B .0..k.B K...|
000A00   800   C1BCD200 70100040 D2067015 0041D601  70087018 96027003 91027003 4710C0F6   |A.K.... K.....O. ....o...j......6|
000A20   820   00009140 700247E0 C11C9180 700847E0  C11C9204 700B9620 70039201 40031557   |..j ....A.j..... A.k...o...k. ...|
000A40   840   4770C090 47F0C164 95005009 4770C17A  4330500C 4430C1C2 4770C17A 91025008   |.....0A.n.&...A: ..&...AB..A:j.&.|
000A60   860   47E0C148 9200500B 92014003 96205003  47F0C17A 4330C1C6 4430C1C2 47E0C090   |..A.k.&.k. .o.&. .0A:..AF..AB....|
000A80   880   91805002 47E0C164 91015008 4710C16E  947F5003 1F0047F0 C196947F 50034100   |j.&...A.j.&...A> m"&....0Aom"&...|
000AA0   8A0   000447F0 C196947F 50034100 000847F0  C196947F 50034100 000C47F0 C1964100   |...0Aom"&......0 Aom"&......0Ao..|
000AC0   8C0   001058D0 D00458F0 027807FF 00000000  020A0000 00000000 00080000 000009C6   |.......0........ ...............F|
000AE0   8E0   000A0000 00000038 00000000 00019100  50080000 C2D3E205 4120C228 5020D008   |..............j. &...BLS...B.&...|
000B00   900   50D02004 18D21B00 BF5F1004 4780C024  91205003 4710C038 47F0C050 9857C068   |&....K...ª...... j.&......0.&q...|
000B20   920   91205003 4710C038 8756C028 47F0C050  9504500B 4780C048 41000004 47F0C04C   |j.&.....g....0.& n.&..........0.<|
000B40   940   41000008 50501004 58D0D004 58F00278  07FF0000 00000B70 00000000 00000100   |....&&.......0.. ................|
000B60   960   00000000 00000020 00000000 00000000                                        |................                 |
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:14:14  Page    65

   STMT                       FILE NAME

1     /home/harold/SATKREPO/SATK/srcasm/loader/fbalodr.asm
2     /home/harold/SATKREPO/SATK/srcasm/loader/bls.asm


** NO ERRORS FOUND **

[124] MNOTE *,ARCHLVL - ARCHITECTURE LEVEL SET - 3
