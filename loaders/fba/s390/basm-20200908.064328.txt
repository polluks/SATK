ASMA Ver. 0.2.0                                                                                     08 Sep 2020 06:43:29  Page     1

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                     1 * Copyright (C) 2020 Harold Grovesteen
                                                     2 *
                                                     3 * This file is part of SATK.
                                                     4 *
                                                     5 *     SATK is free software: you can redistribute it and/or modify
                                                     6 *     it under the terms of the GNU General Public License as published by
                                                     7 *     the Free Software Foundation, either version 3 of the License, or
                                                     8 *     (at your option) any later version.
                                                     9 *
                                                    10 *     SATK is distributed in the hope that it will be useful,
                                                    11 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
                                                    12 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                    13 *     GNU General Public License for more details.
                                                    14 *
                                                    15 *     You should have received a copy of the GNU General Public License
                                                    16 *     along with SATK.  If not, see <http://www.gnu.org/licenses/>.
                                                    17 *
ASMA Ver. 0.2.0  FBA BOOT LOADER                                                                    08 Sep 2020 06:43:29  Page     2

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                    19 * Program Description:
                                                    20 *
                                                    21 * LOADER is a generic boot loader program.  It requires input/output commands to
                                                    22 * the IPL device to load the booted program.  This boot loader is executed by
                                                    23 * means of an IPL from a FBA DASD volume.  Control is passed to the booted
                                                    24 * program by means of a branch instruction.
                                                    25 *
                                                    26 * Various boot loader services are provided for use by the loader itself and
                                                    27 * the booted program.
                                                    28 *
                                                    29 * Target Architecture: S/360, S/370, ESA/390, or z/Arch
                                                    30 *
                                                    31 * Devices Used:
                                                    32 *   110 - FBA IPL volume containing the booted program
                                                    33 *
                                                    34 * Program Register Usage:
                                                    35 *
                                                    36 *   R0   Base register for access to the ASA.  Required by DSECT usage
                                                    37 *        This is purely an assembler artifact.  R0 available for other uses
                                                    38 *   R1   Device Channel and Unit Addresses for I/O instructions
                                                    39 *   R2   Cumulative size of loaded program
                                                    40 *   R3   Boot loader high water mark (can not write below it)
                                                    41 *   R4   FBA I/O Area address (where a directed record is read)
                                                    42 *   R5   Number of FBA sectors read for each directed record
                                                    43 *   R6   Work register
                                                    44 *   R8   Source address of directed record's content    ---+
                                                    45 *   R9   Length of a directed record's program content     |-- MVCL
                                                    46 *   R10  Destination address of directed record's content  |
                                                    47 *   R11  Length of a directed record's program content  ---+
                                                    48 *   R12  The program base register
                                                    49 *   R13  available
                                                    50 *   R14  available
                                                    51 *   R15  Booted program's entry address
                                                    52 *
                                                    53 * Disabled Wait State PSW's address field values used by the program:
                                                    54 *    X'000000' - Successful execution of the program
                                                    55 *    X'000008' - Unexpected Restart interruption occurred. Old Restart PSW at
                                                    56 *                address X'8'
                                                    57 *    X'000018' - Unexpected External interruption occurred.  Old External PSW at
                                                    58 *                address X'18'
                                                    59 *    X'000020' - Unexpected Supervisor interruption occurred.  Old Supervisor
                                                    60 *                PSW at address X'20'
                                                    61 *    X'000028' - Unexpected Program interruption occurred. Old Program PSW at
                                                    62 *                address X'28'
                                                    63 *    X'000030' - Unexpected Machine Check interruption occurred.  Old Machine
                                                    64 *                Check PSW at address X'30'
                                                    65 *    X'000038' - Unexpected Input/Output interruption occurred.  Old
                                                    66 *                Input/Output PSW at address X'38'
                                                    67 *    X'050004' - IPL Device or channel not operational
                                                    68 *    X'050008' - IPL Device or channel busy
                                                    69 *    X'05000C' - IPL Device or channel had a problem. See SCSW in IOT entry
                                                    70 *    X'050010' - Unexpected interruption from some other device. See ASA X'BA'
ASMA Ver. 0.2.0  FBA BOOT LOADER                                                                    08 Sep 2020 06:43:29  Page     3

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                    71 *    X'050014' - NOT USED
                                                    72 *    X'050018' - IPL device not supported by this boot loader
                                                    73 *    X'05001C' - Directed record overwriting boot loader
                                                    74 *    X'050020' - Destructive overlap detected by MVCL while loading record
                                                    75 *    X'050024' - Cumulative booted program sizes do not match in LOD1
                                                    76 *    X'050028' - Can not change addressing mode for booted program
                                                    77 *    X'05002C' - Incompatbile run-time and assembly-time architectures
ASMA Ver. 0.2.0  FBA BOOT LOADER - ARCHITECTURE LEVEL SET AND LOAD ASA CONTENT                      08 Sep 2020 06:43:29  Page     4

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                    79 * See all object data and macro generated model statements in the listing
                                                    80          PRINT DATA,GEN

                                                    82 * Inform the SATK macros of the architecture being targeted.  Inferred from
                                                    83 * the ASMA -t command-line argument.
                                                    84          ARCHLVL
                                                    86+$AL      OPSYN AL
                                                    87+$ALR     OPSYN ALR
                                                    88+$B       OPSYN B
                                                    89+$BAS     OPSYN BAS
                                                    90+$BASR    OPSYN BASR
                                                    91+$BC      OPSYN BC
                                                    92+$BCTR    OPSYN BCTR
                                                    93+$BE      OPSYN BE
                                                    94+$BH      OPSYN BH
                                                    95+$BL      OPSYN BL
                                                    96+$BM      OPSYN BM
                                                    97+$BNE     OPSYN BNE
                                                    98+$BNH     OPSYN BNH
                                                    99+$BNL     OPSYN BNL
                                                   100+$BNM     OPSYN BNM
                                                   101+$BNO     OPSYN BNO
                                                   102+$BNP     OPSYN BNP
                                                   103+$BNZ     OPSYN BNZ
                                                   104+$BO      OPSYN BO
                                                   105+$BP      OPSYN BP
                                                   106+$BXLE    OPSYN BXLE
                                                   107+$BZ      OPSYN BZ
                                                   108+$CH      OPSYN CH
                                                   109+$CLR     OPSYN CLR
                                                   110+$L       OPSYN L
                                                   111+$LH      OPSYN LH
                                                   112+$LM      OPSYN LM
                                                   113+$LNR     OPSYN LNR
                                                   114+$LPSW    OPSYN LPSW
                                                   115+$LR      OPSYN LR
                                                   116+$LTR     OPSYN LTR
                                                   117+$NR      OPSYN NR
                                                   118+$SL      OPSYN SL
                                                   119+$SLR     OPSYN SLR
                                                   120+$SR      OPSYN SR
                                                   121+$ST      OPSYN ST
                                                   122+$STM     OPSYN STM
                                                   123+$X       OPSYN X
                                                   124+$AHI     OPSYN AHI
                                                   125+$B       OPSYN J
                                                   126+$BC      OPSYN BRC
                                                   127+$BE      OPSYN JE
                                                   128+$BH      OPSYN JH
                                                   129+$BL      OPSYN JL
                                                   130+$BM      OPSYN JM
                                                   131+$BNE     OPSYN JNE
ASMA Ver. 0.2.0  FBA BOOT LOADER - ARCHITECTURE LEVEL SET AND LOAD ASA CONTENT                      08 Sep 2020 06:43:29  Page     5

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   132+$BNH     OPSYN JNH
                                                   133+$BNL     OPSYN JNL
                                                   134+$BNM     OPSYN JNM
                                                   135+$BNO     OPSYN JNO
                                                   136+$BNP     OPSYN JNP
                                                   137+$BNZ     OPSYN JNZ
                                                   138+$BO      OPSYN JO
                                                   139+$BP      OPSYN JP
                                                   140+$BXLE    OPSYN JXLE
                                                   141+$BZ      OPSYN JZ
                                                   142+$CHI     OPSYN CHI
                                                   143+$LHI     OPSYN LHI
                                                   144+         MNOTE *,'ARCHLVL - ARCHITECTURE LEVEL SET - 8'
          ** [144] MNOTE *,ARCHLVL - ARCHITECTURE LEVEL SET - 8


                                                   146 * Ensure interrupt traps are loaded by iplasma.py before program execution
                                                   147 * begins.  This macro will create the memory region that will also contain
                                                   148 * the IPL PSW.  The region name defaults to ASAREGN.  iplasma.py knows how
                                                   149 * to deal with ASA creation.

                                                   151 ASASECT  BLASALD
                              00000000  000001FF   153+ASASECT  START 0,ASAREGN
00000000  000A0000 00000008                        155+         PSW   0,0,2,0,X'008'      64-bit Restart ISR Trap New PSW
00000008                      00000008  00000058   156+         ORG   ASASECT+X'058'
00000058  000A0000 00000018                        158+         PSW   0,0,2,0,X'018'      64-bit External ISR Trap New PSW
00000060  000A0000 00000020                        159+         PSW   0,0,2,0,X'020'      64-bit Supervisor Call ISR Trap New PSW
00000068  000A0000 00000028                        160+         PSW   0,0,2,0,X'028'      64-bit Program ISR Trap New PSW
00000070  000A0000 00000030                        161+         PSW   0,0,2,0,X'030'      64-bit Machine Check Trap New PSW
00000078  000A0000 00000038                        162+         PSW   0,0,2,0,X'038'      64-bit Input/Output Trap New PSW
00000080                      00000080  000001A0   163+         ORG   ASASECT+X'1A0'
000001A0  00020000 00000000                        165+         PSWZ  0,0,2,0,X'120'     Restart ISR Trap New PSW
000001A8  00000000 00000120
000001B0  00020000 00000000                        166+         PSWZ  0,0,2,0,X'130'     External ISR Trap New PSW
000001B8  00000000 00000130
000001C0  00020000 00000000                        167+         PSWZ  0,0,2,0,X'140'     Supervisor Call ISR Trap New PSW
000001C8  00000000 00000140
000001D0  00020000 00000000                        168+         PSWZ  0,0,2,0,X'150'     Program ISR Trap New PSW
000001D8  00000000 00000150
000001E0  00020000 00000000                        169+         PSWZ  0,0,2,0,X'160'     Machine Check Trap New PSW
000001E8  00000000 00000160
000001F0  00020000 00000000                        170+         PSWZ  0,0,2,0,X'170'     Input/Output Trap New PSW
000001F8  00000000 00000170
                                                   171          ASAIPL IA=LODSTART    Define the bare-metal program's IPL PSW
                              00000000  000001FF   172+ASASECT  CSECT
00000200                      00000200  00000000   173+         ORG   ASASECT
00000000  00080000 00000400                        174+         PSW   0,0,0,0,LODSTART,24
00000008                      00000008  00000200   175+         ORG   ASASECT+512      Reset CSECT to end of assigned storage area
                              00000000  000001FF   176+ASASECT  CSECT
ASMA Ver. 0.2.0  FBA BOOT LOADER - ARCHITECTURE LEVEL SET AND LOAD ASA CONTENT                      08 Sep 2020 06:43:29  Page     6

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   178 *
                                                   179 *  Commonly used FBA Values
                                                   180 *

                                                   182 * CCW Commands
                              00000003  00000001   183 NOP      EQU   X'03'     No operation CCW Command
                              00000063  00000001   184 DEFN_EXT EQU   X'63'     Define Extent CCW Command
                              00000043  00000001   185 LOC_DATA EQU   X'43'     Locate CCW Command (within a defined extent)
                              00000042  00000001   186 READ     EQU   X'42'     Read located data CCW Command

                                                   188 * CCW Flags
                              00000040  00000001   189 CC       EQU   X'40'     CCW Command chaining
ASMA Ver. 0.2.0  FBA BOOT LOADER - INITIALIZATION                                                   08 Sep 2020 06:43:29  Page     7

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   191 *
                                                   192 * FBA Boot Loader Program
                                                   193 *

                              00000400  00000B8F   195 LODSECT  START X'400',LOADER   Start a second region for the loader itself
                                                   196 * This results in LOADER.bin being created in the list directed IPL directory
                                                   197          BLINIT DTYPE=LOD1LENF+LOD1FBA
00000400                      00000000             198+         USING ASA,0           Give me instruction access to the ASA and LOD1
00000400  900F 0200                     00000200   199+LODSTART STM   0,15,LODPARMS   Preserve Hercules IPL parameters, if any.
                                                   200+* This must happen before any register is altered!
00000404  0DC0                                     201+         BASR  12,0            Establish my base register
00000406                      00000406             202+         USING *,12            Tell the assembler
                                                   203+* Ensure program is not re-entered by a Hercules console initiated restart.
                                                   204+* Address 0 changed from its absolute storage role (IPL PSW) to its real
                                                   205+* storage role (Restart New PSW) after the IPL.
                                                   206+* Change from the IPL PSW at address 0 to a Restart New PSW trap
00000406  D207 0000 C2DA      00000000  000006E0   207+         MVC   RSTNPSW,PGMRS

                                                   209+* Check that the IPL device created by IPLASMA can be processed by this
                                                   210+* Boot loader.
                                                   211+         CLI   LOD1DTYP,LOD1LENF+LOD1FBA \
0000040C  9512 0244                     00000244      +                                  Can I handle the IPL device type?
00000410  4770 C26E                     00000674   212+         BNE   BADDEVT            ..No, end with 018 error code



                                                   214+* Store data in LOD1 record
00000414  9222 0255                     00000255   216+         MVI   LOD1IO,X'22'           Set I/O arch. and mode in use
00000418  9203 0256                     00000256   217+         MVI   LOD1BLAM,X'03'         Set booted program entry AM as 64
0000041C  9208 0254                     00000254   218+         MVI   LOD1CPU,8              Set assembled CPU architecture
00000420  9206 0257                     00000257   219+         MVI   LOD1BLSV,BLSNUM        Set start of unsupported services
00000424  4100 C2F2                     000006F8   220+         LA    0,BLS                  Locate services entry point
00000428  5000 0270                     00000270   221+         ST    0,LOD1BLST             Store it in LOD1
0000042C  4100 C326                     0000072C   222+         LA    0,BLSR                 Locate the service return
00000430  5000 0278                     00000278   223+         ST    0,LOD1RTN              Save it in LOD1 reserved area



                                                   225+* Determine the running architecture of the CPU
00000434  D20F C08A 01D0      00000490  000001D0   227+         MVC   APSZ0011(16),X'1D0'      Save current 128-bit SVC PSW
0000043A  D207 C09A 0060      000004A0  00000060   228+         MVC   APSS0011(8),X'060'       Save current 64-bit SVC PSW
00000440  D207 C0A2 0068      000004A8  00000068   229+         MVC   APSP0011(8),X'068'       Save current 64-bit PGM PSW
00000446  D20F 01D0 C05A      000001D0  00000460   230+         MVC   X'1D0'(16,0),AP640011    Set up 128-bit SVC New PSW
0000044C  D207 0060 C06A      00000060  00000470   231+         MVC   X'060'(8,0),AP310011     Set up 64-bit SVC New PSW
00000452  D207 0068 C072      00000068  00000478   232+         MVC   X'068'(8,0),AP240011     Set up 64-bit PGM New PSW
00000458  1B66                                     233+         SR    6,6                      Make sure result register is zero
0000045A  0A00                                     234+         SVC   0   NOW DO THE PROBE
                                                   235+* Control never falls through here.  An interruption takes control elsewhere.

                                                   237+* Data used by APROB
00000460  00000001 80000000                        238+AP640011 PSWZ  0,0,0,0,IS640011,64           64-bit architecture detected
00000468  00000000 000004B0
ASMA Ver. 0.2.0  FBA BOOT LOADER - INITIALIZATION                                                   08 Sep 2020 06:43:29  Page     8

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00000470  00080000 800004B8                        239+AP310011 PSW380 0,0,0,0,IS310011,31          31-bit architecture detected
00000478  00080000 000004D6                        240+AP240011 PSWEC 0,0,0,0,IS240011,24           24-bit architecture detected
00000480  00080000 800004EA                        241+WH310011 PSW380 0,0,0,0,APDN0011,31          31-bit tests complete
00000488  00000000 000004EA                        242+STBC0011 PSWBC 0,0,0,0,APDN0011,24           Restores BC-mode for S/370 when detected
00000490  00000000 00000000                        243+APSZ0011 DC    FD'0,0'                       128-bit SVC PSW save area
00000498  00000000 00000000
000004A0  00000000 00000000                        244+APSS0011 DC    FD'0'                         64-bit SVC PSW save area
000004A8  00000000 00000000                        245+APSP0011 DC    FD'0'                         64-bit PGM PSW save area

000004B0                                           247+IS640011 DS    0H    64-bit architecture found
                                                   248+*        LGHI  &REG,9  Use of LGHI ensures all high-order bits in 64-bit reg. are 0
000004B0  47690009                                 249+         DC    AL1(X'47',6*16+9),HL2'9'
000004B4  47F0 C0E4                     000004EA   250+         B     APDN0011      64-bit tests are done

000004B8                                           252+IS310011 DS    0H    31-bit architecture found
                                                   253+* Detect which 31-bit architecture
000004B8  D207 0068 C07A      00000068  00000480   254+         MVC   X'068'(8,0),WH310011        Set up 31-bit trap PSW
                                                   255+* A failure on the test instruction causes immediate end to any testing
                                                   256+* Therefore, the level detected by the failure is set before the test instruction
                                                   257+* is executed.
                                                   258+* Level 7 - Detect native ESA/390
000004BE  4160 0007                     00000007   259+         LA    6,7              Set level to 7 (native ESA/390)
                                                   260+*        STFL  0(0)             STORE FACILITY LIST
000004C2  B2B10000                                 261+         DC    X'B2B10000'
                                                   262+* An operation exception definitely implies native ESA/390
                                                   263+* Depending upon the platform STFL might actually work.  Test the STFL bits then.
000004C6  9140 00C8                     000000C8   264+         TM    200,X'40'        Is z/Architecture installed?
000004CA  4780 C0E4                     000004EA   265+         BZ    APDN0011         ..No, this is a native ESA/390 environment
                                                   266+*                               ..Yes, ESA/390 on z was detected
000004CE  4160 0008                     00000008   267+         LA    6,8              Set level to 8 (ESA/390 on z)
000004D2  47F0 C0E4                     000004EA   268+         B     APDN0011         31-bit tests are done

                                                   270+* Detect which 24-bit architecture mode is actually running
000004D6                                           271+IS240011 DS    0H    24-bit architecture found
000004D6  4160 0003                     00000003   272+         LA    6,3              Set level to 3 (assume S/370-EC mode)
000004DA  9108 0029                     00000029   273+         TM    X'29',X'08'      Is EC-mode enabled in old-PSW?
000004DE  4710 C0E4                     000004EA   274+         BO    APDN0011         ..Yes, already in EC-mode, so done
000004E2  4160 0002                     00000002   275+         LA    6,2              ..No, set level to 2 (S/370-BC mode)
000004E6  8200 C082                     00000488   276+         LPSW  STBC0011         Restore BC-mode operation

000004EA                                           278+APDN0011 DS    0H   Level found, restore previous new PSW's
000004EA  D20F 01D0 C08A      000001D0  00000490   279+         MVC   X'1D0'(16,0),APSZ0011      Restore previous 128-bit SVC PSW
000004F0  D207 0060 C09A      00000060  000004A0   280+         MVC   X'060'(8,0),APSS0011       Restore previous 64-bit SVC PSW
000004F6  D207 0068 C0A2      00000068  000004A8   281+         MVC   X'068'(8,0),APSP0011       Restore previous 64-bit PGM PSW
000004FC  4260 0274                     00000274   282+         STC   6,LOD1ARCH      Save the running CPU architecture



                                                   284+* Ensure the running architecture can execute the assembled architecture.
00000500  1F66                                     286+         SLR   6,6                      Clear the return code
00000502  9508 0274                     00000274   287+         CLI   LOD1ARCH,8            Is running architecture ESA/390 on z?
00000506  4780 C118                     0000051E   288+         BE    AARX0012              ..Yes, architectures are compatible
ASMA Ver. 0.2.0  FBA BOOT LOADER - INITIALIZATION                                                   08 Sep 2020 06:43:29  Page     9

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000050A  9509 0274                     00000274   289+         CLI   LOD1ARCH,9            Is running architecture z?
0000050E  4770 C114                     0000051A   290+         BNE   AARI0012              ..No, not compatible
00000512  4160 0008                     00000008   291+         LA    6,8                   ..Yes, downgrade architecture mode
00000516  47F0 C118                     0000051E   292+         B     AARX0012              Bypass setting RC to 12
0000051A                                           293+AARI0012 DS    0H
0000051A  4160 000C                     0000000C   294+         LA    6,12                  Set incompatible architectures return code
0000051E                                           295+AARX0012 DS    0H
0000051E  47F6 C11C                     00000522   296+         B     *+4(6)          Use the return code to decide action
00000522  47F0 C12C                     00000532   297+         B     ARCHSOK         ..0, architectures compatible, nothing to do
00000526  47F0 C296                     0000069C   298+         B     ARCHBAD         ..4, change to z architecture (never)
0000052A  47F0 C296                     0000069C   299+         B     ARCHBAD         ..8, no support to downgrade to ESA/390 on z
0000052E  47F0 C296                     0000069C   300+         B     ARCHBAD         .12, bad combination, can not run

00000532                                           302+ARCHSOK  DS    0H
00000532  010D                                     303+         SAM31 Boot                    loader runs in 31-bit address mode



                                                   305+* At this point the boot loader's system environment has been validated and,
                                                   306+* if need be, adjusted for compatibility with the assembled architecture.  The
                                                   307+* loader is now running in its anticipated environment.  Anticipated, that is,
                                                   308+* by the loader's _assembled_ target architecture.
ASMA Ver. 0.2.0  FBA BOOT LOADER - PROCESSING                                                       08 Sep 2020 06:43:29  Page    10

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   310 * Test the service call framework
00000534  41D0 C78A                     00000B90   311          LA    13,EOBL+(SAVEAREA-DMEMORY)   Point to my save area
                                                   312          BLSCALL SPB=TEST00
00000538  4110 C22A                     00000630   313+         LA    1,TEST00
0000053C  58F0 0270                     00000270   314+         L     15,LOD1BLST
00000540  0DEF                                     315+         $BASR 14,15
00000542  12FF                                     316          $LTR  15,15
00000544  A784 0003                     0000054A   317          $BZ   *+6            CC==0, success
00000548  0000                                     318          DC    HL2'0'         Otherwise, die here



                                                   320 * Initialize the I/O system and the I/O Table with the IPL device
                                                   321          BLSCALL SPB=INIT01
0000054A  4110 C22E                     00000634   322+         LA    1,INIT01
0000054E  58F0 0270                     00000270   323+         L     15,LOD1BLST
00000552  0DEF                                     324+         $BASR 14,15
00000554  12FF                                     325          $LTR  15,15
00000556  A784 0003                     0000055C   326          $BZ   *+6            RC==0, success
0000055A  0000                                     327          DC    HL2'0'         Otherwise, die here

                                                   329 * Remember where the IPL Device is in the I/O Table.  Need it during use of
                                                   330 * EXCP service.  So set it in the ORB.
0000055C  5860 C232                     00000638   331          L     6,INIT01+(SPBIOTA-SPB)
00000560  5060 C242                     00000648   332          ST    6,EXCPORB
00000564                      00000000             333          USING BLSIOT,6



                                                   335 * Test the QIOT service
                                                   336 * Look for the IPL device whatever its device number is
00000564  D201 C238 6000      0000063E  00000000   337          MVC     QUERY02+2(2),BLSDEV
0000056A                                           338          DROP    6
                                                   339          BLSCALL SPB=QUERY02
0000056A  4110 C236                     0000063C   340+         LA    1,QUERY02
0000056E  58F0 0270                     00000270   341+         L     15,LOD1BLST
00000572  0DEF                                     342+         $BASR 14,15
00000574  47FF C172                     00000578   343          B        *+4(15)     Use branch table to process return code
00000578  A7F4 0004                     00000580   344          $B       IPLFND      RC==0, found IPL device in I/O Table
0000057C  00000004                                 345          DC       FL4'4'      RC==4, did not find the IPL device. Die here



                                                   347 * Test the ENADEV service
                                                   348 * This is commented out because the only device used by the boot loader is
                                                   349 * the IPL device and it is enabled by the hardware during the IPL function.
                                                   350 * For this reason, the I/O Table address is supplied by the INITIO service.
                                                   351 * The boot loader does not need this service, but the booted program may.
                                                   352 *         BLSCALL SPB=ENADEV03
                                                   353 *         B     *+4(15)        Use branch table to process return code
                                                   354 *         DC    F'0'           RC==0, entry added                    TESTED
                                                   355 *         $B    IPLFND         RC==4, duplicate entry                TESTED
ASMA Ver. 0.2.0  FBA BOOT LOADER - PROCESSING                                                       08 Sep 2020 06:43:29  Page    11

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   356 *         DC    F'8'           RC==8, error state                    TESTED
                                                   357 *         DC    F'12'          RC==12, device not operational        TESTED
                                                   358 *         DC    F'16'          RC==16, I/O Table full                TESTED
                                                   359 *         DC    F'20'          RC==20, device entry class mismatch   TESTED

                                                   361 * Prepare for use of the IPL device by the boot loader
00000580  D201 C2A2 00BA      000006A8  000000BA   362 IPLFND   MVC   IPLDEV,IOICODE    Save the address of the IPL device
                                                   363 * The IPL device must be available for use because we successfully got here.
                                                   364 * Prepare the channel program for use of the IPL device by the boot loader

                                                   366 * Initialize the static portions of the I/O related data
00000586  1B22                                     367          SR    2,2          Clear cumulative size of loaded program to zero
00000588  1892                                     368          LR    9,2          Clear size of data being moved from record
0000058A  1B62                                     369          SR    6,2          Clear work register
                                                   370          LOADHL 6,LOD1MDLN  Fetch from LOD1 the maximum directed record length
0000058C  BF63 0246                     00000246   371+         ICM   6,B'0011',LOD1MDLN   Load halfword without sign extention
                                                   372          STCCWCNT 6,FBACCW3 CCW - Update count field in CCW
00000590  4060 C2BC                     000006C2   373+         STH   6,FBACCW3+2      Store count into a Format 1 CCW
00000594  8860 0009                     00000009   374          SRL   6,9(0)             Convert bytes into sectors.
00000598  4060 C2D4                     000006DA   375          STH   6,LOCSECS    LOC - Will always read the same number of sectors
0000059C  1856                                     376          LR    5,6                Save the number of sectors (updates extent)
0000059E  0660                                     377          BCTR  6,0                And the logical end of the extent is constant
000005A0  5060 C2CE                     000006D4   378          ST    6,ENDLSEC    EXT - Set it in the FBA extent data
                                                   379 * R6 is now available for other uses
000005A4  5840 026C                     0000026C   380          L     4,LOD1IOA          Fetch where directed records are read
                                                   381          STCCWADR 4,FBACCW3          CCW - Update the CCW for reading
000005A8  5040 C2BE                     000006C4   382+         ST    4,FBACCW3+4            Store address into a Format 1 CCW
000005AC  947F C2BE                     000006C4   383+         NI    FBACCW3+4,X'7F'        Make sure high-order bit is 0
000005B0  D203 C2C6 0258      000006CC  00000258   384          MVC   FRSTPSEC,LOD1FSEC     EXT - Set starting sector of first record
                                                   385 * Initialize the static portions of record loading
000005B6  4184 0006                     00000006   386          LA    8,6(4)       Locate start of directed record's content
000005BA  4130 CB62                     00000F68   387          LA    3,EOBL+(HWM-DMEMORY)   Directed records may not overwrite me!

                                                   389 READLOOP BLSCALL SPB=EXCP04
000005BE                                           390+READLOOP DS    0H
000005BE  4110 C23E                     00000644   391+         LA    1,EXCP04
000005C2  58F0 0270                     00000270   392+         L     15,LOD1BLST
000005C6  0DEF                                     393+         $BASR 14,15
000005C8  47FF C1C6                     000005CC   394          B     *+4(15)           Use the branch table to analyze return code
000005CC  A7F4 000B                     000005E2   395          $B    MOVEREC           ..Success, move the directed record
000005D0  00000004                                 396          DC    FL4'4'            ..Physical EOF should not occur for FBA device
000005D4  A7F4 0048                     00000664   397          $B    DEVCSW            ..Error state
000005D8  A7F4 003E                     00000654   398          $B    DEVNOAVL          ..Device busy, not avalable or invalid
000005DC  00000010                                 399          DC    FL4'16'           ..Die here if ORB is invalid
000005E0  0000                                     400          DC    HL2'0'            Die here if unexpected return code



000005E2                                           402 MOVEREC  DS    0H    Move the directed record to its residence address
000005E2  58A4 0000                     00000000   403          L     10,0(4)           Destination address of record's content
000005E6  153A                                     404          CLR   3,10              Will data from record overwrite boot loader?
000005E8  4720 C276                     0000067C   405          BH    OVRWRITE          ..Yes, HWM higher than load address, quit now!
ASMA Ver. 0.2.0  FBA BOOT LOADER - PROCESSING                                                       08 Sep 2020 06:43:29  Page    12

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   406          LOADHL 9,4(4)           Size of record being loaded
000005EC  BF93 4004                     00000004   407+         ICM   9,B'0011',4(4)       Load halfword without sign extention
000005F0  1869                                     408          LR    6,9               Increment for cumulative program loaded
                                                   409          VMOVE 10,8,DSTRCT=DESTRT
000005F2  18B9                                     410+         LR    10+1,8+1          Same size to the receiving location
000005F4  0EA8                                     411+         MVCL  10,8              Move directed record
000005F6  A714 0047                     00000684   412+         $BC   B'0001',DESTRT    Destructive overlap detected (CC=3), quit

000005FA  5E60 024C                     0000024C   414          AL    6,LOD1BPLD        Increment loaded program size
000005FE  5060 024C                     0000024C   415          ST    6,LOD1BPLD        Update the cumulative program size in LOD1

                                                   417 * Determine if last record has been loaded
00000602  9180 4000                     00000000   418          TM    0(4),X'80'        Bit 0 of destination address one?
00000606  4710 C212                     00000618   419          BO    CKSIZE            ..Yes, check if correct amount loaded
0000060A  1865                                     420          LR    6,5               Fetch the number of sectors read
0000060C  5E60 C2C6                     000006CC   421          AL    6,FRSTPSEC        Update starting sector for the next extent
00000610  5060 C2C6                     000006CC   422          ST    6,FRSTPSEC  EXT - Update the FBA extent with new starting sector
00000614  47F0 C1B8                     000005BE   423          B     READLOOP          Read the next record.

                                                   425 * Total bytes loaded should match what LOD1 says is the booted program size
00000618  D503 0248 024C      00000248  0000024C   426 CKSIZE   CLC   LOD1BPLN,LOD1BPLD  Do the cumulative sizes match in LOD1?
0000061E  4770 C286                     0000068C   427          BNE   CUMERROR           ..No, something went wrong, quit



                                                   429 * Enter the boot loaded program...

                                                   431          BOOTNTR
00000622  9101 0253                     00000253   432+         TM    LOD1ENTR+3,X'01'   Is 64-bit addressing set in address?
00000626  4710 C28E                     00000694   433+         BO    AMERROR            ..Yes, can not do that, quit
0000062A  58F0 0250                     00000250   434+         L     15,LOD1ENTR        Fetch entry point for booted program from LOD1
0000062E  0B0F                                     435+         BSM   0,15               Enter the booted program



                                                   437 * Service NOOP SPB
00000630                                           438          DS    0F
00000630  00000000                                 439 TEST00   DC    Y(NOOP),H'0'         Tests service functionality

                                                   441 * Service IOINIT SPB
00000634                                           442          DS    0F
00000634  00010000 00000000                        443 INIT01   DC    Y(IOINIT),H'0',F'0'  Perform I/O initialization

                                                   445 * Service QIOT SPB
0000063C                                           446          DS    0F
0000063C  00020000 00000000                        447 QUERY02  DC    Y(QIOT),H'0',F'0'    Locate the IPL device in the device table

                                                   449 * Service ENADEV SPB
                                                   450 *         DS    0F      This SPB is used for testing ENADEV service
                                                   451 *ENADEV03 DC    Y(ENADEV),X'0110',X'00000000'  Add a device

00000644                                           453          DS    0F
ASMA Ver. 0.2.0  FBA BOOT LOADER - PROCESSING                                                       08 Sep 2020 06:43:29  Page    13

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   454 * Service EXCP SPB
00000644  00040C00                                 455 EXCP04   DC    Y(EXCP),AL1(SPBEWDC),XL1'0'
                                                   456 EXCPORB  BLSORB CCW=FBACCW1
00000648                                           458+EXCPORB  DS    0XL12
00000648  00000000                                 459+         DC    A(0)                         Word 0 - Interruption Parameter
0000064C  00                                       460+         DC    AL1((0)*16+B'0000')          Word 1, bits 0-7
0000064D  80                                       461+         DC    BL1'10000000'                Word 1, bits 8-15
0000064E  FF                                       462+         DC    AL1(255)                     Word 1, bits 16-23
0000064F  00                                       463+         DC    BL1'00000000'                 Word 1, bits 24-31
00000650  000006B0                                 464+         DC    AL4(FBACCW1)                 Word 2 - CCW address



                                                   466 * End the bare-metal program with an error indicated in PSW
00000654  9204 C2F1                     000006F7   467 DEVNOAVL MVI   DIE+7,X'04'   Code 004 device is not available
00000658  8200 C2EA                     000006F0   468          LPSW  DIE
0000065C  9208 C2F1                     000006F7   469 DEVBUSY  MVI   DIE+7,X'08'   Code 008 device is busy (no wait)
00000660  8200 C2EA                     000006F0   470          LPSW  DIE
00000664  920C C2F1                     000006F7   471 DEVCSW   MVI   DIE+7,X'0C'   Code 00C CSW stored in ASA
00000668  8200 C2EA                     000006F0   472          LPSW  DIE
0000066C  9210 C2F1                     000006F7   473 DEVUNKN  MVI   DIE+7,X'10'   Code 010 unexpected device caused I/O interruption
00000670  8200 C2EA                     000006F0   474          LPSW  DIE
                                                   475 *SERVERR  MVI   DIE+7,X'14'   Code 014 booted program may not call this service
                                                   476 *         LPSW  DIE
00000674  9218 C2F1                     000006F7   477 BADDEVT  MVI   DIE+7,X'18'   Code 018 IPL device type unsupported
00000678  8200 C2EA                     000006F0   478          LPSW  DIE
0000067C  921C C2F1                     000006F7   479 OVRWRITE MVI   DIE+7,X'1C'   Code 01C Overwriting boot loader
00000680  8200 C2EA                     000006F0   480          LPSW  DIE
00000684  9220 C2F1                     000006F7   481 DESTRT   MVI   DIE+7,X'20'   Code 020 Destructive overlap detected by MVCL
00000688  8200 C2EA                     000006F0   482          LPSW  DIE
0000068C  9224 C2F1                     000006F7   483 CUMERROR MVI   DIE+7,X'24'   Code 024 Cumulative booted program sizes do no match
00000690  8200 C2EA                     000006F0   484          LPSW  DIE
00000694  9228 C2F1                     000006F7   485 AMERROR  MVI   DIE+7,X'28'   Code 028 Can not change booted pgm addressing mode
00000698  8200 C2EA                     000006F0   486          LPSW  DIE
0000069C  922C C2F1                     000006F7   487 ARCHBAD  MVI   DIE+7,X'2C'   Code 028 Incompatible assembled vs run-time archs
000006A0  8200 C2EA                     000006F0   488          LPSW  DIE

                                                   490 * General Constants:
000006A4  00000001                                 491 ONE      DC    F'1'      The constant 'one'.

                                                   493 * I/O related information
000006A8  0000                                     494 IPLDEV   DC    XL2'0000'   IPL device address from I/O interrupt information


                                                   496 *
                                                   497 * FBA CCW chain used by the boot loader to read a directed record
                                                   498 *
000006B0  63400010 000006C8                        499 FBACCW1  CCW   DEFN_EXT,EXTENT,CC,EXTENTL   Define extent for the read
000006B8  43400008 000006D8                        500 FBACCW2  CCW   LOC_DATA,LOCATE,CC,LOCATEL   Establish location for read
000006C0  42000000 00000000                        501 FBACCW3  CCW   READ,0,0,0                   Read the directed record
                                                   502 *         CCW   NOP,0,0,1                    ..then a NOP.
                                                   503 * If the preceding NOP CCW command is enabled, then the FBACCW3 must set
ASMA Ver. 0.2.0  FBA BOOT LOADER - PROCESSING                                                       08 Sep 2020 06:43:29  Page    14

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   504 * command chaining in the flag byte, setting the third operand to X'40'

                                                   506 * FBA extent used for reading a directed record.  Unlike typical operations
                                                   507 * where the extent is constant and the locate data changes, when reading
                                                   508 * directed boot loader records, the extent changes and the locate information
                                                   509 * remains unchanged.
000006C8  40000000                                 510 EXTENT   DC    XL4'40000000'   Extent file mask: Inhibit all writes
000006CC  00000000                                 511 FRSTPSEC DC    FL4'0'       ** Physical first sector of the extent
000006D0  00000000                                 512 FRSTLSEC DC    FL4'0'          First logical sector of the extent, always 0
                                                   513 * Last logical sector of the extent, always the same based upon record length
000006D4  00000000                                 514 ENDLSEC  DC    FL4'0'
                              00000010  00000001   515 EXTENTL  EQU   *-EXTENT        Length of an FBA extent (16 bytes)
                                                   516 * ** This field is adjusted for each read of a directed record.

                                                   518 * FBA locate used for reading a directed record
000006D8  06                                       519 LOCATE   DC    XL1'06'         Read sector operation being performed
000006D9  00                                       520          DC    XL1'00'         Replication count ignored for read sector
000006DA  0000                                     521 LOCSECS  DC    HL2'0'          Number of sectors being read
000006DC  00000000                                 522          DC    FL4'0'          First sector (relative to the extent), always 0
                              00000008  00000001   523 LOCATEL  EQU   *-LOCATE        Length of the FBA locate information (8 bytes)


                                                   525 * PSW used by the boot loader
                                                   526 PGMRS    DWAIT CODE=008     Restart New PSW trap.  Points to Restart Old PSW
000006E0  000A0000 00010008                        527+PGMRS    PSW   0,0,2,0,X'010008'


                                                   529 * PSW's terminating program execution
                                                   530 DONE     DWAITEND              Successful execution of the program
000006E8  000A0000 00000000                        532+DONE     PSW   0,0,2,0,X'000000'
                                                   533 DIE      DWAIT PGM=05,CMP=0,CODE=000  Code set at run-time
000006F0  000A0000 00050000                        534+DIE      PSW   0,0,2,0,X'050000'
ASMA Ver. 0.2.0  BOOT LOADER - SERVICES                                                             08 Sep 2020 06:43:29  Page    15

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   536          COPY  'bls.asm'
                                                   537 * Copyright (C) 2020 Harold Grovesteen
                                                   538 *
                                                   539 * This file is part of SATK.
                                                   540 *
                                                   541 *     SATK is free software: you can redistribute it and/or modify
                                                   542 *     it under the terms of the GNU General Public License as published by
                                                   543 *     the Free Software Foundation, either version 3 of the License, or
                                                   544 *     (at your option) any later version.
                                                   545 *
                                                   546 *     SATK is distributed in the hope that it will be useful,
                                                   547 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
                                                   548 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                   549 *     GNU General Public License for more details.
                                                   550 *
                                                   551 *     You should have received a copy of the GNU General Public License
                                                   552 *     along with SATK.  If not, see <http://www.gnu.org/licenses/>.
                                                   553 *
                                                   554 *
                                                   555 * The Boot Loader Services Framework
                                                   556 *

                                                   558 BLS      SERVS  SERVTBL
000006F8                                           559+BLS      DS    0H   Boot Loader 32-bit services entry point
000006F8                      00000000             560+         USING ASA,0          Address Assigned Storage area
000006F8                      00000000             561+         USING SPB,1          Pointer to Service Parameter Block
000006F8                      00000000             562+         USING SAVEA,13       Register save area from caller
000006F8  90EC D00C                     0000000C   563+         $STM  14,12,SAVER14       Preserve caller's registers except R13
000006FC  18CF                                     564+         $LR   12,15          Establish my local register
000006FE                      000006F8             565+         USING BLS,12         ..and tell the assembler

                                                   567+* Locate the service's entry point
000006FE  4820 1000                     00000000   568+         $LH   2,SPBID         Fetch the Service ID from the SPB
00000702  BD21 0257                     00000257   569+         CLM   2,B'0001',LOD1BLSV   Is ID valid? (Must be < LOD1 number)
00000706  A744 0005                     00000710   570+         $BL   CALLSRV         ..Yes, call the service then
0000070A  11F2                                     571+         $LNR  15,2            Turn the Service ID into a negative value
0000070C  A7F4 0010                     0000072C   572+         $B    BLSR            Return to caller with invalid Service ID

00000710                                           574+CALLSRV  DS    0H              Call the actual service now
00000710  8920 0002                     00000002   575+         SLL   2,2             Turn Service ID into table displacement (x4)
00000714  4122 C040                     00000738   576+         LA    2,SERVTBL(2)    Turn displacement into an address
00000718  BF2F 2000                     00000000   578+         ICM   2,B'1111',0(2)       Load fullword and test the value
0000071C  A774 0006                     00000728   579+         $BNZ  BLSCALL         Table entry not zero, so can call it
00000720  48F0 C03E                     00000736   580+         $LH   15,BLSMONE      Set return code to negative one
00000724  A7F4 0004                     0000072C   581+         $B    BLSR            ..and return to caller

00000728                                           583+BLSCALL  DS    0H         Good address!
00000728  18C2                                     584+         $LR   12,2       Set up base register for service routine
0000072A  07FC                                     585+         BR    12         Go to the requested service (use as base register)

0000072C                                           587+BLSR     DS    0H             Return to service caller from requested service
                                                   588+* Return from called service has the caller's save area in R13
ASMA Ver. 0.2.0  BOOT LOADER - SERVICES                                                             08 Sep 2020 06:43:29  Page    16

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000072C                      00000000             589+         USING SAVEA,13
0000072C  5000 D010                     00000010   590+         $ST   0,SAVER15         Save return code in caller's save area
00000730  98EC D00C                     0000000C   591+         $LM   14,12,SAVER14     Restore caller's registers
                                                   592+* Retrun is actually in R15 now
00000734  07FE                                     593+         BR    14                Return to caller

00000736  FFFF                                     595+BLSMONE  DC    H'-1'          Negative one used for empty service slot



                                                   597 *
                                                   598 * Boot Loader Service Table
                                                   599 *

                                                   601          BLSTABLE
00000738  00000754                                 603+SERVTBL  DC    A(SERVNOOP)
                              00000000  00000001   604+NOOP     EQU   0
0000073C  00000780                                 606+         DC    A(SERVIOIN)
                              00000001  00000001   607+IOINIT   EQU   1
00000740  0000081C                                 609+         DC    A(SERVQIOT)
                              00000002  00000001   610+QIOT     EQU   2
00000744  00000858                                 612+         DC    A(SERVENAD)
                              00000003  00000001   613+ENADEV   EQU   3
00000748  00000958                                 615+         DC    A(SERVEXCP)
                              00000004  00000001   616+EXCP     EQU   4
0000074C  00000B10                                 618+         DC    A(SERVPEND)
                              00000005  00000001   619+PNDING   EQU   5
                              00000006  00000001   621+BLSNUM   EQU   6           Number of defined services



                                                   623 * Register Contents at service entry
                                                   624 *  R0  - unpredictable but usable (also ASA base register)
                                                   625 *  R1  - Pointer to Service Parameter Block (passed by framework)
                                                   626 *  R2  - unpredictable but usable (used by service framework as work register)
                                                   627 *  R3  - unpredictable but usable
                                                   628 *  R4  - unpredictable but usable
                                                   629 *  R5  - unpredictable but usable
                                                   630 *  R6  - unpredictable but usable
                                                   631 *  R7  - unpredictable but usable
                                                   632 *  R8  - unpredictable but usable
                                                   633 *  R9  - unpredictable but usable
                                                   634 *  R9  - unpredictable but usable
                                                   635 *  R10 - unpredictable but usable
                                                   636 *  R11 - unpredictable but usable
                                                   637 *  R12 - The service's entry point (set by service framework, use as base)
                                                   638 *  R13 - Pointer to service CALLER'S save area (passed by framework)
                                                   639 *  R14 - unpredictable but usable
                                                   640 *  R15 - unpredictable but usable
                                                   641 *

                                                   643 * Use LOD1RTN address to return to caller from the service.
ASMA Ver. 0.2.0  BOOT LOADER - SERVICES                                                             08 Sep 2020 06:43:29  Page    17

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   644 * Register usage on entry to SERVRTN
                                                   645 *  R0 - Return code from service.  Framework will move it to R15
                                                   646 *  R13 - Service caller's save area
                                                   647 *  R15 - Address from LOD1RTN to return to framework
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 0 - NOOP                                                     08 Sep 2020 06:43:29  Page    18

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   649 *
                                                   650 * Boot Loader Service - 0 - NOOP
                                                   651 *

                                                   653          SERVNOOP
00000750                                           655+         DS    0F
00000750  C2D3E200                                 656+         DC    CL3'BLS',AL1(NOOP)
00000754                                           657+SERVNOOP DS    0H             Start of service
00000754                      00000754             658+         USING SERVNOOP,12    Establish service addressing
00000754                      00000000             659+         USING ASA,0          Address the ASA
00000754                      00000000             660+         USING SPB,1          Address the SPB (address from framework)
00000754                      00000000             661+         USING SAVEA,13       Address caller's save area
                                                   662+         LA    2,EOBL+(NOOPSAVE-DMEMORY) \
00000754  4120 C484                     00000BD8      +                                      Point to my save area
00000758  5020 D008                     00000008   663+         $ST   2,SAVEFWD      Save my save area address in caller's save area
0000075C                                           664+         DROP  13             Forget caller's save area
0000075C                      00000000             665+         USING SAVEA,2        Now address MY save area
0000075C  50D0 2004                     00000004   666+         $ST   13,SAVEBCK     Preserve caller's R13 now in my save area
00000760  18D2                                     667+         $LR   13,2           Now point save area to MY save area with R13
00000762                                           668+         DROP  2
00000762                      00000000             669+         USING SAVEA,13       Re-establish addressing to my save area with R13
00000762  48B0 1002                     00000002   670+         $LH   11,SPBSI        Get the service information
00000766  41B0 B001                     00000001   671+         LA    11,1(,11)       Increment the service information by 1
0000076A  40B0 1002                     00000002   672+         STH   11,SPBSI        Set new value in service information
0000076E  1B00                                     673+         $SR   0,0             Set the condition code to zero
00000770                      00000000             675+         USING SAVEA,13      On return, service points to its save area
00000770  58D0 D004                     00000004   676+         $L    13,SAVEBCK     Restore caller's save area address from service
                                                   677+* R13 now points to the caller's registers
00000774  58F0 0278                     00000278   678+         L     15,LOD1RTN      Return to the framework for the return
00000778                                           679+         DROP  0               Forget ASA
00000778                                           680+         DROP  13              Forget any save area addressing as we leave
00000778  07FF                                     681+         BR    15              Return now to the framework...

ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 1 - IOINIT                                                   08 Sep 2020 06:43:29  Page    19

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   684 *
                                                   685 * Boot Loader Service - 1 - IOINIT
                                                   686 *
                                                   687 * Register Usage:
                                                   688 *   R0 - Return Code
                                                   689 *   R1 - Address of the INTHND SPB when used
                                                   690 *   R3 - Used to point to caller's save area when booted program being checked
                                                   691 *   R4 - Address of the IOINIT input SPB (from R1 entry contents)
                                                   692 *   R5 - Start of I/O table address and table entry start
                                                   693 *   R6 - I/O table entry length
                                                   694 *   R7 - Address of the last byte of the I/O table itself
                                                   695 *   R12 - Base register
                                                   696 *   R15 - Return address to serivce framework

                                                   698          SERVIOIN
0000077C                                           700+         DS    0F
0000077C  C2D3E201                                 701+         DC    CL3'BLS',AL1(IOINIT)
00000780                                           702+SERVIOIN DS    0H             Start of service
00000780                      00000780             703+         USING SERVIOIN,12    Establish service addressing
00000780                      00000000             704+         USING ASA,0          Address the ASA
00000780                      00000000             705+         USING SPB,1          Address the SPB (address from framework)
00000780                      00000000             706+         USING SAVEA,13       Address caller's save area
                                                   707+         LA    2,EOBL+(IOINSAVE-DMEMORY) \
00000780  4120 C4A0                     00000C20      +                                      Point to my save area
00000784  5020 D008                     00000008   708+         $ST   2,SAVEFWD      Save my save area address in caller's save area
00000788                                           709+         DROP  13             Forget caller's save area
00000788                      00000000             710+         USING SAVEA,2        Now address MY save area
00000788  50D0 2004                     00000004   711+         $ST   13,SAVEBCK     Preserve caller's R13 now in my save area
0000078C  18D2                                     712+         $LR   13,2           Now point save area to MY save area with R13
0000078E                                           713+         DROP  2
0000078E                      00000000             714+         USING SAVEA,13       Re-establish addressing to my save area with R13
                                                   715+* Move input option to INTHND SPB for call
0000078E  1841                                     716+         $LR   4,1              Need to free up R1 for I/O commands
00000790                                           717+         DROP  1
00000790                      00000000             718+         USING SPB,4            Set new register for addressing input SPB

00000790                                           720+IOIA0042 DS    0H    Add IPL Device to the I/O Table
00000790  4160 C708                     00000E88   721+         LA    6,EOBL+(IOTBL-DMEMORY)   Locate the start of the I/O table
00000794  5060 C3FC                     00000B7C   722+         ST    6,IOTBLBA                Set up BXLE sum register
00000798  5850 C3F8                     00000B78   723+         L     5,IOTMAX                 Fetch the length of the table
0000079C  1E56                                     724+         ALR   5,6                      Calculate the byte following the table
0000079E  5050 C3F8                     00000B78   725+         ST    5,IOTMAX                 Replace length with addresss
000007A2                      00000000             726+         USING BLSIOT,6                 Point to the first entry.
                                                   727+* Add the IPL device to the I/O Table
000007A2  B766 C094                     00000814   728+         LCTL  6,6,INTMASK
000007A6  9202 4002                     00000002   729+         MVI   SPBSI,X'02'          Indicate CCW Format 1 in use
000007AA  4170 C608                     00000D88   730+         LA    7,EOBL+(CHSSBLK-DMEMORY) Locate where to store subchannel blocks
000007AE  5070 C40C                     00000B8C   731+         ST    7,CSBLOCKS           Where SCHIB or IRB is stored
000007B2  5810 00B8                     000000B8   732+         L     1,IOSSID             Retrieve the SIW of IPL device from ASA
000007B6  B234 7000                     00000000   733+         STSCH 0(7)                 Retrieve the IPL device's SCHIB
000007BA  A784 0003                     000007C0   734+         $BC   B'1000',CSSAVED      The SCHIB was saved
000007BE  0000                                     735+         DC    H'0'                 If not saved, something bad happened
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 1 - IOINIT                                                   08 Sep 2020 06:43:29  Page    20

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000007C0                                           736+CSSAVED  DS    0H    SCHIB in the CS block area
000007C0  9201 C409                     00000B89   737+         MVI   CSSTRUCT,CSSSCHIB    Indicate the SCHIB is in the block
000007C4                      00000000             738+         USING SCHIB,7              Address the SCHIB just fetched
000007C4  D201 6000 7006      00000000  00000006   739+         MVC   BLSDEV,PMCWDNUM      Set the device number in the IOT entry
000007CA  5010 6004                     00000004   740+         ST    1,BLSHDW             Set the IPL device SIW in the IOT
000007CE  D200 6002 4002      00000002  00000002   741+         MVC   BLSTYP,SPBSI         Set device type from SPB SI

                                                   743+* Generate the device status error mask for the IPL device
000007D4  92F1 600C                     0000000C   745+         MVI   BLSERR,X'F1'        This is the generic device error check
                                                   746+* This checks for these error conditions:
                                                   747+*   X'80' - Attention (MAY BE TURNED OFF FOR SOME DEVICES)
                                                   748+*   X'40' - Status Modifier
                                                   749+*   X'20' - Control-Unit End
                                                   750+*   X'10' - Busy
                                                   751+*   X'01' - Unit Exception (MAY BE TURNED OFF FOR SOME DEVICES)
                                                   752+*
                                                   753+* While Unit Check is an error condition, it must be explicitly checked so
                                                   754+* that the service can indicate a pending action to read sense data by the
                                                   755+* program.  Yes, it is an error condition, but requires special handling.
                                                   756+* When set, the service indicates both an error condition AND a pending action.
                                                   757+*   X'02' - Unit Check (sense is pending)
                                                   758+*
                                                   759+* This ignores these normal status conditions.  They must be checked by the
                                                   760+* service depending upon the EXCP SPB controls.
                                                   761+*   X'08' - Channel end
                                                   762+*   X'04' - Device end

                                                   764+* If device recognizes physical end-of-file with Unit Exception, not an error
                                                   765+* So turn it off.
000007D8  9180 6002                     00000002   766+         TM    BLSTYP,BLSPEOF      Does device use UE for end-of-file condition?
000007DC  A7E4 0004                     000007E4   767+         $BNO  ERRU0044            ..No, check if device uses ATTN
000007E0  94FE 600C                     0000000C   768+         NI    BLSERR,X'FE'        ..Yes, turn off UE as an error status

                                                   770+* If device signals data is ready with Attention, turn it off as an error.
000007E4  9140 6002                     00000002   771+ERRU0044 TM    BLSTYP,BLSUNSOL     Does device use ATTN when data is ready?
000007E8  A7E4 0004                     000007F0   772+         $BNO  ERRX0044            ..No, modifications to error status done
000007EC  947F 600C                     0000000C   773+         NI    BLSERR,X'7F'        ..Yes, turn off ATTN as an error status

                                                   775+* Note: At present no device uses UE for physical end-of-file and Attention
                                                   776+* for data ready, but this code allows for both to be set in the device
                                                   777+* class value.

000007F0                                           779+ERRX0044 DS    0H  Error mask completed
000007F0  5060 4004                     00000004   780+         ST    6,SPBIOTA         Return to caller the IPL device's IOT address
000007F4                                           781+         DROP  6                 Done with the table entry
000007F4  4170 601F                     0000001F   782+         LA    7,BLSIOEL-1(,6)   Add the entry length -1
000007F8                                           783+         DROP  7                 Forget the address of the SCHIB
000007F8  5070 C404                     00000B84   784+         ST    7,IOTBLEA         Set up the BXLE comparand register
000007FC  A7F4 0006                     00000808   785+         $B    IOINRTN0          Return with RC==0
00000800  4100 0004                     00000004   786+IOINRTN4 LA    0,4               Set return code 4 from service
00000804  A7F4 0003                     0000080A   787+         $B    IOINRTN           Return to caller
00000808  1B00                                     788+IOINRTN0 $SR   0,0               Set return code from service
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 1 - IOINIT                                                   08 Sep 2020 06:43:29  Page    21

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000080A                                           789+         DROP  4                 Forget input SPB
0000080A                      00000000             791+         USING SAVEA,13      On return, service points to its save area
0000080A  58D0 D004                     00000004   792+IOINRTN  $L    13,SAVEBCK     Restore caller's save area address from service
                                                   793+* R13 now points to the caller's registers
0000080E  58F0 0278                     00000278   794+         L     15,LOD1RTN      Return to the framework for the return
00000812                                           795+         DROP  0               Forget ASA
00000812                                           796+         DROP  13              Forget any save area addressing as we leave
00000812  07FF                                     797+         BR    15              Return now to the framework...

00000814                                           799+         DS    0F      Make sure interruption mask is on a fullword boundary
00000814  FFFFFFFF                                 800+INTMASK  DC    X'FFFFFFFF'      Enable all channels for interruptions
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 2 - QIOT                                                     08 Sep 2020 06:43:29  Page    22

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   802 *
                                                   803 * Boot Loader Service - 2 - QIOT
                                                   804 *
                                                   805 * Register Usage:
                                                   806 *   R0 - Return Code
                                                   807 *   R1 - Address of the SPB and its extention
                                                   808 *   R5 - Start of I/O table address and table entry start
                                                   809 *   R6 - I/O table entry length
                                                   810 *   R7 - Address of the last byte of the I/O table itself
                                                   811 *   R12 - Base register
                                                   812 *   R15 - Return address to serivce framework

                                                   814          SERVQIOT
00000818                                           816+         DS    0F
00000818  C2D3E202                                 817+         DC    CL3'BLS',AL1(QIOT)
0000081C                                           818+SERVQIOT DS    0H             Start of service
0000081C                      0000081C             819+         USING SERVQIOT,12    Establish service addressing
0000081C                      00000000             820+         USING ASA,0          Address the ASA
0000081C                      00000000             821+         USING SPB,1          Address the SPB (address from framework)
0000081C                      00000000             822+         USING SAVEA,13       Address caller's save area
                                                   823+         LA    2,EOBL+(QIOTSAVE-DMEMORY) \
0000081C  4120 C44C                     00000C68      +                                      Point to my save area
00000820  5020 D008                     00000008   824+         $ST   2,SAVEFWD      Save my save area address in caller's save area
00000824                                           825+         DROP  13             Forget caller's save area
00000824                      00000000             826+         USING SAVEA,2        Now address MY save area
00000824  50D0 2004                     00000004   827+         $ST   13,SAVEBCK     Preserve caller's R13 now in my save area
00000828  18D2                                     828+         $LR   13,2           Now point save area to MY save area with R13
0000082A                                           829+         DROP  2
0000082A                      00000000             830+         USING SAVEA,13       Re-establish addressing to my save area with R13
0000082A  1B00                                     831+         $SR   0,0                 Set return code to 0, optimistically
0000082C  9857 C360                     00000B7C   832+         LM    5,7,IOTBLBA         Initialize the search registers
00000830                      00000000             833+         USING BLSIOT,5
00000830                                           834+QIOTLOOP DS    0H                  Check the table entry device number
00000830  D501 1002 5000      00000002  00000000   835+         CLC   SPBSI,BLSDEV         Is this the device being sought?
00000836  A784 0007                     00000844   836+         $BE   QIOFOUND             ..Yes, return the entry's address
0000083A  8556 FFFB                     00000830   837+         $BXLE 5,6,QIOTLOOP         ..No, try again
                                                   838+* Did not find the device in the table
0000083E  1850                                     839+         $LR   5,0                  Prepare to clear the SPBE
00000840  4100 0004                     00000004   840+         LA    0,4                  Set return code to 4 (not found)
00000844                                           841+QIOFOUND DS    0H      Found the entry
00000844  5050 1004                     00000004   842+         ST    5,SPBIOTA     Return the entry address in the SPBE or zero
00000848                                           843+         DROP  5
00000848                      00000000             845+         USING SAVEA,13      On return, service points to its save area
00000848  58D0 D004                     00000004   846+QIORETRN $L    13,SAVEBCK     Restore caller's save area address from service
                                                   847+* R13 now points to the caller's registers
0000084C  58F0 0278                     00000278   848+         L     15,LOD1RTN      Return to the framework for the return
00000850                                           849+         DROP  0               Forget ASA
00000850                                           850+         DROP  13              Forget any save area addressing as we leave
00000850  07FF                                     851+         BR    15              Return now to the framework...
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 3 - ENADEV                                                   08 Sep 2020 06:43:29  Page    23

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   853 *
                                                   854 * Boot Loader Service - 3 - ENADEV
                                                   855 *
                                                   856 * Register Usage:
                                                   857 *   R0 - Return Code
                                                   858 *   R1 - Hardware device address for I/O commands
                                                   859 *   R2 - Address of the new table entry
                                                   860 *   R3 - New end of the I/O Table after entry is added
                                                   861 *   R4 - Address of the SPB and its extention
                                                   862 *   R5 - Address of the existing I/O Table entry of the device
                                                   863 *   R6 - Location where channel subsystem SCHIB's are stored
                                                   864 *   R12 - Base register
                                                   865 *   R15 - Return address to serivce framework

                                                   867          SERVENAD
00000854                                           869+         DS    0F
00000854  C2D3E203                                 870+         DC    CL3'BLS',AL1(ENADEV)
00000858                                           871+SERVENAD DS    0H             Start of service
00000858                      00000858             872+         USING SERVENAD,12    Establish service addressing
00000858                      00000000             873+         USING ASA,0          Address the ASA
00000858                      00000000             874+         USING SPB,1          Address the SPB (address from framework)
00000858                      00000000             875+         USING SAVEA,13       Address caller's save area
                                                   876+         LA    2,EOBL+(ENADSAVE-DMEMORY) \
00000858  4120 C458                     00000CB0      +                                      Point to my save area
0000085C  5020 D008                     00000008   877+         $ST   2,SAVEFWD      Save my save area address in caller's save area
00000860                                           878+         DROP  13             Forget caller's save area
00000860                      00000000             879+         USING SAVEA,2        Now address MY save area
00000860  50D0 2004                     00000004   880+         $ST   13,SAVEBCK     Preserve caller's R13 now in my save area
00000864  18D2                                     881+         $LR   13,2           Now point save area to MY save area with R13
00000866                                           882+         DROP  2
00000866                      00000000             883+         USING SAVEA,13       Re-establish addressing to my save area with R13
00000866                                           884+         DROP  1
00000866  1841                                     885+         $LR   4,1              Need to free up R1 for I/O commands
00000868                      00000000             886+         USING SPB,4            Set new register for addressing SPB
00000868  1B00                                     887+         SR    0,0              Set return code to 0, optimistically

                                                   889+* Determine if device is already in the table
0000086A  D201 C0F4 4002      0000094C  00000002   890+         MVC   ENAQIOT+2,SPBSI   Set device address in my QIOT
00000870  4110 C0F2                     0000094A   892+         LA    1,ENAQIOT
00000874  58F0 0270                     00000270   893+         L     15,LOD1BLST
00000878  0DEF                                     894+         $BASR 14,15
0000087A  12FF                                     895+         LTR   15,15        Test the QIOT return code
0000087C  4770 C04A                     000008A2   896+         BNZ   ENADADD      ..Not found, so device eligible for being added

                                                   898+* Make sure the device class is the same
00000880  5850 C0F6                     0000094E   899+         L     5,ENAQIOT+SPBIOTA   Fetch the address of the existing entry
00000884  D500 4004 5002      00000004  00000002   900+         CLC   SPBDCLS,BLSTYP-BLSIOT(5)  Do the device classes match?
0000088A  A784 0006                     00000896   901+         $BE   ENADOK           ..Yes, just return the address
                                                   902+* Device class does not match
0000088E  4100 0014                     00000014   903+         LA    0,20             Set return code of 20
00000892  A7F4 0055                     0000093C   904+         $B    ENADRTN          Return to caller
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 3 - ENADEV                                                   08 Sep 2020 06:43:29  Page    24

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00000896                                           906+ENADOK   DS    0H   Simply return with the I/O Table address
00000896  5050 4004                     00000004   907+         ST    5,SPBIOTA
0000089A  4100 0004                     00000004   908+         LA    0,4              Set return address to 4
0000089E  A7F4 004F                     0000093C   909+         $B    ENADRTN

000008A2                                           911+ENADADD  DS    0H   Try to add the device to the table
000008A2  5820 C32C                     00000B84   912+         L     2,IOTBLEA        Locate the current end of the table
000008A6  1832                                     913+         LR    3,2              Calculate the new end of the table
000008A8  5E30 C328                     00000B80   914+         AL    3,IOTBLI         New ending address for new table entry
000008AC  5530 C320                     00000B78   915+         CL    3,IOTMAX         Did we go beyond the end of the table?
000008B0  A744 0006                     000008BC   916+         $BL   ENADTEST         ..No, good to go (room to add new entry)
000008B4  4100 0010                     00000010   917+         LA    0,16             ..Yes, return with 16 return code, table full
000008B8  A7F4 0042                     0000093C   918+         $B    ENADRTN          Quit now.

000008BC                                           920+ENADTEST DS    0H   Test if the device is usable.
000008BC  4120 2001                     00000001   921+         LA    2,1(,2)          Point to the table entry being added
000008C0                      00000000             922+         USING BLSIOT,2         Set up addressing for the new I/O Table entry
000008C0  5860 C334                     00000B8C   923+         L     6,CSBLOCKS          This is where SCHIB will be stored
000008C4  9201 C331                     00000B89   924+         MVI   CSSTRUCT,CSSSCHIB   We have a SCHIB in the area
000008C8  5810 C0EE                     00000946   925+         L     1,ENADSIWB          Fetch the first SIW

000008CC                                           927+ENASRCH  DS    0H     This loop searches for the device being added within
                                                   928+*                     the configured subchannel devices
000008CC  B234 6000                     00000000   929+         STSCH 0(6)                Store the SCHIB
000008D0  A714 000B                     000008E6   930+         $BC   B'0001',ENADNOAV    Hit CC==3, end of subchannels
                                                   931+*                                  CC==1 and CC==2 are not possible
                                                   932+*                                  Assume CC==0, the SCHIB was stored
000008D4                      00000000             933+         USING SCHIB,6             Address it
000008D4  D501 4002 6006      00000002  00000006   934+         CLC   SPBSI,PMCWDNUM      Is this the device number we want?
000008DA  A784 000A                     000008EE   935+         $BE   ENADGOOD            ..Yes, we can add it to the IOT
                                                   936+* This subchannel is not the one we need, try again with next subchannel
                                                   937+* Increment the subchannel number in the SIW
000008DE  4110 1001                     00000001   938+         LA    1,1(,1)             Increment it
000008E2  A7F4 FFF5                     000008CC   939+         $B    ENASRCH             See if next subchannel is what we need
                                                   940+ENADNOAV DS    0H \
000008E6                                              +                 Device is invalid
000008E6  4100 000C                     0000000C   941+         LA    0,12     Return with condition code 12
000008EA  A7F4 0029                     0000093C   942+         $B    ENADRTN

000008EE                                           944+ENADGOOD DS    0H  Add the subchannel device to the table...
000008EE  D201 2000 6006      00000000  00000006   945+         MVC   BLSDEV,PMCWDNUM     Set I/O Table device number
000008F4  5010 2004                     00000004   946+         ST    1,BLSHDW            Set I/O Table hardware address
000008F8  D200 2002 4004      00000002  00000004   947+         MVC   BLSTYP,SPBDCLS      Set the device class in the entry
000008FE  9680 6005                     00000005   948+         OI    PMCW1_8,PMCWE       Enable the device to the subsystem
00000902  5050 6000                     00000000   949+         ST    5,PMCWIP            Set the Interruption Parameter
00000906  D200 6004 4004      00000004  00000004   950+         MVC   PMCW1_0,SPBDCLS     Set the Interruption subclass code
0000090C  9438 6004                     00000004   951+         NI    PMCW1_0,PMCWISCM    Make sure required bits are zero
00000910  B232 6000                     00000000   952+         MSCH  0(6)                Enable the subchannel
00000914                                           953+         DROP  6                   Do not access the SCHIB after this
00000914  A774 FFE9                     000008E6   954+         $BC   B'0111',ENADNOAV    CC==1 or 2 or 3, subchannel not available
                                                   955+* CC==0, subchannel was successfully modified
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 3 - ENADEV                                                   08 Sep 2020 06:43:29  Page    25

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   957+* Create the device error mask from the device class entry
00000918  92F1 200C                     0000000C   959+         MVI   BLSERR,X'F1'        This is the generic device error check
                                                   960+* This checks for these error conditions:
                                                   961+*   X'80' - Attention (MAY BE TURNED OFF FOR SOME DEVICES)
                                                   962+*   X'40' - Status Modifier
                                                   963+*   X'20' - Control-Unit End
                                                   964+*   X'10' - Busy
                                                   965+*   X'01' - Unit Exception (MAY BE TURNED OFF FOR SOME DEVICES)
                                                   966+*
                                                   967+* While Unit Check is an error condition, it must be explicitly checked so
                                                   968+* that the service can indicate a pending action to read sense data by the
                                                   969+* program.  Yes, it is an error condition, but requires special handling.
                                                   970+* When set, the service indicates both an error condition AND a pending action.
                                                   971+*   X'02' - Unit Check (sense is pending)
                                                   972+*
                                                   973+* This ignores these normal status conditions.  They must be checked by the
                                                   974+* service depending upon the EXCP SPB controls.
                                                   975+*   X'08' - Channel end
                                                   976+*   X'04' - Device end

                                                   978+* If device recognizes physical end-of-file with Unit Exception, not an error
                                                   979+* So turn it off.
0000091C  9180 2002                     00000002   980+         TM    BLSTYP,BLSPEOF      Does device use UE for end-of-file condition?
00000920  A7E4 0004                     00000928   981+         $BNO  ERRU0052            ..No, check if device uses ATTN
00000924  94FE 200C                     0000000C   982+         NI    BLSERR,X'FE'        ..Yes, turn off UE as an error status

                                                   984+* If device signals data is ready with Attention, turn it off as an error.
00000928  9140 2002                     00000002   985+ERRU0052 TM    BLSTYP,BLSUNSOL     Does device use ATTN when data is ready?
0000092C  A7E4 0004                     00000934   986+         $BNO  ERRX0052            ..No, modifications to error status done
00000930  947F 200C                     0000000C   987+         NI    BLSERR,X'7F'        ..Yes, turn off ATTN as an error status

                                                   989+* Note: At present no device uses UE for physical end-of-file and Attention
                                                   990+* for data ready, but this code allows for both to be set in the device
                                                   991+* class value.

00000934                                           993+ERRX0052 DS    0H  Error mask completed

00000934                                           995+ENADSSPB DS    0H   Update the SPBE with the entry's address
00000934  5020 4004                     00000004   996+         ST    2,SPBIOTA           Set the I/O Table entry address in SPBE
                                                   997+* Officially add the entry to the table
00000938  5030 C32C                     00000B84   998+         ST    3,IOTBLEA           Update the end of the table
0000093C                      00000000            1000+         USING SAVEA,13      On return, service points to its save area
0000093C  58D0 D004                     00000004  1001+ENADRTN  $L    13,SAVEBCK     Restore caller's save area address from service
                                                  1002+* R13 now points to the caller's registers
00000940  58F0 0278                     00000278  1003+         L     15,LOD1RTN      Return to the framework for the return
00000944                                          1004+         DROP  0               Forget ASA
00000944                                          1005+         DROP  13              Forget any save area addressing as we leave
00000944  07FF                                    1006+         BR    15              Return now to the framework...

00000946  00010000                                1008+ENADSIWB DC    H'1',H'0'   Initial SIW used for searching subchannels
0000094A  00020000 00000000                       1009+ENAQIOT  DC    Y(QIOT),H'0',F'0'  Check to see if device in table
00000952  0000
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 4 - EXCP                                                     08 Sep 2020 06:43:29  Page    26

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1011 *
                                                  1012 * Boot Loader Service - 4 - EXCP
                                                  1013 *
                                                  1014 * SPB:
                                                  1015 *      SPB Bytes 0,1   - EXCP Service ID (4)
                                                  1016 *      SPB Byte 2      - SI EXCP input function control mask (See SPB DSECT)
                                                  1017 *      SPB Byte 3      - not used
                                                  1018 *      SPB Bytes 4-7   - ORB - I/O Table device entry address
                                                  1019 *      SPB Bytes 8-11  - ORB - Key and flags
                                                  1020 *      SPB Bytes 12-15 - ORB - CCW program starting address
                                                  1021 *
                                                  1022 * Register Usage:
                                                  1023 *   R0 - Return Code
                                                  1024 *   R1 - Hardware device address for I/O commands (from I/O Table)
                                                  1025 *   R2 -
                                                  1026 *   R3 - I/O Error execution register
                                                  1027 *   R4 - Address of the SPB and its extention (the ORB)
                                                  1028 *   R5 - Address of the primary device IOT entry
                                                  1029 *   R6 - Interrupting device I/O Table entry (may not be the R5 entry)
                                                  1030 *   R7 - Start of I/O table address and table entry start --------+
                                                  1031 *        When found this becomes the secondary device IOT address |
                                                  1032 *   R8 - I/O table entry length                                   |-- BXLE
                                                  1033 *   R9 - Address of the last byte of the I/O table itself --------+
                                                  1034 *   R12 - Base register
                                                  1035 *   R15 - Return address to serivce framework
                                                  1036 *

                                                  1038 SERVEXCP SERVEXCP
00000954                                          1040+         DS    0F
00000954  C2D3E204                                1041+         DC    CL3'BLS',AL1(EXCP)
00000958                                          1042+SERVEXCP DS    0H             Start of service
00000958                      00000958            1043+         USING SERVEXCP,12    Establish service addressing
00000958                      00000000            1044+         USING ASA,0          Address the ASA
00000958                      00000000            1045+         USING SPB,1          Address the SPB (address from framework)
00000958                      00000000            1046+         USING SAVEA,13       Address caller's save area
                                                  1047+         LA    2,EOBL+(EXCPSAVE-DMEMORY) \
00000958  4120 C3A0                     00000CF8      +                                      Point to my save area
0000095C  5020 D008                     00000008  1048+         $ST   2,SAVEFWD      Save my save area address in caller's save area
00000960                                          1049+         DROP  13             Forget caller's save area
00000960                      00000000            1050+         USING SAVEA,2        Now address MY save area
00000960  50D0 2004                     00000004  1051+         $ST   13,SAVEBCK     Preserve caller's R13 now in my save area
00000964  18D2                                    1052+         $LR   13,2           Now point save area to MY save area with R13
00000966                                          1053+         DROP  2
00000966                      00000000            1054+         USING SAVEA,13       Re-establish addressing to my save area with R13
00000966                                          1055+         DROP  1
00000966  1841                                    1056+         $LR   4,1     Free up R1 for I/O commands and preserve SPB
00000968                      00000000            1057+         USING SPB,4
00000968  1F00                                    1058+         $SLR  0       Set the return code to 0, optimistically

                                                  1060+*
                                                  1061+* Validate the ORB
                                                  1062+*
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 4 - EXCP                                                     08 Sep 2020 06:43:29  Page    27

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000096A  D503 4004 C224      00000004  00000B7C  1063+         CLC   SPBEORBT,IOTBLBA     Is the I/O Table address below table?
00000970  A744 00B5                     00000ADA  1064+         $BL   EXCP16RC             ..Yes, not a valid address
00000974  D503 4004 C22C      00000004  00000B84  1065+         CLC   SPBEORBT,IOTBLEA     Is the address beyond the table?
0000097A  A724 00B0                     00000ADA  1066+         $BH   EXCP16RC             ..Yes, not a valid address
0000097E  9103 4007                     00000007  1067+         TM    SPBEORBT+3,X'03'     Is the address on a full word?
00000982  A774 00AC                     00000ADA  1068+         $BNZ  EXCP16RC             ..No, not a valid address
00000986  910F 4008                     00000008  1069+         TM    SPBEORBK,SPBEORBR    Are bits 4-7 of the key field zeros?
0000098A  A774 00A8                     00000ADA  1070+         $BNZ  EXCP16RC             ..No, not valid for an ORB
0000098E  9580 4009                     00000009  1071+         CLI   SPBEORB1,X'80'       Is the F flag set (and the rest zeros)?
00000992  A774 00A4                     00000ADA  1072+         $BNE  EXCP16RC             ..No, not a valid flag setting
00000996  9500 400B                     0000000B  1073+         CLI   SPBEORB2,X'00'       Is byte 3 of word 1 zero?
0000099A  A774 00A0                     00000ADA  1074+         $BNE  EXCP16RC             ..No, not valid for an ORB



                                                  1076+*
                                                  1077+* STEP 1 - Start I/O operations for the device
                                                  1078+*
0000099E  D200 C1B2 4002      00000B0A  00000002  1079+         MVC   PDEVENDS,SPBECTL     Move the SPB SI control mask
000009A4  940C C1B2                     00000B0A  1080+         NI    PDEVENDS,PDEVENDM    Isolate channel end and device end bits
                                                  1081+* This mask will be used to determine when the primary device is done

000009A8  9180 4002                     00000002  1083+         TM    SPBECTL,SPBEBY1      Is the channel program bypassed?
000009AC  A714 001D                     000009E6  1084+         $BO   EXCPDOWT             ..Yes, go to step 2, waiting
000009B0  D503 400C C1A8      0000000C  00000B00  1085+         CLC   SPBEORBC,EXCPZERO    Is channel program address missing?
000009B6  A784 0092                     00000ADA  1086+         $BE   EXCP16RC             ..Yes, not valid for this ORB

000009BA  5850 4004                     00000004  1088+         L     5,SPBEORBT           Fetch the I/O Table entry address from ORB
000009BE                      00000000            1089+         USING BLSIOT,5             Address the entry
000009BE  5810 5004                     00000004  1090+         L     1,BLSHDW               Fetch the device's hardware address
000009C2  4160 4004                     00000004  1091+         LA    6,SPBEORB              Point to the ORB in the SPB
000009C6  B233 6000                     00000000  1092+         SSCH  0(6)                   Was request accepted?
000009CA  A784 000E                     000009E6  1093+         $BC   B'1000',EXCPDOWT       ..Yes, CC=0 wait for results...
000009CE  A724 0080                     00000ACE  1094+         $BC   B'0010',EXCP12RC       ..No, CC=2 subchannel is busy
                                                  1095+*                                     It has a previous start, halt or clear
                                                  1096+*                                     function in progress.  Should not happen
000009D2  A714 007E                     00000ACE  1097+         $BC   B'0001',EXCP12RC       ..No, CC=3 device not available
                                                  1098+*                                     Should not happen.  Device was enabled
                                                  1099+*        $BC    B'0100',FALL THROUGH  ..No, CC=1 subchannel has pending status?
                                                  1100+*  This could be unsolicited status.  Check if device will do that.
000009D6  9140 5002                     00000002  1101+         TM    BLSTYP,BLSUNSOL        Does the device generate unsolicited ATTN?
000009DA  A7E4 0074                     00000AC2  1102+         $BNO  EXCP08RC               ..No, so an error state
000009DE  A7F4 0004                     000009E6  1103+         $B    EXCPDOWT               ..Do the wait, but not busy with my work
                                                  1104+* It does, so fall through and wait for an interrupt (SSCH did not start!)
                                                  1105+* I/O Started - busy with my work.  Indicate the device is busy...
000009E2  9280 5003                     00000003  1106+         MVI   BLSTATUS,BLSBUSY     ..and clear other status bits



                                                  1108+*
                                                  1109+* STEP 2 - Wait for I/O Operation to complete with an interruption
                                                  1110+*
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 4 - EXCP                                                     08 Sep 2020 06:43:29  Page    28

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000009E6                                          1111+EXCPDOWT DS    0H   Wait for an interrupt from a device
000009E6  D207 0078 C198                00000AF0  1112+         MVC   IONPSW(8),EXCPCONT   Set up new PSW for after I/O interrupt
000009EC  8200 C190                     00000AE8  1113+         $LPSW EXCPWAIT   Wait for I/O interruption and CSW from channel
                              000009F0  00000001  1114+EXCPDONE EQU   *          EXCP continues here after I/O interruption
000009F0  D207 0078 C1A0                00000AF8  1115+         MVC   IONPSW(8),EXCPTRAP   Restore I/O trap PSW
                                                  1116+*
                                                  1117+* Fetch the interruption information for the interrupting device
                                                  1118+*
000009F6  5870 00BC                     000000BC  1119+         L     7,IOIPARM        Fetch the IOT entry address of device
000009FA  5570 4004                     00000004  1120+         CL    7,SPBEORBT       Is this from the primary device?
000009FE  A784 0006                     00000A0A  1121+         $BE   EXCPSPR          ..Yes, proceed by getting the interruption
00000A02  9202 C230                     00000B88  1122+         MVI   INTSRC,INTSEC    ..No, remember this is a secondary device
00000A06  A7F4 0004                     00000A0E  1123+         $B    EXCPSRS          and move it to its IOT entry
00000A0A                      00000000            1124+         USING BLSIOT,7         Point to IOT entry from SPB

00000A0A                                          1126+EXCPSPR  DS    0H    Fetch the interruption information
00000A0A  9201 C230                     00000B88  1127+         MVI   INTSRC,INTPRI    Remember this is the primary device
00000A0E                                          1128+EXCPSRS  DS    0H
00000A0E  5810 00B8                     000000B8  1129+         L     1,IOSSID         Fetch this device IRB (used by TSCH)
00000A12  5820 C234                     00000B8C  1130+         L     2,CSBLOCKS       This is where the IRB goes in memory
00000A16  B235 2000                     00000000  1131+         TSCH  0(2)             Fetch the IRB
00000A1A  A784 0003                     00000A20  1132+         $BC   B'1000',EXCPIRB   IRB has been stored with status
00000A1E  0000                                    1133+         DC    H'0'             Die if something else occurs

00000A20                                          1135+EXCPIRB  DS    0H   IRB stored
00000A20  9202 C231                     00000B89  1136+         MVI   CSSTRUCT,CSSIRB  Remember which block is stored
00000A24                      00000000            1137+         USING IRB,2            Point to the IRB
00000A24  D20B 7010 2000                00000000  1138+         MVC   BLSSW(12),IRBSCSW   Copy the SCSW from IRB to IOT entry
00000A2A  D601 7008 7018      00000008  00000018  1139+         OC    BLSUNCH,BLSSW+(SCSWUS-SCSW)  Accumulate status
00000A30  9602 7003                     00000003  1140+         OI    BLSTATUS,BLSTATS       BLSUNCH has status
00000A34                                          1141+         DROP  2                Do not need the IRB any longer



                                                  1143+*
                                                  1144+* STEP 3 - Analyze Status (from either expected or unexpected device)
                                                  1145+*
00000A34                                          1146+EXCPANAL DS    0H   Analyze status in the IOT entry
00000A34  9102 7003                     00000003  1147+         TM    BLSTATUS,BLSTATS    Status in the IOT entry?
00000A38  A714 0003                     00000A3E  1148+         $BO   *+6                 ..Yes, keep going
00000A3C  0000                                    1149+         DC    H'0'                ..No, should have status here.  DIE!

                                                  1151+* Determine if unsolicited status normal for this device
00000A3E  9140 7002                     00000002  1152+         TM    BLSTYP,BLSUNSOL     Does the device generate unsolicited ATTN?
00000A42  A7E4 0011                     00000A64  1153+         $BNO  EXCPSOL             ..No, so solicited status
00000A46  9180 7008                     00000008  1154+         TM    BLSUNIT,BLSATTN     ..Yes, so is this an ATTN?
00000A4A  47E0 C10C                     00000A64  1155+         BNO   EXCPSOL     ..No, so assume solicited status for primary device
00000A4E  9204 700B                     0000000B  1156+         MVI   BLSACT,BLSREAD      ..Yes, indicate this device needs a read
00000A52  9620 7003                     00000003  1157+         OI    BLSTATUS,BLSTATO    There is a pending action for this device
00000A56  9201 4003                     00000003  1158+         MVI   SPBPEND,SPBPENDG    Tell the program some device needs action
00000A5A  1557                                    1159+         $CLR  5,7                 Is this the primary device?
00000A5C  A774 FFC5                     000009E6  1160+         $BNE  EXCPDOWT            ..No, try for another interrupt
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 4 - EXCP                                                     08 Sep 2020 06:43:29  Page    29

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT


                                                  1162+* Primary device sent Attention status.  So, return code is 0
00000A60                                          1163+         DROP  7                   Forget interrupting device entry
00000A60  47F0 C154                     00000AAC  1164+         B     EXCP00RC            Return code 0

00000A64                                          1166+EXCPSOL  DS    0H      Determine primary device's state
00000A64                      00000000            1167+         USING BLSIOT,5
00000A64  9500 5009                     00000009  1168+         CLI   BLSCH,X'00'         Did a channel error occur?
00000A68  A774 002D                     00000AC2  1169+         $BNE  EXCP08RC            ..Yes, indicate an error condition
00000A6C  4330 500C                     0000000C  1170+         IC    3,BLSERR            Fetch the error mask for the device
00000A70  4430 C1AE                     00000B06  1171+         EX    3,EXCPDERR          ..Did a general device error occur?
00000A74  A774 0027                     00000AC2  1172+         $BNZ  EXCP08RC            ..Yes, return with 8 as return code

00000A78  9102 5008                     00000008  1174+         TM    BLSUNIT,SCSWUC      Did a Unit Check occur?
00000A7C  A7E4 000A                     00000A90  1175+         $BNO  EXCPSOLE            ..No, check for possible EOF condition
00000A80  9200 500B                     0000000B  1176+         MVI   BLSACT,BLSRDSN      ..Yes, indicate this device has sense data
00000A84  9201 4003                     00000003  1177+         MVI   SPBPEND,SPBPENDG    Tell the program some device needs action
00000A88  9620 5003                     00000003  1178+         OI    BLSTATUS,BLSTATO    There is a pending action for this device
00000A8C  A7F4 001B                     00000AC2  1179+         $B    EXCP08RC            Also indicate the primary device has error.

00000A90                                          1181+EXCPSOLE DS    0H     Determine if ending status is good
                                                  1182+* Determine if the device ended as expected
                                                  1183+* Checking termination settings from input SPBSI
00000A90  4330 C1B2                     00000B0A  1184+         IC    3,PDEVENDS          Fetch the ending mask for the operation
00000A94  4430 C1AE                     00000B06  1185+         EX    3,EXCPDERR          Did device end?
00000A98  A7E4 FFA7                     000009E6  1186+         $BNO  EXCPDOWT            ..No, wait for another interrupt
00000A9C  9180 5002                     00000002  1187+         TM    BLSTYP,BLSPEOF      Does device detect physcial end-of-file?
00000AA0  A7E4 0006                     00000AAC  1188+         $BNO  EXCP00RC            ..No, return code 0
00000AA4  9101 5008                     00000008  1189+         TM    BLSUNIT,SCSWUX      Did Unit Exception occur?
00000AA8  A714 0007                     00000AB6  1190+         $BO   EXCP04RC            ..Yes, return code 4
00000AAC                      00000000            1191+         USING BLSIOT,5            Return to the caller with return code 0
                                                  1192+*
                                                  1193+* Return to service caller with primary device return code
                                                  1194+*
00000AAC                                          1195+EXCP00RC DS    0H   Primary device successful
00000AAC  947F 5003                     00000003  1196+         NI    BLSTATUS,X'FF'-BLSBUSY    Turn off busy flag
00000AB0  1F00                                    1197+         $SLR  0,0               Set return code to 0
00000AB2  A7F4 0016                     00000ADE  1198+         $B    EXCPRCAL

00000AB6                                          1200+EXCP04RC DS    0H   Primary device detected physical end-of-file condition
00000AB6  947F 5003                     00000003  1201+         NI    BLSTATUS,X'FF'-BLSBUSY    Turn off busy flag
00000ABA  4100 0004                     00000004  1202+         LA    0,4                Set return code to 4
00000ABE  A7F4 0010                     00000ADE  1203+         $B    EXCPRCAL
00000AC2                                          1204+EXCP08RC DS    0H   Primary device is in an error condition
00000AC2  947F 5003                     00000003  1205+         NI    BLSTATUS,X'FF'-BLSBUSY    Turn off busy flag
00000AC6  4100 0008                     00000008  1206+         LA    0,8                Set return code to 8
00000ACA  A7F4 000A                     00000ADE  1207+         $B    EXCPRCAL

00000ACE                                          1209+EXCP12RC DS    0H   Device not available
00000ACE  947F 5003                     00000003  1210+         NI    BLSTATUS,X'FF'-BLSBUSY    Turn off busy flag
00000AD2  4100 000C                     0000000C  1211+         LA    0,12                Set return code to 12
00000AD6  A7F4 0004                     00000ADE  1212+         $B    EXCPRCAL
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 4 - EXCP                                                     08 Sep 2020 06:43:29  Page    30

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT


00000ADA                                          1214+EXCP16RC DS    0H   Return invalid ORB
00000ADA  4100 0010                     00000010  1215+         LA    0,16                Set return code to 16

00000ADE                                          1217+         DROP  4
00000ADE                                          1218+         DROP  5

                                                  1220+*
                                                  1221+* Return to service caller
                                                  1222+*
00000ADE                      00000000            1224+         USING SAVEA,13      On return, service points to its save area
00000ADE  58D0 D004                     00000004  1225+EXCPRCAL $L    13,SAVEBCK     Restore caller's save area address from service
                                                  1226+* R13 now points to the caller's registers
00000AE2  58F0 0278                     00000278  1227+         L     15,LOD1RTN      Return to the framework for the return
00000AE6                                          1228+         DROP  0               Forget ASA
00000AE6                                          1229+         DROP  13              Forget any save area addressing as we leave
00000AE6  07FF                                    1230+         BR    15              Return now to the framework...

00000AE8  020A0000 00000000                       1232+EXCPWAIT PSW   2,0,2,0,0          Causes CPU to wait for I/O interruption
00000AF0  00080000 800009F0                       1233+EXCPCONT PSW   0,0,0,0,EXCPDONE,31  Causes the CPU to continue after waiting
00000AF8  000A0000 00000038                       1234+EXCPTRAP PSW   0,0,2,0,X'38'      I/O trap New PSW (restored after I/O)
00000B00  00000000                                1235+EXCPZERO DC    F'0'               A constant of zeros
00000B04  0001                                    1236+EXCPONE  DC    H'1'               A constant of one

                                                  1238+* These two locations detect device errors for a specific device type
                                                  1239+* The device type implies the EXCPDEMK content.
00000B06                      00000000            1240+         USING BLSIOT,5    Set addressing for executed instruction
00000B06  9100 5008                     00000008  1241+EXCPDERR TM    BLSUNIT,0   Executed to detect device errors or ending status
00000B0A                                          1242+         DROP  5

                                                  1244+* Successful primary device unit status mask (driven by EXCP SPB SI data)
00000B0A  00                                      1245+PDEVENDS DC    XL1'00'            Primary unit status mask success
                              0000000C  00000001  1246+PDEVENDM EQU   X'0C'    Isolate the Channel End and Device status bits
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 5 - PNDING                                                   08 Sep 2020 06:43:29  Page    31

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1248 *
                                                  1249 * Boot Loader Service - 5 - PNDING
                                                  1250 *
                                                  1251 * Register Usage:
                                                  1252 *   R0 - Return Code
                                                  1253 *   R1 - AVAILABLE
                                                  1254 *   R2 - AVAILABLE
                                                  1255 *   R3 - AVAILABLE
                                                  1256 *   R4 - Address of the SPB and its extention
                                                  1257 *   R5 - AVAILABLE
                                                  1258 *   R6 - AVAILABLE
                                                  1259 *   R7 - Start of I/O table address and table entry start --------+
                                                  1260 *        When found this becomes the secondary device IOT address |
                                                  1261 *   R8 - I/O table entry length                                   |-- BXLE
                                                  1262 *   R9 - Address of the last byte of the I/O table itself --------+
                                                  1263 *   R10 - AVAILABLE
                                                  1264 *   R11 - AVAILABLE
                                                  1265 *   R12 - Base register
                                                  1266 *   R15 - Return address to serivce framework
                                                  1267 *

                                                  1269          SERVPEND
00000B0C                                          1271+         DS    0F
00000B0C  C2D3E205                                1272+         DC    CL3'BLS',AL1(PNDING)
00000B10                                          1273+SERVPEND DS    0H             Start of service
00000B10                      00000B10            1274+         USING SERVPEND,12    Establish service addressing
00000B10                      00000000            1275+         USING ASA,0          Address the ASA
00000B10                      00000000            1276+         USING SPB,1          Address the SPB (address from framework)
00000B10                      00000000            1277+         USING SAVEA,13       Address caller's save area
                                                  1278+         LA    2,EOBL+(PENDSAVE-DMEMORY) \
00000B10  4120 C230                     00000D40      +                                      Point to my save area
00000B14  5020 D008                     00000008  1279+         $ST   2,SAVEFWD      Save my save area address in caller's save area
00000B18                                          1280+         DROP  13             Forget caller's save area
00000B18                      00000000            1281+         USING SAVEA,2        Now address MY save area
00000B18  50D0 2004                     00000004  1282+         $ST   13,SAVEBCK     Preserve caller's R13 now in my save area
00000B1C  18D2                                    1283+         $LR   13,2           Now point save area to MY save area with R13
00000B1E                                          1284+         DROP  2
00000B1E                      00000000            1285+         USING SAVEA,13       Re-establish addressing to my save area with R13
00000B1E  1B00                                    1286+         $SR   0,0                 Set return code to 0, optimistically
                                                  1287+*         ICM   5,B'1111',SPBIOTA   Was an IOT address supplied?
00000B20  BF5F 1004                     00000004  1289+         ICM   5,B'1111',SPBIOTA    Load fullword and test the value
00000B24  A784 0008                     00000B34  1290+         $BZ   PNDSRCH             ..No entry address, so search the table
00000B28                      00000000            1291+         USING BLSIOT,5            Address the IOT entry
00000B28  9120 5003                     00000003  1292+         TM    BLSTATUS,BLSTATO    Does device have a pending action?
00000B2C  A714 000E                     00000B48  1293+         $BO   PNDINGD             ..Yes, need to report to the program
00000B30  A7F4 0018                     00000B60  1294+         $B    PNDRTN              ..No, return code of zero then

00000B34                                          1296+PNDSRCH  DS    0H   Search the IOT for a pending action
00000B34  9857 C06C                     00000B7C  1297+         LM    5,7,IOTBLBA         Initialize the search registers
00000B38  9120 5003                     00000003  1298+PNDLOOP  TM    BLSTATUS,BLSTATO    Does device have a pending action?
00000B3C  A714 0006                     00000B48  1299+         $BO   PNDINGD             ..Yes, need to report to the program
00000B40  8556 FFFC                     00000B38  1300+         $BXLE 5,6,PNDLOOP         ..No, try next table entry
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 5 - PNDING                                                   08 Sep 2020 06:43:29  Page    32

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1301+* Did not find a device with a pending action
00000B44  A7F4 000E                     00000B60  1302+         $B    PNDRTN              Return code 0

00000B48                                          1304+PNDINGD  DS    0H   Report pending action to the program
00000B48  9504 500B                     0000000B  1305+         CLI   BLSACT,BLSREAD      Is a program read pending?
00000B4C  A784 0006                     00000B58  1306+         $BE   PNDSNS              ..No, must be sense
00000B50  4100 0004                     00000004  1307+         LA    0,4                 ..Yes, return code 4
00000B54  A7F4 0004                     00000B5C  1308+         $B    PNDDEV  Report to the program the device with the pending action
00000B58  4100 0008                     00000008  1309+PNDSNS   LA    0,8                 Tell program device has sense data

00000B5C  5050 1004                     00000004  1311+PNDDEV   ST    5,SPBIOTA     Tell the program which device has action pending
00000B60                                          1312+         DROP  5
00000B60                      00000000            1314+         USING SAVEA,13      On return, service points to its save area
00000B60  58D0 D004                     00000004  1315+PNDRTN   $L    13,SAVEBCK     Restore caller's save area address from service
                                                  1316+* R13 now points to the caller's registers
00000B64  58F0 0278                     00000278  1317+         L     15,LOD1RTN      Return to the framework for the return
00000B68                                          1318+         DROP  0               Forget ASA
00000B68                                          1319+         DROP  13              Forget any save area addressing as we leave
00000B68  07FF                                    1320+         BR    15              Return now to the framework...
ASMA Ver. 0.2.0  BOOT LOADER - COMMON SERVICES DATA                                                 08 Sep 2020 06:43:29  Page    33

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1322 *
                                                  1323 * Common information used by Boot Loader Services
                                                  1324 *

                                                  1326          BLCOMMON
                                                  1327+* End-of-Boot-Loader Address used to identify if caller is the boot loader
00000B6C  00000B90                                1328+EOBLA    DC    A(EOBL)      Boot Loader's ending address
00000B70  00000000                                1329+CALLERA  DC    A(0)         Caller's return address
                                                  1330+* IPL Device I/O Table Address
00000B74  00000000                                1331+IPLDEVTA DC    A(0)     Returned by IOINIT service. Established upon return

                                                  1333+* ENADEV service uses this to determine if the table is full.  The field
                                                  1334+* is initialized in the assembly to the total length of the I/O Table and
                                                  1335+* converted to an address by the IOINIT service.
00000B78  00000100                                1336+IOTMAX   DC    A(IOTDEVS*BLSIOEL)   The byte following the I/O Table.

                                                  1338+* These values may be used by a BXLE.  The first entry is pointed to by the
                                                  1339+* initial 'sum' register value.  If the table entry fails, use BXLE to
                                                  1340+* point to the next entry.  The entire table has been examined when the
                                                  1341+* branch is not taken.  The IOINIT service adds the IPL device to the table.
                                                  1342+* So there is always at least one device in the table
00000B7C  00000000                                1343+IOTBLBA  DC    A(0)    Set by IOINIT service               BXLE R1   sum
00000B80  00000020                                1344+IOTBLI   DC    A(BLSIOEL)   Entry length (increment)       BXLE R3   even
00000B84  00000000                                1345+IOTBLEA  DC    A(0)    Set by IOINIT service (comparand)   BXLE R3+1 odd

                                                  1347+* Latest interruption source is the primary or secondary device
00000B88  00                                      1348+INTSRC   DC    X'00'    Interruption source
                              00000001  00000001  1349+INTPRI   EQU   X'01'    Interruption source is the primary device
                              00000002  00000001  1350+INTSEC   EQU   X'02'    Interruption source is the secondary device

                                                  1352+* What is in CSBLOCKS location - Used for debugging
00000B89  00                                      1353+CSSTRUCT DC    X'00'   Last stored structure from channel subsystem
                              00000001  00000001  1354+CSSSCHIB EQU   X'01'   CHSSBLK contains an SCHIB
                              00000002  00000001  1355+CSSIRB   EQU   X'02'   CHSSBLK contains an IRB

                                                  1357+* Where channel subsystem blocks are stored.  Initialized by IOINIT service
00000B8C  00000000                                1358+CSBLOCKS DC    A(0)



                                                  1360 * END OF bls.asm
ASMA Ver. 0.2.0  BOOT LOADER - MEMORY USAGE OUTSIDE OF REGION                                       08 Sep 2020 06:43:29  Page    34

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00000B90                                          1362 EOBL     DS    0D   The end of the boot loader that participates in IPL.
                                                  1363 * DSECT DMEMORY is placed after this location

                                                  1365          BLMEM
                                                  1366+* This DSECT defines memory usage not part of the assembled region
                                                  1367+* By placing areas within this section, the boot loader size is reduced.
                                                  1368+* The boot loader must provide addressability to these areas at run-time.
                                                  1369+DMEMORY  DSECT
                                                  1370+*
                                                  1371+*  Service related save areas
                                                  1372+*
00000000  00000000 00000000                       1374+SAVEAREA DC    18F'0'      32-bit register save area
00000008  00000000 00000000
00000010  00000000 00000000
00000018  00000000 00000000
00000020  00000000 00000000
00000028  00000000 00000000
00000030  00000000 00000000
00000038  00000000 00000000
00000040  00000000 00000000
00000048  00000000 00000000                       1376+NOOPSAVE DC    18F'0'      32-bit register save area
00000050  00000000 00000000
00000058  00000000 00000000
00000060  00000000 00000000
00000068  00000000 00000000
00000070  00000000 00000000
00000078  00000000 00000000
00000080  00000000 00000000
00000088  00000000 00000000
00000090  00000000 00000000                       1378+IOINSAVE DC    18F'0'      32-bit register save area
00000098  00000000 00000000
000000A0  00000000 00000000
000000A8  00000000 00000000
000000B0  00000000 00000000
000000B8  00000000 00000000
000000C0  00000000 00000000
000000C8  00000000 00000000
000000D0  00000000 00000000
000000D8  00000000 00000000                       1380+QIOTSAVE DC    18F'0'      32-bit register save area
000000E0  00000000 00000000
000000E8  00000000 00000000
000000F0  00000000 00000000
000000F8  00000000 00000000
00000100  00000000 00000000
00000108  00000000 00000000
00000110  00000000 00000000
00000118  00000000 00000000
00000120  00000000 00000000                       1382+ENADSAVE DC    18F'0'      32-bit register save area
00000128  00000000 00000000
00000130  00000000 00000000
00000138  00000000 00000000
00000140  00000000 00000000
ASMA Ver. 0.2.0  BOOT LOADER - MEMORY USAGE OUTSIDE OF REGION                                       08 Sep 2020 06:43:29  Page    35

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00000148  00000000 00000000
00000150  00000000 00000000
00000158  00000000 00000000
00000160  00000000 00000000
00000168  00000000 00000000                       1384+EXCPSAVE DC    18F'0'      32-bit register save area
00000170  00000000 00000000
00000178  00000000 00000000
00000180  00000000 00000000
00000188  00000000 00000000
00000190  00000000 00000000
00000198  00000000 00000000
000001A0  00000000 00000000
000001A8  00000000 00000000
000001B0  00000000 00000000                       1386+PENDSAVE DC    18F'0'      32-bit register save area
000001B8  00000000 00000000
000001C0  00000000 00000000
000001C8  00000000 00000000
000001D0  00000000 00000000
000001D8  00000000 00000000
000001E0  00000000 00000000
000001E8  00000000 00000000
000001F0  00000000 00000000



000001F8  00000000 00000000                       1388+CHSSBLK  DS    64F   Area used for channel subsystem control blocks
00000200  00000000 00000000
00000208  00000000 00000000
00000210  00000000 00000000
00000218  00000000 00000000
00000220  00000000 00000000
00000228  00000000 00000000
00000230  00000000 00000000
00000238  00000000 00000000
00000240  00000000 00000000
00000248  00000000 00000000
00000250  00000000 00000000
00000258  00000000 00000000
00000260  00000000 00000000
00000268  00000000 00000000
00000270  00000000 00000000
00000278  00000000 00000000
00000280  00000000 00000000
00000288  00000000 00000000
00000290  00000000 00000000
00000298  00000000 00000000
000002A0  00000000 00000000
000002A8  00000000 00000000
000002B0  00000000 00000000
000002B8  00000000 00000000
000002C0  00000000 00000000
000002C8  00000000 00000000
ASMA Ver. 0.2.0  BOOT LOADER - MEMORY USAGE OUTSIDE OF REGION                                       08 Sep 2020 06:43:29  Page    36

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000002D0  00000000 00000000
000002D8  00000000 00000000
000002E0  00000000 00000000
000002E8  00000000 00000000
000002F0  00000000 00000000



                                                  1390+* I/O Table is placed last so that it can be dynamically extended if needed.
                                                  1391+* No service is provided for that purpose, but it can be done by increasing
                                                  1392+* IOTMAX by size of the number of additional table entries being added.  IOTBLI
                                                  1393+* contains the size of each individual entry.
000002F8                                          1395+         DS    0D
000002F8  00000000 00000000                       1396+IOTBL    DS    (8*7)F'0'             Define the I/O table
00000300  00000000 00000000
00000308  00000000 00000000
00000310  00000000 00000000
00000318  00000000 00000000
00000320  00000000 00000000
00000328  00000000 00000000
00000330  00000000 00000000
00000338  00000000 00000000
00000340  00000000 00000000
00000348  00000000 00000000
00000350  00000000 00000000
00000358  00000000 00000000
00000360  00000000 00000000
00000368  00000000 00000000
00000370  00000000 00000000
00000378  00000000 00000000
00000380  00000000 00000000
00000388  00000000 00000000
00000390  00000000 00000000
00000398  00000000 00000000
000003A0  00000000 00000000
000003A8  00000000 00000000
000003B0  00000000 00000000
000003B8  00000000 00000000
000003C0  00000000 00000000
000003C8  00000000 00000000
000003D0  00000000 00000000
                              00000008  00000001  1397+IOTDEVS  EQU   8                     Number of devices in the I/O table
                              000003D8  00000001  1398+IOTBLE   EQU   *



                              000003D8  00000001  1400+HWM      EQU   IOTBLE     Can not load any directed record lower than here
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:43:29  Page    37

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1402          BLSPB
                                                  1403+*
                                                  1404+* Boot Loader Services Parameter Block
                                                  1405+*
                                                  1406+SPB      DSECT
00000000  0000                                    1407+SPBID    DS    H           Service ID of requested service from caller
00000002  0000                                    1408+SPBSI    DS    H           Service Information provided by caller
                              00000004  00000001  1409+SPBE     EQU   *           Start of SPB extension used by service

                                                  1411+* This SPBE field is used by IOINIT, QIOT, ENADEV, and PNDING services
00000004  00000000                                1412+SPBIOTA  DS    F           I/O Table entry address as service input or output

                                                  1414+* IOINIT SPBE - SERVICE ID 1
                                                  1415+*   SPB: DC  Y(IOINIT),H'0'
00000008                      00000008  00000002  1416+         ORG   SPBSI
00000002  00                                      1417+SPBCCWF  DS    X           CCW Format used by boot loader services
                              00000001  00000001  1418+SPBCCW0  EQU   X'01'       CCW Format 0 used
                              00000002  00000001  1419+SPBCCW1  EQU   X'02'       CCW Format 1 used
00000003  00                                      1420+         DS    X
00000004  00000000                                1421+         DS    F           Returned address of I/O Table entry

                                                  1423+* QIOT SPBE -   SERVICE ID 2
                                                  1424+*   SPB: DC  Y(QIOT),H'0',F'0'
00000008                      00000008  00000004  1425+         ORG   SPBE
00000004  00000000                                1426+         DS    F           Returned address of I/O Table entry

                                                  1428+* ENADEV SPBE - SERVICE ID 3
                                                  1429+*   SPB: DC   Y(ENADEV),H'0',AL1(BLSTYP),XL3'000000'
00000008                      00000008  00000004  1430+         ORG   SPBE
00000004  00                                      1431+SPBDCLS  DS    X           Input Device Class (same values as BLSTYP)
00000005                      00000005  00000004  1432+         ORG   SPBE  (RC==0 or RC==4)
00000004  00000000                                1433+         DS    F           Returned address of I/O Table entry
00000008                      00000008  00000004  1434+         ORG   SPBE  (RC==8)
00000004  00                                      1435+         DS    X           Input Device Class (SPBDCLS)
00000005  00                                      1436+         DS    X           RESERVED
00000006  00                                      1437+SPBDEVST DS    X           Device status (if available)
00000007  00                                      1438+SPBCHST  DS    X           Channel status (if available)
00000008                      00000008  00000004  1439+         ORG   SPBE  (RC==12, RC==16, or RC==20)
00000004  00                                      1440+         DS    X           Input Device Class (SPBDCLS)
00000005  000000                                  1441+         DS    XL3         RESERVED


                                                  1443+* EXCP SPB -    SERVICE ID 4
                                                  1444+*   SPB: DC   Y(EXCP),H'0'
                                                  1445+*        BLSORB
00000008                      00000008  00000002  1446+         ORG   SPBSI
00000002  00                                      1447+SPBECTL  DS    X           EXCP input function control mask
                              00000080  00000001  1448+SPBEBY1  EQU   X'80'       Bypass Step 1 processing (start I/O)
                                                  1449+* SPBEBY2  EQU   X'40'       Bypass Step 2 processing (I/O wait)
                                                  1450+* SPBEBY3  EQU   X'20'       Bypass Step 3 processing (status analysis)
                              0000000C  00000001  1451+SPBEWTM  EQU   X'0C'       Mask to isolate wait conditions
                                                  1452+*                          Step 2 wait conditions:
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:43:29  Page    38

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                              0000000C  00000001  1453+SPBEWDC  EQU   12            - Wait for both device and channel end
                              00000008  00000001  1454+SPBEWCO  EQU   8             - Wait for channel end (may also have device end)
                              00000004  00000001  1455+SPBEWDO  EQU   4             - Wait for device end (may also have channel end)
                              00000000  00000001  1456+SPBEWNO  EQU   0             - Do not wait for both device and channel end
                              0000000C  00000001  1457+SPBENRM  EQU   SPBEWDC     Usual controls for most I/O actions
                              00000080  00000001  1458+SPBEATN  EQU   SPBEBY1     Usual controls for ATTN wait

00000003  00                                      1460+SPBPEND  DS    X           EXCP output pending data condition
                              00000001  00000001  1461+SPBPENDG EQU   X'01'       I/O Table has pending actions for other devices
                              00000000  00000001  1462+SPBPENDN EQU   X'00'       I/O Table has no pending actions

00000004  00000000 00000000                       1464+SPBEORB  DS    3F          Operational Request Block
0000000C  00000000
00000010                      00000010  00000004  1465+         ORG   SPBEORB
00000004  00000000                                1466+SPBEORBT DS    F       +0  Device I/O Table address (Interruption Parameter)
00000008  00                                      1467+SPBEORBK DS    X       +4  Storage Key field
                              000000F0  00000001  1468+SPBEORBM EQU   X'F0'       Storage Key mask
                              0000000F  00000001  1469+SPBEORBR EQU   X'0F'       Reserved portion of key field byte
00000009  00                                      1470+SPBEORB1 DS    X       +5  F flag byte required content
0000000A  00                                      1471+SPBEORBL DS    X       +6  Logical Path Mask
0000000B  00                                      1472+SPBEORB2 DS    X       +7  Required content
0000000C                                          1473+SPBEORBC DS    0XL4    +8  31-bit channel program address
0000000C  00                                      1474+         DS    X       +8  Ignored for early architectures
0000000D  000000                                  1475+SPBEORBP DS    XL3     +9  24-bit channel program address


                                                  1477+* PNDGIN SPB -    SERVICE ID 5
                                                  1478+*   SPB: DC   Y(PNDING),H'0',F'0'
00000010                      00000010  00000004  1479+         ORG   SPBE
00000004  00000000                                1480+         DS    F           Returned IOT entry address of pending device



                                                  1482 BLSIOT   BLSIOT
                                                  1483+*
                                                  1484+* Boot Loader I/O Table Entry
                                                  1485+*
                                                  1486+BLSIOT   DSECT
00000000  0000                                    1487+BLSDEV   DS    H        +0 I/O device number

00000002  00                                      1489+BLSTYP   DS    X        +2 I/O device class and attributes
                              00000080  00000001  1490+BLSPEOF  EQU   B'10000000' 'Detects physical end-of-file' mask
                              00000040  00000001  1491+BLSUNSOL EQU   B'01000000' 'Generates unsolicited status' mask
                              00000038  00000001  1492+BLSSCLS  EQU   B'00111000' Device subclass mask
                                                  1493+* Note: the device class is positioned in the byte so it can be used for the
                                                  1494+* channel subsystem SCHIB I/O subclass code field without shifting.
                              000000F8  00000001  1495+BLSRSV   EQU   B'11111000' Reserved bits mask (zeros)              UE
                                                  1496+*                        CLASS                                    PEOF ATTN
                                                  1497+*              B'00000000' 0 - Highest priority available           ?    ?
                              00000008  00000001  1498+BLSFBA   EQU   B'00001000' 1 - Fixed-Block-Architecture DASD device N    N
                              00000089  00000001  1499+BLSCKD   EQU   B'10001001' 1 - Count-Key-Data DASD device           Y    N
                              00000090  00000001  1500+BLSTAPE  EQU   B'10010000' 2 - Sequential tape device               Y    N
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:43:29  Page    39

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                              00000098  00000001  1501+BLSCARD  EQU   B'10011000' 3 - Sequential input card device         Y    N
                              00000020  00000001  1502+BLSPUN   EQU   B'00100000' 4 - Sequential output punch device       N    N
                              00000028  00000001  1503+BLSPR    EQU   B'00101000' 5 - Sequential output printer device     N    N
                              00000070  00000001  1504+BLSCON   EQU   B'01110000' 6 - Operator console device              N    Y
                              00000078  00000001  1505+BLS3270  EQU   B'01111000' 7 - Operator 3270 terminal device        N    Y

00000003  00                                      1507+BLSTATUS DS    X        +3 Current device status
                              00000080  00000001  1508+BLSBUSY  EQU   B'10000000' Device is busy
                                                  1509+* Note: When BLSBUSY set, BLSTAT, BLSTATO, BLSTATS and BLSSNSP turned off,
                                                  1510+* (set to 0).
                              00000040  00000001  1511+BLSTAT   EQU   B'01000000' Status in BLSSW.
                              00000020  00000001  1512+BLSTATO  EQU   B'00100000' Pending action present in BLSACT
                              00000002  00000001  1513+BLSTATS  EQU   B'00000010' Unit and channel status present in BLSUNCH
                              00000001  00000001  1514+BLSSNSP  EQU   B'00000001' Sense data is present in BLSSNS

00000004  00000000                                1516+BLSHDW   DS    F        +4 Hardware defined device address

00000008                                          1518+BLSUNCH  DS    0XL2     +8 Accumulated status when bit 1 set to 1 in BLSTATUS
00000008  00                                      1519+BLSUNIT  DS    X           Unit status
                              00000080  00000001  1520+BLSATTN  EQU   B'10000000' Attention status
                              00000001  00000001  1521+BLSUE    EQU   B'00000001' Unit exception status (physical EOF)
00000009  00                                      1522+BLSCH    DS    X           Channel status


0000000A  00                                      1524+BLSSNS   DS    XL1     +10 Sense data present when bit 7 set to 1 in BLSTATUS

0000000B  00                                      1526+BLSACT   DS    XL1     +11 Pending action when bit 2 set to 1 in BLSTATUS
                              00000000  00000001  1527+BLSRDSN  EQU   X'00'       Device has pending sense data to be read
                              00000004  00000001  1528+BLSREAD  EQU   X'04'       Device has pending data to be read

0000000C  00                                      1530+BLSERR   DS    XL1     +12 Device status error mask, set by ENADEV

0000000D  000000                                  1532+BLSRSV2  DS    XL3     +13 RESERVED

00000010  00000000 00000000                       1534+BLSSW    DS    3F      +16 SCSW of the latest interruption
00000018  00000000

0000001C  00000000                                1536+BLSPROG  DS    F       +28 Reserved for booted program usage
                              00000020  00000001  1537+BLSIOEL  EQU   *-BLSIOT    Length of an I/O Table Entry (32 bytes)



                                                  1539 *
                                                  1540 * Subroutine Register Save Area DSECT
                                                  1541 *

                                                  1543          SAVEAREA DSECT=YES
                                                  1544+SAVEA    DSECT
00000000  00000000                                1545+SAVERSV  DS    F'0'        Reserved save area field
00000004  00000000                                1546+SAVEBCK  DS    A(0)        Backward save area pointer (points to caller)
00000008  00000000                                1547+SAVEFWD  DS    A(0)        Forward save area pointer (points to called)
0000000C  00000000                                1548+SAVER14  DS    A(0)        Saved R14 (caller's return address)
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:43:29  Page    40

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00000010  00000000                                1549+SAVER15  DS    A(0)        Saved R15 (called routine entry address)
00000014  00000000                                1550+SAVER0   DS    F'0'        Saved R0
00000018  00000000                                1551+SAVER1   DS    F'0'        Saved R1
0000001C  00000000                                1552+SAVER2   DS    F'0'        Saved R2
00000020  00000000                                1553+SAVER3   DS    F'0'        Saved R3
00000024  00000000                                1554+SAVER4   DS    F'0'        Saved R4
00000028  00000000                                1555+SAVER5   DS    F'0'        Saved R5
0000002C  00000000                                1556+SAVER6   DS    F'0'        Saved R6
00000030  00000000                                1557+SAVER7   DS    F'0'        Saved R7
00000034  00000000                                1558+SAVER8   DS    F'0'        Saved R8
00000038  00000000                                1559+SAVER9   DS    F'0'        Saved R9
0000003C  00000000                                1560+SAVER10  DS    F'0'        Saved R10
00000040  00000000                                1561+SAVER11  DS    F'0'        Saved R11
00000044  00000000                                1562+SAVER12  DS    F'0'        Saved R12
                              00000048  00000001  1563+SAVELEN  EQU   *-SAVEA     Length of 32-bit subroutine save area



                                                  1565 *
                                                  1566 * Input/Output Structure DSECT's
                                                  1567 *

                                                  1569          BLSIODS

                                                  1571+*
                                                  1572+* I/O Operation Request Block (ORB)
                                                  1573+*

                                                  1577+ORB      DSECT
00000000  00000000                                1578+ORBPARM  DC    F'0'     Word 0, bits 0-31

00000004  00                                      1580+ORB1_0   DC    X'00'    Word 1, bits 0-7
                              000000F0  00000001  1581+ORBKEYM  EQU   X'F0'    Word 1, bits 0-3   - Storage Key Mask
                              00000008  00000001  1582+ORBS     EQU   X'08'    Word 1, bit 4      - Suspend Control
                              00000004  00000001  1583+ORBC     EQU   X'04'    Word 1, bit 5      - Streaming Mode Control
                              00000002  00000001  1584+ORBM     EQU   X'02'    Word 1, bit 6      - Modification Control
                              00000001  00000001  1585+ORBY     EQU   X'01'    Word 1, bit 7      - Synchronization Control

00000005  00                                      1587+ORB1_8   DC    X'00'    Word 1, bits 8-15
                              00000080  00000001  1588+ORBF     EQU   X'80'    Word 1, bit 8      - CCW Format-Control
                              00000040  00000001  1589+ORBP     EQU   X'40'    Word 1, bit 9      - Pre-fetch control
                              00000020  00000001  1590+ORBI     EQU   X'20'    Word 1, bit 10     - Initial-status Interruption Control
                              00000010  00000001  1591+ORBA     EQU   X'10'    Word 1, bit 11     - Address Limit Checking Control
                              00000008  00000001  1592+ORBU     EQU   X'08'    Word 1, bit 12     - Suppress-suspended-interruption control
                              00000004  00000001  1593+ORBB     EQU   X'04'    Word 1, bit 13     - Channel-Program-Type Control
                              00000002  00000001  1594+ORBH     EQU   X'02'    Word 1, bit 14     - Format 2-IDAW Control
                              00000001  00000001  1595+ORBT     EQU   X'01'    Word 1, bit 15     - 2K-IDAW control
00000006  00                                      1596+ORBLPM   DC    X'00'    Word 1, bits 16-23 - Logical Path Mask
00000007  00                                      1597+ORRB1_24 DC    X'00'    Word 1, bits 24-31
                              00000080  00000001  1598+ORBL     EQU   X'80'    Word 1, bit 24     - Incorrect Length Suppression Mode
                              0000007F  00000001  1599+ORBRSV3  EQU   X'7F'    Word 1, bits 25-31 - reserved must be zeros
                              00000040  00000001  1600+ORBD     EQU   X'40'    Word 1, bit 25     - MIDAW Addressing Control
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:43:29  Page    41

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                              0000003E  00000001  1601+ORBRSV26 EQU   X'3E'    Word 1, bits 26-30 - reserved must be zeros
                              0000007E  00000001  1602+ORBRSV25 EQU   X'7E'    Word 1, bits 25-30 - reserved must be zeros
                              00000001  00000001  1603+ORBX     EQU   X'01'    Word 1, bit 31     - ORB-extension control

00000008  00000000                                1605+ORBCCW   DC    A(0)     Word 2, bits 1-31  - Channel Program Address
                              00000080  00000001  1606+ORBRSV4  EQU   X'80'    Word 2, bit 0      - reserved must be zero
                              0000000C  00000001  1607+ORBLEN   EQU   *-ORB Length of standard ORB
                                                  1608+* Extended ORB fields
0000000C  00                                      1609+ORBCSS   DC    X'00'    Word 3, bits 0-7   - Channel Subsystem Priority
0000000D  00                                      1610+ORBRSV5  DC    X'00'    Word 3, bits 8-15  - reserved must be zeros
0000000E                                          1611+ORBPGM   DC    0X'00'   Word 3, bits 16-23 - Transport mode reserves for program use
0000000E  00                                      1612+ORBCU    DC    X'00'    Word 3, bits 16-23 - Control Unit Priority
0000000F  00                                      1613+ORBRSV6  DC    X'00'    Word 3, bits 24-31 - reserved must be zeros
00000010  00000000 00000000                       1614+ORBRSV7  DC    XL16'00' Words 4-7          - reserved must be zeros
00000018  00000000 00000000
                              00000020  00000001  1615+ORBXLEN  EQU   *-ORB Length of extended ORB




                                                  1618+*
                                                  1619+* Channel Subsystem Status Word (SCSW)
                                                  1620+*

                                                  1624+SCSW     DSECT Subchannel          Status Word
00000000  00                                      1625+SCSWFLAG DC    X'00'    Flags
                              000000F0  00000001  1626+SCSWKEYM EQU   X'F0'    Storage Key Mask of subchannel storage key
                              00000008  00000001  1627+SCSWSUSC EQU   X'08'    Suspend Control
                              00000004  00000001  1628+SCSWESWF EQU   X'04'    Extended Status Word Format
                              00000003  00000001  1629+SCSWDCCM EQU   X'03'    Deferred condiont code mask
                              00000000  00000001  1630+SCSWDCC0 EQU   X'00'    Normal I/O interruption
                              00000001  00000001  1631+SCSWDCC1 EQU   X'01'    Deferred condition code is 1
                              00000003  00000001  1632+SCSWDCC3 EQU   X'03'    Deferred condition code is 3

00000001  00                                      1634+SCSWCTLS DC    X'00'    General Controls
                              00000080  00000001  1635+SCSWCCWF EQU   X'80'    CCW Format control when ...
                              00000040  00000001  1636+SCSWCCWP EQU   X'40'    CCW Prefetch Control
                              00000020  00000001  1637+SCSWISIC EQU   X'20'    Initial-Status-Interruption Control
                              00000010  00000001  1638+SCSWALKC EQU   X'10'    Address-Limit-Checking Control
                              00000008  00000001  1639+SCSWSSIC EQU   X'08'    Suppress suspended interruption
                              00000004  00000001  1640+SCSW0CC  EQU   X'04'    Zero-Condition Code
                              00000002  00000001  1641+SCSWECWC EQU   X'02'    Extended Control Word control
                              00000001  00000001  1642+SCSWPNOP EQU   X'01'    Path Not Operational

00000002  00                                      1644+SCSW1    DC    X'00'    Control Byte 1
                              00000070  00000001  1645+SCSWFM   EQU   X'70'    Functional Control Mask
                              00000040  00000001  1646+SCSWFS   EQU   X'40'    Function Control - Start Function
                              00000020  00000001  1647+SCSWFH   EQU   X'20'    Function Control - Halt Function
                              00000010  00000001  1648+SCSWFC   EQU   X'10'    Function Control - Clear Function
                              00000008  00000001  1649+SCSWARP  EQU   X'08'    Activity Control - Resume pending
                              00000004  00000001  1650+SCSWASP  EQU   X'04'    Activity Control - Start pending
                              00000002  00000001  1651+SCSWAHP  EQU   X'02'    Activity Control - Halt pending
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:43:29  Page    42

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                              00000001  00000001  1652+SCSWACP  EQU   X'01'    Activity Control - Clear pending
00000003  00                                      1653+SCSW2    DC    X'00'    Control Byte 2
                              00000080  00000001  1654+SCSWASA  EQU   X'80'    Activity Control - Subchannel Active
                              00000040  00000001  1655+SCSWADA  EQU   X'40'    Activity Control - Device Active
                              00000020  00000001  1656+SCSWASUS EQU   X'20'    Activity Control - Suspended
                              00000010  00000001  1657+SCSWSAS  EQU   X'10'    Status Control   - Alert Status
                              00000008  00000001  1658+SCSWSINT EQU   X'08'    Status Control   - Intermediate Status
                              00000004  00000001  1659+SCSWSPRI EQU   X'04'    Status Control   - Primary Status
                              00000002  00000001  1660+SCSWSSEC EQU   X'02'    Status Control   - Secondary Status
                              00000001  00000001  1661+SCSWSPEN EQU   X'01'    Status Control   - Status Pending

00000004  00000000                                1663+SCSWCCW  DC    A(0)     CCW Address

00000008  00                                      1665+SCSWUS   DC    X'00'    Unit Status
                              00000080  00000001  1666+SCSWATTN EQU   X'80'    Attention
                              00000040  00000001  1667+SCSWSM   EQU   X'40'    Status modifier
                              00000020  00000001  1668+SCSWCUE  EQU   X'20'    Control-unit end
                              00000010  00000001  1669+SCSWBUSY EQU   X'10'    Busy
                              00000008  00000001  1670+SCSWCE   EQU   X'08'    Channel end
                              00000004  00000001  1671+SCSWDE   EQU   X'04'    Device end
                              00000002  00000001  1672+SCSWUC   EQU   X'02'    Unit check
                              00000001  00000001  1673+SCSWUX   EQU   X'01'    Unit exception

00000009  00                                      1675+SCSWCS   DC    X'00'    Channel Status
                              00000080  00000001  1676+SCSWPCI  EQU   X'80'    Program-controlled interruption
                              00000040  00000001  1677+SCSWIL   EQU   X'40'    Incorrect length
                              00000020  00000001  1678+SCSWPRGM EQU   X'20'    Program check
                              00000010  00000001  1679+SCSWPROT EQU   X'10'    Protection Check
                              00000008  00000001  1680+SCSWCDAT EQU   X'08'    Channel-data check
                              00000004  00000001  1681+SCSWCCTL EQU   X'04'    Channel-control check
                              00000002  00000001  1682+SCSWICTL EQU   X'02'    Interface-control check
                              00000001  00000001  1683+SCSWCHNG EQU   X'01'    Chaining check

0000000A  0000                                    1685+SCSWCNT  DC    H'0'     Residual CCW count
                              0000000C  00000001  1686+SCSWL    EQU   *-SCSW




                                                  1689+*
                                                  1690+* Channel Command Word Format-1 (CCW1)
                                                  1691+*

                                                  1695+CCW1     DSECT
00000000  00                                      1696+CCW1CODE DC    X'00'         Device specific Command Code
00000001  00                                      1697+CCW1FLGS DC    X'00'         Flags (see flag equates)
00000002  0000                                    1698+CCW1CNT  DC    H'0'          Byte Count
00000004  00000000                                1699+CCW1ADDR DC    A(0)          Data Address
                              00000008  00000001  1700+CCW1L    EQU   *-CCW1 Length of CCW Format 1

                                                  1702+* Chanel Command Word Flags used by both CCW formats 0 and 1
                              00000080  00000001  1703+CCWCD    EQU   X'80'         Chain Data flag
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:43:29  Page    43

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                              00000040  00000001  1704+CCWCC    EQU   X'40'         Command Chain flag
                              00000020  00000001  1705+CCWSLI   EQU   X'20'         Suppress Length Indication flag
                              00000010  00000001  1706+CCWSKIP  EQU   X'10'         Suprress data transfer flag (skip)
                              00000008  00000001  1707+CCWPCI   EQU   X'08'         Causes an intermediate interruption (programmed control)
                              00000004  00000001  1708+CCWIDA   EQU   X'04'         Use Indirect Data Addressing
                              00000002  00000001  1709+CCWSUSP  EQU   X'02'         Cause suspension before executing this command word




                                                  1712+*
                                                  1713+* Interruption Response Block (IRB)
                                                  1714+*

                                                  1718+IRB      DSECT Interruption          Response Block
00000000  00000000 00000000                       1719+IRBSCSW  DC    XL12'00' Words 0-2 - Subchannel Status Word (Defined by DSECT SCSW)
00000008  00000000
0000000C  00000000 00000000                       1720+IRBESW   DC    XL20'00' Words 3-7 - Extended Status Word
00000014  00000000 00000000
0000001C  00000000
00000020  00000000 00000000                       1721+IRBECW   DC    XL32'00' Words 8-15 - Extended Control Word
00000028  00000000 00000000
00000030  00000000 00000000
00000038  00000000 00000000
                              00000040  00000001  1722+IRBL     EQU   *-IRB    IRB Length
00000040  00000000 00000000                       1723+IRBEMW   DC    XL32'00' Words 16-23 - Extended Measurement Word
00000048  00000000 00000000
00000050  00000000 00000000
00000058  00000000 00000000
                              00000060  00000001  1724+IRBXL    EQU   *-IRB    Extended IRB Length




                                                  1727+*
                                                  1728+* Subchannel Information Block (SCHIB)
                                                  1729+*

                                                  1733+SCHIB    DSECT Subchannel          Information Block
                                                  1734+* Fields marked RW may be changed by MSCH.  IN indicates installed value supplied
00000000                                          1735+SCHPMCW  DC    0XL28'00'  Words 0-6 - Path-Management-Control Word
00000000  00000000                                1736+PMCWIP   DC    F'0'   RW  Word 0, bits 0-31 - Interruption Parameter
00000004  00                                      1737+PMCW1_0  DC    X'00'      Word 1, bits 0-7
                              00000038  00000001  1738+PMCWISCM EQU   X'38'  RW  Interruption Subclass Code Mask

00000005  00                                      1740+PMCW1_8  DC    X'00'      Word 1, bits 8-15
                              00000080  00000001  1741+PMCWE    EQU   X'80'  RW  Word 1, bit 8 - Subchannel Enabled
                              00000060  00000001  1742+PMCWLM   EQU   X'60'  RW  Word 1, bits 9,10 - Limit-Mode Mask
                              00000020  00000001  1743+PMCWLMG  EQU   X'20'  RW  Word 1, bit 9 - Address must be GE to limit
                              00000040  00000001  1744+PMCWLML  EQU   X'40'  RW  Word 1, bit 10 - Address must be less than the limit
                              00000018  00000001  1745+PMCWMM   EQU   X'18'  RW  Word 1, bits 11,12 - Measurement Mode Mask
                              00000010  00000001  1746+PMCWMME  EQU   X'10'  RW  Word 1, bit 11 - Measurement Block Update Enabled
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:43:29  Page    44

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                              00000008  00000001  1747+PMCWMMC  EQU   X'08'  RW  Word 1, bit 12 - Device Connect Time Measurement Enabled
                              00000004  00000001  1748+PMCWM    EQU   X'04'  RW  Word 1, bit 13 - Multipath Mode Enabled
                              00000002  00000001  1749+PMCWT    EQU   X'02'  IN  Word 1, bit 14 - Timing facility availability
                              00000001  00000001  1750+PMCWV    EQU   X'01'  IN  Word 1, bit 15 - Device number valid

00000006  0000                                    1752+PMCWDNUM DC    H'0'   IN  Word 1, bits 16-31 - Device Number

00000008  00                                      1754+PMCWLPM  DC    X'00'  RW  Word 2, bits 0-7   - Logical Path Mask
00000009  00                                      1755+PMCWPNOM DC    X'00'  RW  Word 2, bits 8-15  - Logical Path Not Operational Mask
0000000A  00                                      1756+PMCWLPUM DC    X'00'  IN  Word 2, bits 16-23 - Logical Path Used Mask
0000000B  00                                      1757+PMCWPIM  DC    X'00'  IN  Word 2, bits 24-31 - Path-Installed Mask
0000000C  0000                                    1758+PMCWMBI  DC    H'0'   RW  Word 3, bits 0-15  - Measurement Block Index
0000000E  00                                      1759+PMCWPOM  DC    X'00'  RW  Word 3, bits 16-23 - Path-Operational Mask
0000000F  00                                      1760+PMCWPAM  DC    X'00'  IN  Word 3, bits 24-31 - Path-Available Mask
00000010  00                                      1761+PMCWCHP0 DC    X'00'  IN  Word 3, bits 0-7   - Channel Path Identifier 0
00000011  00                                      1762+PMCWCHP1 DC    X'00'  IN  Word 3, bits 8-15  - Channel Path Identifier 1
00000012  00                                      1763+PMCWCHP2 DC    X'00'  IN  Word 3, bits 16-23 - Channel Path Identifier 2
00000013  00                                      1764+PMCWCHP3 DC    X'00'  IN  Word 3, bits 24-31 - Channel Path Identifier 3
00000014  00                                      1765+PMCWCHP4 DC    X'00'  IN  Word 4, bits 0-7   - Channel Path Identifier 4
00000015  00                                      1766+PMCWCHP5 DC    X'00'  IN  Word 4, bits 8-15  - Channel Path Identifier 5
00000016  00                                      1767+PMCWCHP6 DC    X'00'  IN  Word 4, bits 16-23 - Channel Path Identifier 6
00000017  00                                      1768+PMCWCHP7 DC    X'00'  IN  Word 4, bits 24-31 - Channel Path Identifier 7
00000018                                          1769+PMCWRES1 DC    0XL4'00'   Word 6, bits 0-31  - reserved or pre-z systems
00000018  000000                                  1770+PMCWRES2 DC    XL3'00'    Word 6, bits 0-23  - reserved on z systems
0000001B  00                                      1771+PMCWEXC  DC    X'00'      Word 6, bits 24-28 - reserved
                              00000004  00000001  1772+PMCWB    EQU   X'04'  RW  Word 6, bit 29     - Measurement Block Format Control
                              00000002  00000001  1773+PMCWX    EQU   X'02'  RW  Word 6, bit 30     - Extended Measurement Word Mode Enable
                              00000001  00000001  1774+PMCWS    EQU   X'01'  RW  Word 6, bit 31     - Concurrent Sense Enable

0000001C  00000000 00000000                       1776+SCHSCSW  DC    XL12'00'   Words 7-9 - Subchannel Status Word (See DSECT SCSW)
00000024  00000000
00000028                                          1777+SCHMDA3  DC    0XL12'00'  Words 10-12 - Model Dependent Area on pre-z systems
00000028  00000000 00000000                       1778+SCHMBA   DC    AD(0)  RW  Words 10,11 - Measurement Block Address
00000030  00000000                                1779+SCHMDA1  DC    XL4'00'    Word 12 - Model Dependent Area on z systems
                              00000034  00000001  1780+SCHIBL   EQU   *-SCHIB Length of SCHIB




                                                  1783 *
                                                  1784 * Hardware and Software Assigned Storage Locations
                                                  1785 *

                                                  1787 * This DSECT allows symbolic access to these locations.  The DSECT created is
                                                  1788 * named ASA.  Addressing is established by: USING  ASA,0
                                                  1789 * In this context, general register 0 is an assembler artifact.  Instructions
                                                  1790 * that have R0 as a base register never actually use it for address generation.

                                                  1792 ASA      BLSASA
                                                  1794+ASA      DSECT
                              00000000  00000001  1795+ASBEGIN  EQU   *                   Start of absolute/real assigned storage areas
00000000  00000000 00000000                       1796+IPLPSW   DC    FD'0'        000 A  Initial Program Load Program Status Word
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:43:29  Page    45

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00000008  00000000 00000000                       1797+IPLCCW1  DC    FD'0'        008 A  Initial Program Load first Channel Command Word
00000010  00000000 00000000                       1798+IPLCCW2  DC    FD'0'        010 A  Initial program Load second Channel Command Word
                                                  1799+* RESTART RELATED PROGRAM STATUS WORDS
00000018                      00000018  00000000  1800+         ORG   ASBEGIN
00000000  00000000 00000000                       1801+RSTNPSW  DC    FD'0'        000 R  Restart New PSW
00000008  00000000 00000000                       1802+RSTOPSW  DC    FD'0'        008 R  Restart Old PSW
00000010  00000000 00000000                       1803+UA0      DC    FD'0'        010 R  Unassigned Area 0
                                                  1804+* INTERRUPTION OLD PROGRAM STATUS WORD SAVE AREAS
00000018  00000000 00000000                       1805+EXTOPSW  DC    FD'0'        018 R  External Interrupt Old PSW
00000020  00000000 00000000                       1806+SVCOPSW  DC    FD'0'        020 R  Supervisor Call Old PSW
00000028  00000000 00000000                       1807+PGMOPSW  DC    FD'0'        028 R  Program Old PSW
00000030  00000000 00000000                       1808+MCKOPSW  DC    FD'0'        030 R  Machine Check Old PSW
00000038  00000000 00000000                       1809+IOOPSW   DC    FD'0'        038 R  Input/Output Old PSW
                                                  1810+* System/360 or System/370 Basic Control Mode INTERRUPTION INFORMATION
00000040                      00000040  0000001A  1811+         ORG   EXTOPSW+2
0000001A  0000                                    1812+BCEXTCOD DC    H'0'         01A R  External Interuption Code
0000001C                      0000001C  00000022  1813+         ORG   SVCOPSW+2
00000022  0000                                    1814+BCSVCCOD DC    H'00'        022 R  Supervisor Call Interruption Code
00000024                      00000024  0000002A  1815+         ORG   PGMOPSW+2
0000002A  0000                                    1816+BCPGMCOD DC    H'0'         02A R  Program Interruption Code
0000002C                      0000002C  00000032  1817+         ORG   MCKOPSW+2
00000032  0000                                    1818+BCMCKCOD DC    H'0'         032 R  Machine Check Interruption Code
00000034                      00000034  0000003A  1819+         ORG   IOOPSW+2
0000003A  0000                                    1820+BCIOCOD  DC    H'0'         03A R  Input/Output Interruption Code (Device CCUU)
0000003C                      0000003C  00000040  1821+         ORG   *+4
                                                  1822+* CHANNEL-BASED INPUT/OUTPUT INTERRUPT RELATED
00000040  00000000 00000000                       1823+CSW      DC    FD'0'        040 R  Channel Status Word
00000048                                          1824+CAW      DC    0F'0'        048 R  Channel Address Word
00000048  00                                      1825+CAWKEY   DC    X'00'        048 R  Channel Storage Key (bits 0-3)
                              00000008  00000001  1826+CAWSUSP  EQU   X'08'        048 R  Suspend Control (bit 4)
00000049  000000                                  1827+CAWADDR  DC    AL3(0)       049 R  Channel Command Address
0000004C  00000000                                1828+UA1      DC    F'0'         04C R  Unassigend Area 1
                                                  1829+* MISCELANEOUS AREAS
00000050  00000000                                1830+TIMER    DC    F'0'         050 R  System/360 and System/370 Interval Timer
00000054  00000000                                1831+TTDES    DC    F'0'         054 R  System/370 Trace-Table-Designation
                                                  1832+* INTERRUPTION NEW PROGRAM STATUS WORD AREAS
00000058  00000000 00000000                       1833+EXTNPSW  DC    FD'0'        058 R  External New PSW
00000060  00000000 00000000                       1834+SVCNPSW  DC    FD'0'        060 R  Supervisor Call New PSW
00000068  00000000 00000000                       1835+PGMNPSW  DC    FD'0'        068 R  Program New PSW
00000070  00000000 00000000                       1836+MCKNPSW  DC    FD'0'        070 R  Machine Check New PSW
00000078  00000000 00000000                       1837+IONPSW   DC    FD'0'        078 R  Input/Output New PSW
                                                  1838+* System/360 Diagnostic Scanout Area
00000080                                          1839+SCANOUT  DS    0X           080 A  System/360 Diagnostic Scanout Area
                              00000000  00000001  1840+SCANOUTL EQU   *-SCANOUT           System/360 Diagnostic Scanout Area Length
                                                  1841+* EXTERNAL INTERRUPTION INFORMATION
00000080                      00000080  00000080  1842+         ORG   ASBEGIN+X'80'
00000080  00000000                                1843+EXTIPARM DC    F'0'         080 R  External-interruption Parameter
00000084  0000                                    1844+EXTCPUAD DC    H'0'         084 R  External-interruption CPU Address
00000086  0000                                    1845+EXTICODE DC    H'0'         086 R  External-interruption Code
                                                  1846+* SUPERVISOR CALL INTERRUPTION INFORMATION
00000088                                          1847+SVCIID   DC    0F'0'        088 R  Supervisor-Call Interuption Identification
00000088  00                                      1848+         DC    X'00'        088 R  not-used - zeros stored
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:43:29  Page    46

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00000089  00                                      1849+SVCIILC  DC    X'00'        089 R  Supervisor-Call instruction length code
                              0000000C  00000001  1850+SVCIILCM EQU   B'00001100'         Supervisor-Call ILC mask, zeros stored in other bits
0000008A  0000                                    1851+SVCICODE DC    H'0'         08A R  Supervisor-Call Interruption Code
                                                  1852+* PROGRAM INTERRUPTION INFORMATION
0000008C                                          1853+PGMIID   DC    0F'0'        08C R  Program-interruption identification
0000008C  00                                      1854+         DC    X'00'        08C R  not-used - zeros stored
0000008D  00                                      1855+PGMIILC  DC    X'00'        08D R  Program instruction lengh code
                              0000000C  00000001  1856+PGMIILCM EQU   B'00001100'         Progrtam ILC mask, zeros stored in other bits
0000008E  0000                                    1857+PGMICODE DC    H'0'         08E R  Program Interruption Code
00000090                                          1858+PGMDXC   DC    0F'0'        090 R  Data-Exception Code
00000090  00000000                                1859+PGMTRX   DC    F'0'         090 R  Translation-Exception Identification
00000094                                          1860+MONCLS   DC    0H'0'        094 R  Monitor-Class Number
00000094  00                                      1861+         DC    X'00'        094 R  not-used - zeros stored
00000095  00                                      1862+MONNUMBR DC    X'00'        095 R  Monitor-Class Number stored
00000096  00                                      1863+PERCODE  DC    X'00'        096 R  Program-Event-Recording Code
                              000000F0  00000001  1864+PERCODMK EQU   B'11110000'         Program-Event-Recordind Code mask in bits 0-3
00000097  00                                      1865+         DC    X'00'        097 R  PER Code not used - zeros stored
00000098  00000000                                1866+PERADDR  DC    F'0'         098 R  PER Address
0000009C  00000000                                1867+MONCODE  DC    F'0'         09C R  Monitor Event Code in bytes 1-3, zeros in byte 0
000000A0  00                                      1868+PGMACCID DC    X'00'        0A0 R  Exception accress identification
000000A1  00                                      1869+PERACCID DC    X'00'        0A1 R  PER access identification
000000A2  00                                      1870+MPGACCID DC    X'00'        0A2 R  MOVE PAGE Operand access identification
000000A3                                          1871+SSARCHMD DC    0X'00'       0A3 A  Store Status Architectural Mode Identification
000000A3  00                                      1872+MKARCHMD DC    X'00'        0A3 R  Machine-Check Architectural Mode Identification
000000A4  00000000                                1873+UA2      DC    F'0'         0A4 R  Unused area
                                                  1874+* z/Architecture PROGRAM INTERRUPTION INFORMATION
000000A8  00000000 00000000                       1875+ZPGMTRX  DC    FD'0'        0A8 R  Translation Exception information
000000B0  00000000 00000000                       1876+ZMONCODE DC    FD'0'        0B0 R  Monitor Code
                                                  1877+* System/370 CHANNEL INPUT/OUTPUT INFORMATION
000000B8                      000000B8  000000A8  1878+         ORG   ASBEGIN+X'A8'
000000A8  00000000                                1879+CHANID   DC    F'0'         0A8 R  System/370 STORE CHANNEL ID location
000000AC  00000000                                1880+IOELADDR DC    F'0'         0AC R  System/370 I/O Extended Logout Address
000000B0  00000000                                1881+LCHANLOG DC    F'0'         0B0 R  System/370 Limited Channel Logout Area
000000B4  00000000                                1882+UA3      DC    F'0'         0B4 R  unused by System/370
000000B8  00                                      1883+UA4      DC    X'00'        0B8 R  unused by System/370
000000B9  00                                      1884+MEASUREB DC    X'00'        0B9 R  System/370 Measurement Byte
000000BA  0000                                    1885+IOICODE  DC    H'0'         0BA R  System/370 Input/Output Interruption Device Address
                                                  1886+* CHANNEL SUBSYSTEM INPUT/OUTPUT INFORMATION
000000BC                      000000BC  000000B8  1887+         ORG   ASBEGIN+X'B8'
000000B8  00000000                                1888+IOSSID   DC    F'0'         0B8 R  Channel subsystem-identification word
000000BC  00000000                                1889+IOIPARM  DC    F'0'         0BC R  Channel subsystem I/O Interruption parameter
000000C0  00000000                                1890+IOIID    DC    F'0'         0C0 R  Channel subsystem I/O Interruption Identification
000000C4  00000000                                1891+PCFETO   DC    A(0)         0C4 R  ESA/390 PROGRAM CALL FAST Entry Table Origin
000000C8  00000000                                1892+STFLDATA DC    F'0'         0C8 R  STORE FACILITY LIST storage area
000000CC  00000000 00000000                       1893+UA5      DC    XL8'00'      0CC R  unused area
                                                  1894+* MACHINE-CHECK INTERRUPTION INFORMATION
000000D4  00000000                                1895+MKXSAA   DC    F'0'         0D4 R  Machine-Check Extended Save Area Address
000000D8  00000000 00000000                       1896+MKCPUTIM DC    FD'0'        0D8 R  Machine-Check CPU timer save area
000000E0  00000000 00000000                       1897+MKCLKCMP DC    FD'0'        0E0 R  Machine-Check clock comparator save area
000000E8  00000000                                1898+MKICODE  DC    F'0'         0E8 R  Machine-Check interruption code
000000EC  00000000 00000000                       1899+UA6      DC    XL8'00'      0EC R  unused area
000000F4  00000000                                1900+MKDMGCOD DC    F'0'         0F4 R  Machine-Check external damage code
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:43:29  Page    47

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000000F8                                          1901+ZMKFAILA DC    0FD'0'       0F8 R  Machine-Check failing storage address
000000F8  00000000                                1902+MKFAILA  DC    F'0'         0F8 R  Machine-Check failing storage address
000000FC  00000000                                1903+MKMODEL  DC    F'0'         0FC R  Machine-Check model dependent information
00000100  00000000 00000000                       1904+MKLOGOUT DC    4F'0'        100 R  ESA machine-check fixed logout area
00000108  00000000 00000000
00000110                      00000110  00000100  1905+         ORG   ASBEGIN+X'100'
00000100  00000000 00000000                       1906+ZEMONCTR DC    AD(0)        100 R  Enhanced-Monitor Counter-Array Origin
00000108  00000000                                1907+ZEMONSIZ DC    F'0'         108 R  Enhanced-Monitor Counter-Array Size
0000010C  00000000                                1908+ZEMONCNT DC    F'0'         10C R  Enhanced-Monitor Exception Count
00000110  00000000 00000000                       1909+ZBRKADDR DC    AD(0)        110 R  Breaking-Event Address
00000118  00000000 00000000                       1910+UA7      DC    FD'0'        118 R  unused area
00000120  00000000 00000000                       1911+MKARS    DC    16F'0'       120 R  Machine-Check access register save area
00000128  00000000 00000000
00000130  00000000 00000000
00000138  00000000 00000000
00000140  00000000 00000000
00000148  00000000 00000000
00000150  00000000 00000000
00000158  00000000 00000000
00000160                      00000160  00000100  1912+         ORG   ASBEGIN+X'100'
00000100  00000000 00000000                       1913+MCKLOG   DC    24F'0'       100 R  System/370, 370-XA machine-Check fixed logout area.
00000108  00000000 00000000
00000110  00000000 00000000
00000118  00000000 00000000
00000120  00000000 00000000
00000128  00000000 00000000
00000130  00000000 00000000
00000138  00000000 00000000
00000140  00000000 00000000
00000148  00000000 00000000
00000150  00000000 00000000
00000158  00000000 00000000
00000160  00000000 00000000                       1914+MKFPRS   DC    4D'0'        160 R  Machine-Check floating point register save area
00000168  00000000 00000000
00000170  00000000 00000000
00000178  00000000 00000000
00000180  00000000 00000000                       1915+NKGRS    DC    16F'0'       180 R  Machine-Check general register save area
00000188  00000000 00000000
00000190  00000000 00000000
00000198  00000000 00000000
000001A0  00000000 00000000
000001A8  00000000 00000000
000001B0  00000000 00000000
000001B8  00000000 00000000
000001C0  00000000 00000000                       1916+MKCRS    DC    16F'0'       1C0 R  Machine-Check control register save area
000001C8  00000000 00000000
000001D0  00000000 00000000
000001D8  00000000 00000000
000001E0  00000000 00000000
000001E8  00000000 00000000
000001F0  00000000 00000000
000001F8  00000000 00000000
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:43:29  Page    48

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1917+* STORE/STATUS SAVE AREAS
00000200                      00000200  000000D4  1918+         ORG   ASBEGIN+X'D4'
000000D4  00000000                                1919+SSXSAA   DC    A(0)         0D4 A  Store Status Extended Save Area Address
000000D8  00000000 00000000                       1920+SSCPUTIM DC    FD'0'        0D8 A  CPU Timer save area
000000E0  00000000 00000000                       1921+SSCLKCMP DC    FD'0'        0E0 A  Clock-Comparator save area
000000E8                      000000E8  00000100  1922+         ORG   ASBEGIN+X'100'
00000100  00000000 00000000                       1923+SSPSW    DC    FD'0'        100 A  Program-Status Word save area
00000108  00000000                                1924+SSPREFIX DC    F'0'         108 A  Prefix save area
0000010C  00000000                                1925+SSMODEL  DC    F'0'         10C A  Model-dependent save area
00000110                      00000110  00000120  1926+         ORG   ASBEGIN+X'120'
00000120  00000000 00000000                       1927+SSARS    DC    16F'0'       120 A  Access-register save area
00000128  00000000 00000000
00000130  00000000 00000000
00000138  00000000 00000000
00000140  00000000 00000000
00000148  00000000 00000000
00000150  00000000 00000000
00000158  00000000 00000000
00000160  00000000 00000000                       1928+SSFPRS   DC    4D'0'        160 A  Floating-point register save area
00000168  00000000 00000000
00000170  00000000 00000000
00000178  00000000 00000000
00000180  00000000 00000000                       1929+SSGRS    DC    16F'0'       180 A  General register save area
00000188  00000000 00000000
00000190  00000000 00000000
00000198  00000000 00000000
000001A0  00000000 00000000
000001A8  00000000 00000000
000001B0  00000000 00000000
000001B8  00000000 00000000
000001C0  00000000 00000000                       1930+SSCRS    DC    16F'0'       1C0 A  Control register save area
000001C8  00000000 00000000
000001D0  00000000 00000000
000001D8  00000000 00000000
000001E0  00000000 00000000
000001E8  00000000 00000000
000001F0  00000000 00000000
000001F8  00000000 00000000
                                                  1931+* z/Architecture OLD PROGRAM STATUS WORDS
00000200                      00000200  00000120  1932+         ORG   ASBEGIN+X'120'
00000120  00000000 00000000                       1933+ZRSTOPSW DC    XL16'00'     120 R  Restart Old PSW
00000128  00000000 00000000
00000130  00000000 00000000                       1934+ZEXTOPSW DC    XL16'00'     130 R  External Old PSW
00000138  00000000 00000000
00000140  00000000 00000000                       1935+ZSVCOPSW DC    XL16'00'     140 R  Supervisor-Call Old PSW
00000148  00000000 00000000
00000150  00000000 00000000                       1936+ZPGMOPSW DC    XL16'00'     150 R  Program Old PSW
00000158  00000000 00000000
00000160  00000000 00000000                       1937+ZMCKOPSW DC    XL16'00'     160 R  Machine-Check Old PSW
00000168  00000000 00000000
00000170  00000000 00000000                       1938+ZIOOPSW  DC    XL16'00'     170 R  Input-Output Old PSW
00000178  00000000 00000000
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:43:29  Page    49

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00000180  00000000 00000000                       1939+UA8      DC    XL32'00'     180 R  z/Architecture unused area
00000188  00000000 00000000
00000190  00000000 00000000
00000198  00000000 00000000
                                                  1940+* z/Architecture NEW PROGRAM STATUS WORD AREAS
000001A0  00000000 00000000                       1941+ZRSTNPSW DC    XL16'00'     1A0 R  Restart New PSW
000001A8  00000000 00000000
000001B0  00000000 00000000                       1942+ZEXTNPSW DC    XL16'00'     1B0 R  External New PSW
000001B8  00000000 00000000
000001C0  00000000 00000000                       1943+ZSVCNPSW DC    XL16'00'     1C0 R  Supervisor-Call New PSW
000001C8  00000000 00000000
000001D0  00000000 00000000                       1944+ZPGMNPSW DC    XL16'00'     1D0 R  Program New PSW
000001D8  00000000 00000000
000001E0  00000000 00000000                       1945+ZMCKNPSW DC    XL16'00'     1E0 R  Machine-Check New PSW
000001E8  00000000 00000000
000001F0  00000000 00000000                       1946+ZIONPSW  DC    XL16'00'     1F0 R  Input/Output New PSW
000001F8  00000000 00000000
                              000011C0  00000001  1947+ZSASDISP EQU   X'11C0'   Displacement to save areas defined by ASAZAREA macro
                              00000200  00000001  1948+ASEND    EQU   *                   End of absolute/real assigned storage areas
                              00000200  00000001  1949+ASLENGTH EQU   ASEND-ASBEGIN       Length of absolute/real assigned storage area
                                                  1950+* LOGICAL ADDRESS USAGE
                              0000031B  00000001  1951+CPUID    EQU   *+X'11B'     31B L  System/370 CPU Identity used during DAS tracing
                                                  1953+ASA      DSECT
00000200                      00000200  00000200  1954+         ORG   ASA+X'200'
00000200  00000000 00000000                       1955+LODPARMS DS    CL64     Hercules IPL parameters
00000208  00000000 00000000
00000210  00000000 00000000
00000218  00000000 00000000
00000220  00000000 00000000
00000228  00000000 00000000
00000230  00000000 00000000
00000238  00000000 00000000
                                                  1956+* Addresses reflect location of LOD1 record when placed in its ASA area
                                                  1957+* 000240-00028F.  Fields identified with an asterisk (*) indicate that
                                                  1958+* the boot loader supplies the information during execution.
                              00000240  00000001  1959+LOD1     EQU   *        Start of LOD1 record definition
00000240  00000000                                1960+LOD1REC  DS    CL4      000240 - Record ID 'LOD1' in EBCDIC

00000244  00                                      1962+LOD1DTYP DS    XL1      000244 - IPL Device Type related information
                              00000001  00000001  1963+LOD1OBJ  EQU   B'00000001'   Booted program is in an object deck
                              00000002  00000001  1964+LOD1LENF EQU   B'00000010'   Directed record header contains a length field
                              00000004  00000001  1965+LOD1CARD EQU   B'00000100'   IPL device is a card reader
                              00000008  00000001  1966+LOD1TAPE EQU   B'00001000'   IPL device is a tape drive
                              00000010  00000001  1967+LOD1FBA  EQU   B'00010000'   IPL device is a FBA DASD drive
                              00000020  00000001  1968+LOD1CKD  EQU   B'00100000'   IPL device is a CKD DASD drive
                              00000040  00000001  1969+LOD1ECKD EQU   B'01000000'   IPL device is a ECKD DASD drive

00000245  00                                      1971+LOD1BLFL DS    XL1      000245 - Boot loader flags
                              00000080  00000001  1972+LOD1BLCA EQU   B'10000000'   Change architecture before loading booted program
                              00000040  00000001  1973+LOD1BL64 EQU   B'01000000'   Set 64-bit address mode before entering program
                              00000020  00000001  1974+LOD1BLTR EQU   B'00100000'   Set trap new PSW's before entering program
                              00000010  00000001  1975+LOD1BLF1 EQU   B'00010000'   Use Format-1 CCW's and 31 bit addressing mode
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:43:29  Page    50

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT


00000246  0000                                    1977+LOD1MDLN DS    HL2      000246 - Maximum directed record length in bytes

                                                  1979+* After loading of a booted progrm, these two fields must match.
                                                  1980+* Note: not used when loading an absolute object deck.
00000248  00000000                                1981+LOD1BPLN DS    FL4      000248 - Length of booted program content on medium
0000024C  00000000                                1982+LOD1BPLD DS    FL4    * 00024C - Length of loaded boot program
00000250  00000000                                1983+LOD1ENTR DS    FL4      000250 - Booted program's entry address

00000254  00                                      1985+LOD1CPU  DS    XL1    * 000254 - Boot loader's CPU running architecture
                              00000000  00000001  1986+LOD1CPNA EQU   X'00'         CPU architecture not available
                              00000001  00000001  1987+LOD1360  EQU   X'01'         S/360 in BC mode
                              00000002  00000001  1988+LOD1370B EQU   X'02'         S/370 in BC mode
                              00000003  00000001  1989+LOD1370E EQU   X'03'         S/370 in EC mode
                              00000004  00000001  1990+LOD1380  EQU   X'04'         S/380
                              00000005  00000001  1991+LOD1370X EQU   X'05'         370-XA through ESA/390
                              00000006  00000001  1992+LOE1E370 EQU   X'06'         ESA/370
                              00000007  00000001  1993+LOD1E390 EQU   X'07'         ESA/390
                              00000008  00000001  1994+LOD1S390 EQU   X'08'         ESA/390 on dual z/Arthitecture(R) system
                              00000009  00000001  1995+LOD1ESAZ EQU   X'09'         z/Architecture on a dual z/Architecture system
                              0000000A  00000001  1996+LOD1Z    EQU   X'0A'         z/Architecture only system
                              000000FF  00000001  1997+LOD1CPIN EQU   X'FF'         Invalid CPU operating environment

00000255  00                                      1999+LOD1IO   DS    XL1    * 000255 - Boot loader's I/O architecture and mode
                              00000000  00000001  2000+LOD1IONA EQU   B'00000000'   I/O architecture and mode not available
                              00000010  00000001  2001+LOD1IACH EQU   B'00010000'   I/O architecture is channel based
                              00000020  00000001  2002+LOD1IACS EQU   B'00100000'   I/O architecture is channel subsystem based
                              000000C0  00000001  2003+LOD1IAIN EQU   B'11000000'   I/O architecture is invalid
                              00000001  00000001  2004+LOD1IM24 EQU   B'00000001'   I/O architecture uses CCW Format-0 CCW's
                              00000002  00000001  2005+LOD1IM31 EQU   B'00000010'   I/O architecture uses CCW Format-0 CCW's
                              00000004  00000001  2006+LOD1IM64 EQU   B'00000100'   I/O architecture uses CCW1's plus IDAW-2's.
                              00000008  00000001  2007+LOD1IMIN EQU   B'00001000'   I/O architecture mode is invalid
                              000000C8  00000001  2008+LOD1IOIN EQU   LOD1IAIN+LOD1IMIN  I/O architecture or mode invalid
                              00000011  00000001  2009+LOD1I370 EQU   LOD1IACH+LOD1IM24  S/360 and S/370 I/O
                              00000022  00000001  2010+LOD1IESA EQU   LOD1IACS+LOD1IM31  370-XA through ESA/390 I/O
                              00000024  00000001  2011+LOD1IZ   EQU   LOD1IACS+LOD1IM64  z/Architecture I/O

00000256  00                                      2013+LOD1BLAM DS    XL1    * 000256 - Boot loader's addressing mode when booted
                                                  2014+*                                program is entered
                              00000000  00000001  2015+LOD1AMAN EQU   X'00'         Addressing mode not available
                              00000001  00000001  2016+LOD1AM24 EQU   X'01'         Addressing mode is 24-bits
                              00000002  00000001  2017+LOD1AM31 EQU   X'02'         Addressing mode is 31-bits
                              00000003  00000001  2018+LOD1AM64 EQU   X'03'         Addressing mode is 64-bits
                              000000FF  00000001  2019+LOD1AMIN EQU   X'FF'         Addressing mode is invalid

00000257  00                                      2021+LOD1BLSV DS    XL1    * 000257 - Boot loader's services
                              00000000  00000001  2022+LOD1BLSN EQU   X'00'         Boot loader services are unavailable
                                                  2023+* Meaning of these bits are defined by the boot loader. Not zero implies
                                                  2024+* services are available and LOD1BLST is valid.  When zero, LOD1BLST is
                                                  2025+* not available.

00000258  00000000                                2027+LOD1FSEC DS    FL4      000258 - Directed record FBA DASD starting sector
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 06:43:29  Page    51

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000025C  0000                                    2028+LOD1CCYL DS    HL2      00025C - Directed record CKD DASD starting cylinder
0000025E  0000                                    2029+LOD1CTRK DS    HL2      00025E - Directed record CKD DASD starting track
00000260  00                                      2030+LOD1CREC DS    XL1      000260 - Directed record CKD DASD starting rec
00000261  00                                      2031+LOD1CRTK DS    XL1      000261 - Number of directed records per track
00000262  0000                                    2032+LOD1CMCY DS    HL2      000262 - Maximum CKD DASD cylinder number
00000264  0000                                    2033+LOD1CMTR DS    HL2      000264 - Maximum CKD DASD track number
00000266  0000                                    2034+LOD1DEVN DS    HL2    * 000266 - Device Number of IPL device from CS
00000268  00000000                                2035+LOC1DEVI DS    FL4    * 000268 - I/O command device ID (CUU / subchannel num)
0000026C  00000000                                2036+LOD1IOA  DS    AL4(0)   00026C - Boot loader I/O area starting address
00000270  00000000                                2037+LOD1BLST DS    AL4(0) * 000270 - Boot loader services address.
00000274  00                                      2038+LOD1ARCH DS    XL1    * 000274 - Running architecture level at boot loader entry
00000275  000000                                  2039+LOD1RSV2 DS    XL3      000275 - RESERVED NOT IN USE
00000278  00000000                                2040+LOD1RTN  DS    A(0)   * 000278 - Address returning to service caller

0000027C  00000000 00000000                       2042+LOD1RSRV DS    5FL4     00027C - RESERVED NOT IN USE
00000284  00000000 00000000
0000028C  00000000
                              00000050  00000001  2043+LOD1LEN  EQU   *-LOD1   Length of LOD1 record
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:43:29  Page    52

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  2045          END
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:43:29  Page    53

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

AARI0012            H    00051A       2   293   290
AARX0012            H    00051E       2   295   288   292
AMERROR             I    000694       4   485   433
AP240011            3    000478       8   240   232
AP310011            3    000470       8   239   231
AP640011            U    000460      16   238   230
APDN0011            H    0004EA       2   278   241   242   250   265   268   274
APSP0011            F    0004A8       8   245   229   281
APSS0011            F    0004A0       8   244   228   280
APSZ0011            F    000490       8   243   227   279
ARCHBAD             I    00069C       4   487   298   299   300
ARCHSOK             H    000532       2   302   297
ASA                 4    000000     656  1794  1954   198   560   659   704   820   873  1044  1275
ASAREGN             2    000000     512   153
ASASECT             J    000000     512   153   156   163   173   175
ASBEGIN             U    000000       1  1795  1800  1842  1878  1887  1905  1912  1918  1922  1926  1932  1949
ASEND               U    000200       1  1948  1949
ASLENGTH            U    000200       1  1949
BADDEVT             I    000674       4   477   212
BCEXTCOD            H    00001A       2  1812
BCIOCOD             H    00003A       2  1820
BCMCKCOD            H    000032       2  1818
BCPGMCOD            H    00002A       2  1816
BCSVCCOD            H    000022       2  1814
BLS                 H    0006F8       2   559   220   565
BLS3270             U    000078       1  1505
BLSACT              X    00000B       1  1526  1156  1176  1305
BLSATTN             U    000080       1  1520  1154
BLSBUSY             U    000080       1  1508  1106  1196  1201  1205  1210
BLSCALL             H    000728       2   583   579
BLSCARD             U    000098       1  1501
BLSCH               X    000009       1  1522  1168
BLSCKD              U    000089       1  1499
BLSCON              U    000070       1  1504
BLSDEV              H    000000       2  1487   337   739   835   945
BLSERR              X    00000C       1  1530   745   768   773   959   982   987  1170
BLSFBA              U    000008       1  1498
BLSHDW              F    000004       4  1516   740   946  1090
BLSIOEL             U    000020       1  1537   782  1336  1344
BLSIOT              4    000000      32  1486  1537   333   726   833   900   922  1089  1124  1167  1191  1240  1291
BLSMONE             H    000736       2   595   580
BLSNUM              U    000006       1   621   219
BLSPEOF             U    000080       1  1490   766   980  1187
BLSPR               U    000028       1  1503
BLSPROG             F    00001C       4  1536
BLSPUN              U    000020       1  1502
BLSR                H    00072C       2   587   222   572   581
BLSRDSN             U    000000       1  1527  1176
BLSREAD             U    000004       1  1528  1156  1305
BLSRSV              U    0000F8       1  1495
BLSRSV2             X    00000D       3  1532
BLSSCLS             U    000038       1  1492
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:43:29  Page    54

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

BLSSNS              X    00000A       1  1524
BLSSNSP             U    000001       1  1514
BLSSW               F    000010       4  1534  1138  1139
BLSTAPE             U    000090       1  1500
BLSTAT              U    000040       1  1511
BLSTATO             U    000020       1  1512  1157  1178  1292  1298
BLSTATS             U    000002       1  1513  1140  1147
BLSTATUS            X    000003       1  1507  1106  1140  1147  1157  1178  1196  1201  1205  1210  1292  1298
BLSTYP              X    000002       1  1489   741   766   771   900   947   980   985  1101  1152  1187
BLSUE               U    000001       1  1521
BLSUNCH             X    000008       2  1518  1139
BLSUNIT             X    000008       1  1519  1154  1174  1189  1241
BLSUNSOL            U    000040       1  1491   771   985  1101  1152
CALLERA             A    000B70       4  1329
CALLSRV             H    000710       2   574   570
CAW                 F    000048       4  1824
CAWADDR             R    000049       3  1827
CAWKEY              X    000048       1  1825
CAWSUSP             U    000008       1  1826
CC                  U    000040       1   189   499   500
CCW1                4    000000       8  1695  1700
CCW1ADDR            A    000004       4  1699
CCW1CNT             H    000002       2  1698
CCW1CODE            X    000000       1  1696
CCW1FLGS            X    000001       1  1697
CCW1L               U    000008       1  1700
CCWCC               U    000040       1  1704
CCWCD               U    000080       1  1703
CCWIDA              U    000004       1  1708
CCWPCI              U    000008       1  1707
CCWSKIP             U    000010       1  1706
CCWSLI              U    000020       1  1705
CCWSUSP             U    000002       1  1709
CHANID              F    0000A8       4  1879
CHSSBLK             F    0001F8       4  1388   730
CKSIZE              I    000618       6   426   419
CPUID               U    00031B       1  1951
CSBLOCKS            A    000B8C       4  1358   731   923  1130
CSSAVED             H    0007C0       2   736   734
CSSIRB              U    000002       1  1355  1136
CSSSCHIB            U    000001       1  1354   737   924
CSSTRUCT            X    000B89       1  1353   737   924  1136
CSW                 F    000040       8  1823
CUMERROR            I    00068C       4   483   427
DEFN_EXT            U    000063       1   184   499
DESTRT              I    000684       4   481   412
DEVBUSY             I    00065C       4   469
DEVCSW              I    000664       4   471   397
DEVNOAVL            I    000654       4   467   398
DEVUNKN             I    00066C       4   473
DIE                 3    0006F0       8   534   467   468   469   470   471   472   473   474   477   478   479   480   481   482
                                                483   484   485   486   487   488
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:43:29  Page    55

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

DMEMORY             4    000000     984  1369   311   387   662   707   721   730   823   876  1047  1278
DONE                3    0006E8       8   532
ENADADD             H    0008A2       2   911   896
ENADEV              U    000003       1   613   870
ENADGOOD            H    0008EE       2   944   935
ENADNOAV            H    0008E6       2   940   930   954
ENADOK              H    000896       2   906   901
ENADRTN             I    00093C       4  1001   904   909   918   942
ENADSAVE            F    000120       4  1382   876
ENADSIWB            H    000946       2  1008   925
ENADSSPB            H    000934       2   995
ENADTEST            H    0008BC       2   920   916
ENAQIOT             Y    00094A       2  1009   890   892   899
ENASRCH             H    0008CC       2   927   939
ENDLSEC             U    0006D4       4   514   378
EOBL                D    000B90       8  1362   311   387   662   707   721   730   823   876  1047  1278  1328
EOBLA               A    000B6C       4  1328
ERRU0044            I    0007E4       4   771   767
ERRU0052            I    000928       4   985   981
ERRX0044            H    0007F0       2   779   772
ERRX0052            H    000934       2   993   986
EXCP                U    000004       1   616   455  1041
EXCP00RC            H    000AAC       2  1195  1164  1188
EXCP04              Y    000644       2   455   391
EXCP04RC            H    000AB6       2  1200  1190
EXCP08RC            H    000AC2       2  1204  1102  1169  1172  1179
EXCP12RC            H    000ACE       2  1209  1094  1097
EXCP16RC            H    000ADA       2  1214  1064  1066  1068  1070  1072  1074  1086
EXCPANAL            H    000A34       2  1146
EXCPCONT            3    000AF0       8  1233  1112
EXCPDERR            I    000B06       4  1241  1171  1185
EXCPDONE            U    0009F0       1  1114  1233
EXCPDOWT            H    0009E6       2  1111  1084  1093  1103  1160  1186
EXCPIRB             H    000A20       2  1135  1132
EXCPONE             H    000B04       2  1236
EXCPORB             X    000648      12   458   332
EXCPRCAL            I    000ADE       4  1225  1198  1203  1207  1212
EXCPSAVE            F    000168       4  1384  1047
EXCPSOL             H    000A64       2  1166  1153  1155
EXCPSOLE            H    000A90       2  1181  1175
EXCPSPR             H    000A0A       2  1126  1121
EXCPSRS             H    000A0E       2  1128  1123
EXCPTRAP            3    000AF8       8  1234  1115
EXCPWAIT            3    000AE8       8  1232  1113
EXCPZERO            F    000B00       4  1235  1085
EXTCPUAD            H    000084       2  1844
EXTENT              X    0006C8       4   510   515   499
EXTENTL             U    000010       1   515   499
EXTICODE            H    000086       2  1845
EXTIPARM            F    000080       4  1843
EXTNPSW             F    000058       8  1833
EXTOPSW             F    000018       8  1805  1811
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:43:29  Page    56

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

FBACCW1             W    0006B0       8   499   464
FBACCW2             W    0006B8       8   500
FBACCW3             W    0006C0       8   501   373   382   383
FRSTLSEC            U    0006D0       4   512
FRSTPSEC            U    0006CC       4   511   384   421   422
HWM                 U    0003D8       1  1400   387
IMAGE               1    000000    2448     0
INIT01              Y    000634       2   443   322   331
INTMASK             X    000814       4   800   728
INTPRI              U    000001       1  1349  1127
INTSEC              U    000002       1  1350  1122
INTSRC              X    000B88       1  1348  1122  1127
IOELADDR            F    0000AC       4  1880
IOIA0042            H    000790       2   720
IOICODE             H    0000BA       2  1885   362
IOIID               F    0000C0       4  1890
IOINIT              U    000001       1   607   443   701
IOINRTN             I    00080A       4   792   787
IOINRTN0            I    000808       2   788   785
IOINRTN4            I    000800       4   786
IOINSAVE            F    000090       4  1378   707
IOIPARM             F    0000BC       4  1889  1119
IONPSW              F    000078       8  1837  1112  1115
IOOPSW              F    000038       8  1809  1819
IOSSID              F    0000B8       4  1888   732  1129
IOTBL               F    0002F8       4  1396   721
IOTBLBA             A    000B7C       4  1343   722   832  1063  1297
IOTBLE              U    0003D8       1  1398  1400
IOTBLEA             A    000B84       4  1345   784   912   998  1065
IOTBLI              A    000B80       4  1344   914
IOTDEVS             U    000008       1  1397  1336
IOTMAX              A    000B78       4  1336   723   725   915
IPLCCW1             F    000008       8  1797
IPLCCW2             F    000010       8  1798
IPLDEV              X    0006A8       2   494   362
IPLDEVTA            A    000B74       4  1331
IPLFND              I    000580       6   362   344
IPLPSW              F    000000       8  1796
IRB                 4    000000      96  1718  1722  1724  1137
IRBECW              X    000020      32  1721
IRBEMW              X    000040      32  1723
IRBESW              X    00000C      20  1720
IRBL                U    000040       1  1722
IRBSCSW             X    000000      12  1719  1138
IRBXL               U    000060       1  1724
IS240011            H    0004D6       2   271   240
IS310011            H    0004B8       2   252   239
IS640011            H    0004B0       2   247   238
LCHANLOG            F    0000B0       4  1881
LOADER              2    000400    1936   195
LOC1DEVI            U    000268       4  2035
LOCATE              X    0006D8       1   519   523   500
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:43:29  Page    57

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

LOCATEL             U    000008       1   523   500
LOCSECS             U    0006DA       2   521   375
LOC_DATA            U    000043       1   185   500
LOD1                U    000240       1  1959  2043
LOD1360             U    000001       1  1987
LOD1370B            U    000002       1  1988
LOD1370E            U    000003       1  1989
LOD1370X            U    000005       1  1991
LOD1380             U    000004       1  1990
LOD1AM24            U    000001       1  2016
LOD1AM31            U    000002       1  2017
LOD1AM64            U    000003       1  2018
LOD1AMAN            U    000000       1  2015
LOD1AMIN            U    0000FF       1  2019
LOD1ARCH            X    000274       1  2038   282   287   289
LOD1BL64            U    000040       1  1973
LOD1BLAM            X    000256       1  2013   217
LOD1BLCA            U    000080       1  1972
LOD1BLF1            U    000010       1  1975
LOD1BLFL            X    000245       1  1971
LOD1BLSN            U    000000       1  2022
LOD1BLST            R    000270       4  2037   221   314   323   341   392   893
LOD1BLSV            X    000257       1  2021   219   569
LOD1BLTR            U    000020       1  1974
LOD1BPLD            U    00024C       4  1982   414   415   426
LOD1BPLN            U    000248       4  1981   426
LOD1CARD            U    000004       1  1965
LOD1CCYL            U    00025C       2  2028
LOD1CKD             U    000020       1  1968
LOD1CMCY            U    000262       2  2032
LOD1CMTR            U    000264       2  2033
LOD1CPIN            U    0000FF       1  1997
LOD1CPNA            U    000000       1  1986
LOD1CPU             X    000254       1  1985   218
LOD1CREC            X    000260       1  2030
LOD1CRTK            X    000261       1  2031
LOD1CTRK            U    00025E       2  2029
LOD1DEVN            U    000266       2  2034
LOD1DTYP            X    000244       1  1962   211
LOD1E390            U    000007       1  1993
LOD1ECKD            U    000040       1  1969
LOD1ENTR            U    000250       4  1983   432   434
LOD1ESAZ            U    000009       1  1995
LOD1FBA             U    000010       1  1967   211
LOD1FSEC            U    000258       4  2027   384
LOD1I370            U    000011       1  2009
LOD1IACH            U    000010       1  2001  2009
LOD1IACS            U    000020       1  2002  2010  2011
LOD1IAIN            U    0000C0       1  2003  2008
LOD1IESA            U    000022       1  2010
LOD1IM24            U    000001       1  2004  2009
LOD1IM31            U    000002       1  2005  2010
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:43:29  Page    58

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

LOD1IM64            U    000004       1  2006  2011
LOD1IMIN            U    000008       1  2007  2008
LOD1IO              X    000255       1  1999   216
LOD1IOA             R    00026C       4  2036   380
LOD1IOIN            U    0000C8       1  2008
LOD1IONA            U    000000       1  2000
LOD1IZ              U    000024       1  2011
LOD1LEN             U    000050       1  2043
LOD1LENF            U    000002       1  1964   211
LOD1MDLN            U    000246       2  1977   371
LOD1OBJ             U    000001       1  1963
LOD1REC             C    000240       4  1960
LOD1RSRV            U    00027C       4  2042
LOD1RSV2            X    000275       3  2039
LOD1RTN             A    000278       4  2040   223   678   794   848  1003  1227  1317
LOD1S390            U    000008       1  1994
LOD1TAPE            U    000008       1  1966
LOD1Z               U    00000A       1  1996
LODPARMS            C    000200      64  1955   199
LODSECT             J    000400    1936   195
LODSTART            I    000400       4   199   174
LOE1E370            U    000006       1  1992
MCKLOG              F    000100       4  1913
MCKNPSW             F    000070       8  1836
MCKOPSW             F    000030       8  1808  1817
MEASUREB            X    0000B9       1  1884
MKARCHMD            X    0000A3       1  1872
MKARS               F    000120       4  1911
MKCLKCMP            F    0000E0       8  1897
MKCPUTIM            F    0000D8       8  1896
MKCRS               F    0001C0       4  1916
MKDMGCOD            F    0000F4       4  1900
MKFAILA             F    0000F8       4  1902
MKFPRS              D    000160       8  1914
MKICODE             F    0000E8       4  1898
MKLOGOUT            F    000100       4  1904
MKMODEL             F    0000FC       4  1903
MKXSAA              F    0000D4       4  1895
MONCLS              H    000094       2  1860
MONCODE             F    00009C       4  1867
MONNUMBR            X    000095       1  1862
MOVEREC             H    0005E2       2   402   395
MPGACCID            X    0000A2       1  1870
NKGRS               F    000180       4  1915
NOOP                U    000000       1   604   439   656
NOOPSAVE            F    000048       4  1376   662
NOP                 U    000003       1   183
ONE                 F    0006A4       4   491
ORB                 4    000000      32  1577  1607  1615
ORB1_0              X    000004       1  1580
ORB1_8              X    000005       1  1587
ORBA                U    000010       1  1591
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:43:29  Page    59

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

ORBB                U    000004       1  1593
ORBC                U    000004       1  1583
ORBCCW              A    000008       4  1605
ORBCSS              X    00000C       1  1609
ORBCU               X    00000E       1  1612
ORBD                U    000040       1  1600
ORBF                U    000080       1  1588
ORBH                U    000002       1  1594
ORBI                U    000020       1  1590
ORBKEYM             U    0000F0       1  1581
ORBL                U    000080       1  1598
ORBLEN              U    00000C       1  1607
ORBLPM              X    000006       1  1596
ORBM                U    000002       1  1584
ORBP                U    000040       1  1589
ORBPARM             F    000000       4  1578
ORBPGM              X    00000E       1  1611
ORBRSV25            U    00007E       1  1602
ORBRSV26            U    00003E       1  1601
ORBRSV3             U    00007F       1  1599
ORBRSV4             U    000080       1  1606
ORBRSV5             X    00000D       1  1610
ORBRSV6             X    00000F       1  1613
ORBRSV7             X    000010      16  1614
ORBS                U    000008       1  1582
ORBT                U    000001       1  1595
ORBU                U    000008       1  1592
ORBX                U    000001       1  1603
ORBXLEN             U    000020       1  1615
ORBY                U    000001       1  1585
ORRB1_24            X    000007       1  1597
OVRWRITE            I    00067C       4   479   405
PCFETO              A    0000C4       4  1891
PDEVENDM            U    00000C       1  1246  1080
PDEVENDS            X    000B0A       1  1245  1079  1080  1184
PENDSAVE            F    0001B0       4  1386  1278
PERACCID            X    0000A1       1  1869
PERADDR             F    000098       4  1866
PERCODE             X    000096       1  1863
PERCODMK            U    0000F0       1  1864
PGMACCID            X    0000A0       1  1868
PGMDXC              F    000090       4  1858
PGMICODE            H    00008E       2  1857
PGMIID              F    00008C       4  1853
PGMIILC             X    00008D       1  1855
PGMIILCM            U    00000C       1  1856
PGMNPSW             F    000068       8  1835
PGMOPSW             F    000028       8  1807  1815
PGMRS               3    0006E0       8   527   207
PGMTRX              F    000090       4  1859
PMCW1_0             X    000004       1  1737   950   951
PMCW1_8             X    000005       1  1740   948
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:43:29  Page    60

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

PMCWB               U    000004       1  1772
PMCWCHP0            X    000010       1  1761
PMCWCHP1            X    000011       1  1762
PMCWCHP2            X    000012       1  1763
PMCWCHP3            X    000013       1  1764
PMCWCHP4            X    000014       1  1765
PMCWCHP5            X    000015       1  1766
PMCWCHP6            X    000016       1  1767
PMCWCHP7            X    000017       1  1768
PMCWDNUM            H    000006       2  1752   739   934   945
PMCWE               U    000080       1  1741   948
PMCWEXC             X    00001B       1  1771
PMCWIP              F    000000       4  1736   949
PMCWISCM            U    000038       1  1738   951
PMCWLM              U    000060       1  1742
PMCWLMG             U    000020       1  1743
PMCWLML             U    000040       1  1744
PMCWLPM             X    000008       1  1754
PMCWLPUM            X    00000A       1  1756
PMCWM               U    000004       1  1748
PMCWMBI             H    00000C       2  1758
PMCWMM              U    000018       1  1745
PMCWMMC             U    000008       1  1747
PMCWMME             U    000010       1  1746
PMCWPAM             X    00000F       1  1760
PMCWPIM             X    00000B       1  1757
PMCWPNOM            X    000009       1  1755
PMCWPOM             X    00000E       1  1759
PMCWRES1            X    000018       4  1769
PMCWRES2            X    000018       3  1770
PMCWS               U    000001       1  1774
PMCWT               U    000002       1  1749
PMCWV               U    000001       1  1750
PMCWX               U    000002       1  1773
PNDDEV              I    000B5C       4  1311  1308
PNDING              U    000005       1   619  1272
PNDINGD             H    000B48       2  1304  1293  1299
PNDLOOP             I    000B38       4  1298  1300
PNDRTN              I    000B60       4  1315  1294  1302
PNDSNS              I    000B58       4  1309  1306
PNDSRCH             H    000B34       2  1296  1290
QIOFOUND            H    000844       2   841   836
QIORETRN            I    000848       4   846
QIOT                U    000002       1   610   447   817  1009
QIOTLOOP            H    000830       2   834   837
QIOTSAVE            F    0000D8       4  1380   823
QUERY02             Y    00063C       2   447   337   340
READ                U    000042       1   186   501
READLOOP            H    0005BE       2   390   423
RSTNPSW             F    000000       8  1801   207
RSTOPSW             F    000008       8  1802
SAVEA               4    000000      72  1544  1563   562   589   661   665   669   675   706   710   714   791   822   826   830
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:43:29  Page    61

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

                                                845   875   879   883  1000  1046  1050  1054  1224  1277  1281  1285  1314
SAVEAREA            F    000000       4  1374   311
SAVEBCK             A    000004       4  1546   666   676   711   792   827   846   880  1001  1051  1225  1282  1315
SAVEFWD             A    000008       4  1547   663   708   824   877  1048  1279
SAVELEN             U    000048       1  1563
SAVER0              F    000014       4  1550
SAVER1              F    000018       4  1551
SAVER10             F    00003C       4  1560
SAVER11             F    000040       4  1561
SAVER12             F    000044       4  1562
SAVER14             A    00000C       4  1548   563   591
SAVER15             A    000010       4  1549   590
SAVER2              F    00001C       4  1552
SAVER3              F    000020       4  1553
SAVER4              F    000024       4  1554
SAVER5              F    000028       4  1555
SAVER6              F    00002C       4  1556
SAVER7              F    000030       4  1557
SAVER8              F    000034       4  1558
SAVER9              F    000038       4  1559
SAVERSV             F    000000       4  1545
SCANOUT             X    000080       1  1839  1840
SCANOUTL            U    000000       1  1840
SCHIB               4    000000      52  1733  1780   738   933
SCHIBL              U    000034       1  1780
SCHMBA              A    000028       8  1778
SCHMDA1             X    000030       4  1779
SCHMDA3             X    000028      12  1777
SCHPMCW             X    000000      28  1735
SCHSCSW             X    00001C      12  1776
SCSW                4    000000      12  1624  1686  1139
SCSW0CC             U    000004       1  1640
SCSW1               X    000002       1  1644
SCSW2               X    000003       1  1653
SCSWACP             U    000001       1  1652
SCSWADA             U    000040       1  1655
SCSWAHP             U    000002       1  1651
SCSWALKC            U    000010       1  1638
SCSWARP             U    000008       1  1649
SCSWASA             U    000080       1  1654
SCSWASP             U    000004       1  1650
SCSWASUS            U    000020       1  1656
SCSWATTN            U    000080       1  1666
SCSWBUSY            U    000010       1  1669
SCSWCCTL            U    000004       1  1681
SCSWCCW             A    000004       4  1663
SCSWCCWF            U    000080       1  1635
SCSWCCWP            U    000040       1  1636
SCSWCDAT            U    000008       1  1680
SCSWCE              U    000008       1  1670
SCSWCHNG            U    000001       1  1683
SCSWCNT             H    00000A       2  1685
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:43:29  Page    62

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

SCSWCS              X    000009       1  1675
SCSWCTLS            X    000001       1  1634
SCSWCUE             U    000020       1  1668
SCSWDCC0            U    000000       1  1630
SCSWDCC1            U    000001       1  1631
SCSWDCC3            U    000003       1  1632
SCSWDCCM            U    000003       1  1629
SCSWDE              U    000004       1  1671
SCSWECWC            U    000002       1  1641
SCSWESWF            U    000004       1  1628
SCSWFC              U    000010       1  1648
SCSWFH              U    000020       1  1647
SCSWFLAG            X    000000       1  1625
SCSWFM              U    000070       1  1645
SCSWFS              U    000040       1  1646
SCSWICTL            U    000002       1  1682
SCSWIL              U    000040       1  1677
SCSWISIC            U    000020       1  1637
SCSWKEYM            U    0000F0       1  1626
SCSWL               U    00000C       1  1686
SCSWPCI             U    000080       1  1676
SCSWPNOP            U    000001       1  1642
SCSWPRGM            U    000020       1  1678
SCSWPROT            U    000010       1  1679
SCSWSAS             U    000010       1  1657
SCSWSINT            U    000008       1  1658
SCSWSM              U    000040       1  1667
SCSWSPEN            U    000001       1  1661
SCSWSPRI            U    000004       1  1659
SCSWSSEC            U    000002       1  1660
SCSWSSIC            U    000008       1  1639
SCSWSUSC            U    000008       1  1627
SCSWUC              U    000002       1  1672  1174
SCSWUS              X    000008       1  1665  1139
SCSWUX              U    000001       1  1673  1189
SERVENAD            H    000858       2   871   612   872
SERVEXCP            H    000958       2  1042   615  1043
SERVIOIN            H    000780       2   702   606   703
SERVNOOP            H    000754       2   657   603   658
SERVPEND            H    000B10       2  1273   618  1274
SERVQIOT            H    00081C       2   818   609   819
SERVTBL             A    000738       4   603   576
SPB                 4    000000      16  1406   331   561   660   705   718   821   874   886  1045  1057  1276
SPBCCW0             U    000001       1  1418
SPBCCW1             U    000002       1  1419
SPBCCWF             X    000002       1  1417
SPBCHST             X    000007       1  1438
SPBDCLS             X    000004       1  1431   900   947   950
SPBDEVST            X    000006       1  1437
SPBE                U    000004       1  1409  1425  1430  1432  1434  1439  1479
SPBEATN             U    000080       1  1458
SPBEBY1             U    000080       1  1448  1458  1083
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:43:29  Page    63

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

SPBECTL             X    000002       1  1447  1079  1083
SPBENRM             U    00000C       1  1457
SPBEORB             F    000004       4  1464  1465  1091
SPBEORB1            X    000009       1  1470  1071
SPBEORB2            X    00000B       1  1472  1073
SPBEORBC            X    00000C       4  1473  1085
SPBEORBK            X    000008       1  1467  1069
SPBEORBL            X    00000A       1  1471
SPBEORBM            U    0000F0       1  1468
SPBEORBP            X    00000D       3  1475
SPBEORBR            U    00000F       1  1469  1069
SPBEORBT            F    000004       4  1466  1063  1065  1067  1088  1120
SPBEWCO             U    000008       1  1454
SPBEWDC             U    00000C       1  1453  1457   455
SPBEWDO             U    000004       1  1455
SPBEWNO             U    000000       1  1456
SPBEWTM             U    00000C       1  1451
SPBID               H    000000       2  1407   568
SPBIOTA             F    000004       4  1412   331   780   842   899   907   996  1289  1311
SPBPEND             X    000003       1  1460  1158  1177
SPBPENDG            U    000001       1  1461  1158  1177
SPBPENDN            U    000000       1  1462
SPBSI               H    000002       2  1408  1416  1446   670   672   729   741   835   890   934
SSARCHMD            X    0000A3       1  1871
SSARS               F    000120       4  1927
SSCLKCMP            F    0000E0       8  1921
SSCPUTIM            F    0000D8       8  1920
SSCRS               F    0001C0       4  1930
SSFPRS              D    000160       8  1928
SSGRS               F    000180       4  1929
SSMODEL             F    00010C       4  1925
SSPREFIX            F    000108       4  1924
SSPSW               F    000100       8  1923
SSXSAA              A    0000D4       4  1919
STBC0011            3    000488       8   242   276
STFLDATA            F    0000C8       4  1892
SVCICODE            H    00008A       2  1851
SVCIID              F    000088       4  1847
SVCIILC             X    000089       1  1849
SVCIILCM            U    00000C       1  1850
SVCNPSW             F    000060       8  1834
SVCOPSW             F    000020       8  1806  1813
TEST00              Y    000630       2   439   313
TIMER               F    000050       4  1830
TTDES               F    000054       4  1831
UA0                 F    000010       8  1803
UA1                 F    00004C       4  1828
UA2                 F    0000A4       4  1873
UA3                 F    0000B4       4  1882
UA4                 X    0000B8       1  1883
UA5                 X    0000CC       8  1893
UA6                 X    0000EC       8  1899
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:43:29  Page    64

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

UA7                 F    000118       8  1910
UA8                 X    000180      32  1939
WH310011            3    000480       8   241   254
ZBRKADDR            A    000110       8  1909
ZEMONCNT            F    00010C       4  1908
ZEMONCTR            A    000100       8  1906
ZEMONSIZ            F    000108       4  1907
ZEXTNPSW            X    0001B0      16  1942
ZEXTOPSW            X    000130      16  1934
ZIONPSW             X    0001F0      16  1946
ZIOOPSW             X    000170      16  1938
ZMCKNPSW            X    0001E0      16  1945
ZMCKOPSW            X    000160      16  1937
ZMKFAILA            F    0000F8       8  1901
ZMONCODE            F    0000B0       8  1876
ZPGMNPSW            X    0001D0      16  1944
ZPGMOPSW            X    000150      16  1936
ZPGMTRX             F    0000A8       8  1875
ZRSTNPSW            X    0001A0      16  1941
ZRSTOPSW            X    000120      16  1933
ZSASDISP            U    0011C0       1  1947
ZSVCNPSW            X    0001C0      16  1943
ZSVCOPSW            X    000140      16  1935
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:43:29  Page    65

 MACRO     DEFN  REFERENCES

AARCH       285
APROB       226
ARCHIND      85
ARCHLVL      84
ASAIPL      171
ASALOAD     152
ASAREA     1793
BLASALD     151
BLCOMMON   1326
BLINIT      197
BLMEM      1365
BLSASA     1792
BLSCALL     312    321    339    389    891
BLSERR      744    958
BLSIODS    1569
BLSIOT     1482
BLSORB      456
BLSPB      1402
BLSTABLE    601
BOOTNTR     431
DSECTS     1575   1622   1693   1716   1731
DWAIT       526    531    533
DWAITEND    530
IOFMT      1576   1623   1694   1717   1732
IOTBL      1394
LOADHL      370    406
LOD1       1952
LTEST       577   1288
ORB         457
SAVEAREA   1373   1375   1377   1379   1381   1383   1385   1543
SERVENAD    867
SERVEND     620
SERVEXCP   1038
SERVICE     654    699    815    868   1039   1270
SERVID      602    605    608    611    614    617
SERVIOIN    698
SERVNOOP    653
SERVPEND   1269
SERVQIOT    814
SERVRTN     674    790    844    999   1223   1313
SERVS       558
STCCWADR    381
STCCWCNT    372
STLOD1      215
TRAP128     164
TRAP64      154    157
VMOVE       409
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:43:29  Page    66

   DESC     SYMBOL  SIZE    POS      ADDR

Entry: 0

Image      IMAGE    2448  000-98F  000-98F
  Region   ASAREGN   512  000-1FF  000-1FF
    CSECT  ASASECT   512  000-1FF  000-1FF
  Region   LOADER   1936  200-98F  400-B8F
    CSECT  LODSECT  1936  200-98F  400-B8F


  ADDR     POS                                OBJECT CONTENT                                         CHARACTER CONTENT


Region: ASAREGN

00000000   000   00080000 00000400 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
00000020   020   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
00000040   040   00000000 00000000 00000000 00000000  00000000 00000000 000A0000 00000018   |................ ................|
00000060   060   000A0000 00000020 000A0000 00000028  000A0000 00000030 000A0000 00000038   |................ ................|
00000080   080   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
000000A0   0A0   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
000000C0   0C0   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
000000E0   0E0   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
00000100   100   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
00000120   120   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
00000140   140   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
00000160   160   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
00000180   180   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
000001A0   1A0   00020000 00000000 00000000 00000120  00020000 00000000 00000000 00000130   |................ ................|
000001C0   1C0   00020000 00000000 00000000 00000140  00020000 00000000 00000000 00000150   |...............  ...............&|
000001E0   1E0   00020000 00000000 00000000 00000160  00020000 00000000 00000000 00000170   |...............- ................|

Region: LOADER

00000400   200   900F0200 0DC0D207 0000C2DA 95120244  4770C26E 92220255 92030256 92080254   |......K...B.n... ..B>k...k...k...|
00000420   220   92060257 4100C2F2 50000270 4100C326  50000278 D20FC08A 01D0D207 C09A0060   |k.....B2&.....C. &...K.....K....-|
00000440   240   D207C0A2 0068D20F 01D0C05A D2070060  C06AD207 0068C072 1B660A00 00000000   |K..s..K....!K..- .¦K.............|
00000460   260   00000001 80000000 00000000 000004B0  00080000 800004B8 00080000 000004D6   |................ ...............O|
00000480   280   00080000 800004EA 00000000 000004EA  00000000 00000000 00000000 00000000   |................ ................|
000004A0   2A0   00000000 00000000 00000000 00000000  47690009 47F0C0E4 D2070068 C07A4160   |................ .....0.UK....:.-|
000004C0   2C0   0007B2B1 00009140 00C84780 C0E44160  000847F0 C0E44160 00039108 00294710   |......j .H...U.- ...0.U.-..j.....|
000004E0   2E0   C0E44160 00028200 C082D20F 01D0C08A  D2070060 C09AD207 0068C0A2 42600274   |.U.-..b..bK..... K..-..K....s.-..|
00000500   300   1F669508 02744780 C1189509 02744770  C1144160 000847F0 C1184160 000C47F6   |..n.....A.n..... A..-...0A..-...6|
00000520   320   C11C47F0 C12C47F0 C29647F0 C29647F0  C296010D 41D0C78A 4110C22A 58F00270   |A..0A..0Bo.0Bo.0 Bo....G...B..0..|
00000540   340   0DEF12FF A7840003 00004110 C22E58F0  02700DEF 12FFA784 00030000 5860C232   |....xd......B..0 ......xd.....-B.|
00000560   360   5060C242 D201C238 60004110 C23658F0  02700DEF 47FFC172 A7F40004 00000004   |&-B.K.B.-...B..0 ......A.x4......|
00000580   380   D201C2A2 00BA1B22 18921B62 BF630246  4060C2BC 88600009 4060C2D4 18560660   |K.Bs.....k......  -B.h-.. -BM...-|
000005A0   3A0   5060C2CE 5840026C 5040C2BE 947FC2BE  D203C2C6 02584184 00064130 CB624110   |&-B.. .%& B.m"B. K.BF...d........|
000005C0   3C0   C23E58F0 02700DEF 47FFC1C6 A7F4000B  00000004 A7F40048 A7F4003E 00000010   |B..0......AFx4.. ....x4..x4......|
000005E0   3E0   000058A4 0000153A 4720C276 BF934004  186918B9 0EA8A714 00475E60 024C5060   |...u......B..l . .....yx...;-.<&-|
00000600   400   024C9180 40004710 C2121865 5E60C2C6  5060C2C6 47F0C1B8 D5030248 024C4770   |.<j. ...B...;-BF &-BF.0A.N....<..|
00000620   420   C2869101 02534710 C28E58F0 02500B0F  00000000 00010000 00000000 00020000   |Bfj.....B..0.&.. ................|
00000640   440   00000000 00040C00 00000000 0080FF00  000006B0 9204C2F1 8200C2EA 9208C2F1   |................ ....k.B1b.B.k.B1|
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:43:29  Page    67

  ADDR     POS                                OBJECT CONTENT                                         CHARACTER CONTENT

00000660   460   8200C2EA 920CC2F1 8200C2EA 9210C2F1  8200C2EA 9218C2F1 8200C2EA 921CC2F1   |b.B.k.B1b.B.k.B1 b.B.k.B1b.B.k.B1|
00000680   480   8200C2EA 9220C2F1 8200C2EA 9224C2F1  8200C2EA 9228C2F1 8200C2EA 922CC2F1   |b.B.k.B1b.B.k.B1 b.B.k.B1b.B.k.B1|
000006A0   4A0   8200C2EA 00000001 00000000 00000000  63400010 000006C8 43400008 000006D8   |b.B............. . .....H. .....Q|
000006C0   4C0   42000000 00000000 40000000 00000000  00000000 00000000 06000000 00000000   |........ ....... ................|
000006E0   4E0   000A0000 00010008 000A0000 00000000  000A0000 00050000 90ECD00C 18CF4820   |................ ................|
00000700   500   1000BD21 0257A744 000511F2 A7F40010  89200002 4122C040 BF2F2000 A7740006   |......x....2x4.. i...... ....x...|
00000720   520   48F0C03E A7F40004 18C207FC 5000D010  98ECD00C 07FEFFFF 00000754 00000780   |.0..x4...B..&... q...............|
00000740   540   0000081C 00000858 00000958 00000B10  C2D3E200 4120C484 5020D008 50D02004   |................ BLS...Dd&...&...|
00000760   560   18D248B0 100241B0 B00140B0 10021B00  58D0D004 58F00278 07FF0000 C2D3E201   |.K........ ..... .....0......BLS.|
00000780   580   4120C4A0 5020D008 50D02004 18D21841  4160C708 5060C3FC 5850C3F8 1E565050   |..D.&...&....K.. .-G.&-C..&C8..&&|
000007A0   5A0   C3F8B766 C0949202 40024170 C6085070  C40C5810 00B8B234 7000A784 00030000   |C8...mk. ...F.&. D.........xd....|
000007C0   5C0   9201C409 D2016000 70065010 6004D200  60024002 92F1600C 91806002 A7E40004   |k.D.K.-...&.-.K. -. .k1-.j.-.xU..|
000007E0   5E0   94FE600C 91406002 A7E40004 947F600C  50604004 4170601F 5070C404 A7F40006   |m.-.j -.xU..m"-. &- ...-.&.D.x4..|
00000800   600   41000004 A7F40003 1B0058D0 D00458F0  027807FF FFFFFFFF C2D3E202 4120C44C   |....x4.........0 ........BLS...D<|
00000820   620   5020D008 50D02004 18D21B00 9857C360  D5011002 5000A784 00078556 FFFB1850   |&...&....K..q.C- N...&.xd..e....&|
00000840   640   41000004 50501004 58D0D004 58F00278  07FF0000 C2D3E203 4120C458 5020D008   |....&&.......0.. ....BLS...D.&...|
00000860   660   50D02004 18D21841 1B00D201 C0F44002  4110C0F2 58F00270 0DEF12FF 4770C04A   |&....K....K..4 . ...2.0.........¢|
00000880   680   5850C0F6 D5004004 5002A784 00064100  0014A7F4 00555050 40044100 0004A7F4   |.&.6N. .&.xd.... ..x4..&& .....x4|
000008A0   6A0   004F5820 C32C1832 5E30C328 5530C320  A7440006 41000010 A7F40042 41202001   |.|..C...;.C...C. x.......x4......|
000008C0   6C0   5860C334 9201C331 5810C0EE B2346000  A714000B D5014002 6006A784 000A4110   |.-C.k.C.......-. x...N. .-.xd....|
000008E0   6E0   1001A7F4 FFF54100 000CA7F4 0029D201  20006006 50102004 D2002002 40049680   |..x4.5....x4..K. ..-.&...K... .o.|
00000900   700   60055050 6000D200 60044004 94386004  B2326000 A774FFE9 92F1200C 91802002   |-.&&-.K.-. .m.-. ..-.x..Zk1..j...|
00000920   720   A7E40004 94FE200C 91402002 A7E40004  947F200C 50204004 5030C32C 58D0D004   |xU..m...j ..xU.. m"..&. .&.C.....|
00000940   740   58F00278 07FF0001 00000002 00000000  00000000 C2D3E204 4120C3A0 5020D008   |.0.............. ....BLS...C.&...|
00000960   760   50D02004 18D21841 1F00D503 4004C224  A74400B5 D5034004 C22CA724 00B09103   |&....K....N. .B. x...N. .B.x...j.|
00000980   780   4007A774 00AC910F 4008A774 00A89580  4009A774 00A49500 400BA774 00A0D200   | .x...j. .x..yn.  .x..un. .x...K.|
000009A0   7A0   C1B24002 940CC1B2 91804002 A714001D  D503400C C1A8A784 00925850 40045810   |A. .m.A.j. .x... N. .Ayxd.k.& ...|
000009C0   7C0   50044160 4004B233 6000A784 000EA724  0080A714 007E9140 5002A7E4 0074A7F4   |&..- ...-.xd..x. ..x..=j &.xU..x4|
000009E0   7E0   00049280 5003D207 0078C198 8200C190  D2070078 C1A05870 00BC5570 4004A784   |..k.&.K...Aqb.A. K...A....... .xd|
00000A00   800   00069202 C230A7F4 00049201 C2305810  00B85820 C234B235 2000A784 00030000   |..k.B.x4..k.B... ....B.....xd....|
00000A20   820   9202C231 D20B7010 2000D601 70087018  96027003 91027003 A7140003 00009140   |k.B.K.....O..... o...j...x.....j |
00000A40   840   7002A7E4 00119180 700847E0 C10C9204  700B9620 70039201 40031557 A774FFC5   |..xU..j.....A.k. ..o...k. ...x..E|
00000A60   860   47F0C154 95005009 A774002D 4330500C  4430C1AE A7740027 91025008 A7E4000A   |.0A.n.&.x.....&. ..A.x...j.&.xU..|
00000A80   880   9200500B 92014003 96205003 A7F4001B  4330C1B2 4430C1AE A7E4FFA7 91805002   |k.&.k. .o.&.x4.. ..A...A.xU.xj.&.|
00000AA0   8A0   A7E40006 91015008 A7140007 947F5003  1F00A7F4 0016947F 50034100 0004A7F4   |xU..j.&.x...m"&. ..x4..m"&.....x4|
00000AC0   8C0   0010947F 50034100 0008A7F4 000A947F  50034100 000CA7F4 00044100 001058D0   |..m"&.....x4..m" &.....x4........|
00000AE0   8E0   D00458F0 027807FF 020A0000 00000000  00080000 800009F0 000A0000 00000038   |...0............ .......0........|
00000B00   900   00000000 00019100 50080000 C2D3E205  4120C230 5020D008 50D02004 18D21B00   |......j.&...BLS. ..B.&...&....K..|
00000B20   920   BF5F1004 A7840008 91205003 A714000E  A7F40018 9857C06C 91205003 A7140006   |.ª..xd..j.&.x... x4..q..%j.&.x...|
00000B40   940   8556FFFC A7F4000E 9504500B A7840006  41000004 A7F40004 41000008 50501004   |e...x4..n.&.xd.. ....x4......&&..|
00000B60   960   58D0D004 58F00278 07FF0000 00000B90  00000000 00000000 00000100 00000000   |.....0.......... ................|
00000B80   980   00000020 00000000 00000000 00000000                                        |................                 |
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 06:43:29  Page    68

   STMT                       FILE NAME

1     /home/harold/SATKREPO/SATK/srcasm/loader/fbalodr.asm
2     /home/harold/SATKREPO/SATK/srcasm/loader/bls.asm


** NO ERRORS FOUND **

[144] MNOTE *,ARCHLVL - ARCHITECTURE LEVEL SET - 8
