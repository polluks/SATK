ASMA Ver. 0.2.0                                                                                     07 Sep 2020 09:13:11  Page     1

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                               1 * Copyright (C) 2020 Harold Grovesteen
                                               2 *
                                               3 * This file is part of SATK.
                                               4 *
                                               5 *     SATK is free software: you can redistribute it and/or modify
                                               6 *     it under the terms of the GNU General Public License as published by
                                               7 *     the Free Software Foundation, either version 3 of the License, or
                                               8 *     (at your option) any later version.
                                               9 *
                                              10 *     SATK is distributed in the hope that it will be useful,
                                              11 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
                                              12 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                              13 *     GNU General Public License for more details.
                                              14 *
                                              15 *     You should have received a copy of the GNU General Public License
                                              16 *     along with SATK.  If not, see <http://www.gnu.org/licenses/>.
                                              17 *
ASMA Ver. 0.2.0  FBA BOOT LOADER                                                                    07 Sep 2020 09:13:11  Page     2

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                              19 * Program Description:
                                              20 *
                                              21 * LOADER is a generic boot loader program.  It requires input/output commands to
                                              22 * the IPL device to load the booted program.  This boot loader is executed by
                                              23 * means of an IPL from a FBA DASD volume.  Control is passed to the booted
                                              24 * program by means of a branch instruction.
                                              25 *
                                              26 * Various boot loader services are provided for use by the loader itself and
                                              27 * the booted program.
                                              28 *
                                              29 * Target Architecture: S/360, S/370, ESA/390, or z/Arch
                                              30 *
                                              31 * Devices Used:
                                              32 *   110 - FBA IPL volume containing the booted program
                                              33 *
                                              34 * Program Register Usage:
                                              35 *
                                              36 *   R0   Base register for access to the ASA.  Required by DSECT usage
                                              37 *        This is purely an assembler artifact.  R0 available for other uses
                                              38 *   R1   Device Channel and Unit Addresses for I/O instructions
                                              39 *   R2   Cumulative size of loaded program
                                              40 *   R3   Boot loader high water mark (can not write below it)
                                              41 *   R4   FBA I/O Area address (where a directed record is read)
                                              42 *   R5   Number of FBA sectors read for each directed record
                                              43 *   R6   Work register
                                              44 *   R8   Source address of directed record's content    ---+
                                              45 *   R9   Length of a directed record's program content     |-- MVCL
                                              46 *   R10  Destination address of directed record's content  |
                                              47 *   R11  Length of a directed record's program content  ---+
                                              48 *   R12  The program base register
                                              49 *   R13  available
                                              50 *   R14  available
                                              51 *   R15  Booted program's entry address
                                              52 *
                                              53 * Disabled Wait State PSW's address field values used by the program:
                                              54 *    X'000000' - Successful execution of the program
                                              55 *    X'000008' - Unexpected Restart interruption occurred. Old Restart PSW at
                                              56 *                address X'8'
                                              57 *    X'000018' - Unexpected External interruption occurred.  Old External PSW at
                                              58 *                address X'18'
                                              59 *    X'000020' - Unexpected Supervisor interruption occurred.  Old Supervisor
                                              60 *                PSW at address X'20'
                                              61 *    X'000028' - Unexpected Program interruption occurred. Old Program PSW at
                                              62 *                address X'28'
                                              63 *    X'000030' - Unexpected Machine Check interruption occurred.  Old Machine
                                              64 *                Check PSW at address X'30'
                                              65 *    X'000038' - Unexpected Input/Output interruption occurred.  Old
                                              66 *                Input/Output PSW at address X'38'
                                              67 *    X'050004' - IPL Device or channel not operational
                                              68 *    X'050008' - IPL Device or channel busy
                                              69 *    X'05000C' - IPL Device or channel had a problem. See SCSW in IOT entry
                                              70 *    X'050010' - Unexpected interruption from some other device. See ASA X'BA'
ASMA Ver. 0.2.0  FBA BOOT LOADER                                                                    07 Sep 2020 09:13:11  Page     3

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                              71 *    X'050014' - NOT USED
                                              72 *    X'050018' - IPL device not supported by this boot loader
                                              73 *    X'05001C' - Directed record overwriting boot loader
                                              74 *    X'050020' - Destructive overlap detected by MVCL while loading record
                                              75 *    X'050024' - Cumulative booted program sizes do not match in LOD1
                                              76 *    X'050028' - Can not change addressing mode for booted program
                                              77 *    X'05002C' - Incompatbile run-time and assembly-time architectures
ASMA Ver. 0.2.0  FBA BOOT LOADER - ARCHITECTURE LEVEL SET AND LOAD ASA CONTENT                      07 Sep 2020 09:13:11  Page     4

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                              79 * See all object data and macro generated model statements in the listing
                                              80          PRINT DATA,GEN

                                              82 * Inform the SATK macros of the architecture being targeted.  Inferred from
                                              83 * the ASMA -t command-line argument.
                                              84          ARCHLVL
                                              86+$AL      OPSYN AL
                                              87+$ALR     OPSYN ALR
                                              88+$B       OPSYN B
                                              89+$BC      OPSYN BC
                                              90+$BCTR    OPSYN BCTR
                                              91+$BE      OPSYN BE
                                              92+$BH      OPSYN BH
                                              93+$BL      OPSYN BL
                                              94+$BM      OPSYN BM
                                              95+$BNE     OPSYN BNE
                                              96+$BNH     OPSYN BNH
                                              97+$BNL     OPSYN BNL
                                              98+$BNM     OPSYN BNM
                                              99+$BNO     OPSYN BNO
                                             100+$BNP     OPSYN BNP
                                             101+$BNZ     OPSYN BNZ
                                             102+$BO      OPSYN BO
                                             103+$BP      OPSYN BP
                                             104+$BXLE    OPSYN BXLE
                                             105+$BZ      OPSYN BZ
                                             106+$CH      OPSYN CH
                                             107+$CLR     OPSYN CLR
                                             108+$L       OPSYN L
                                             109+$LH      OPSYN LH
                                             110+$LM      OPSYN LM
                                             111+$LNR     OPSYN LNR
                                             112+$LPSW    OPSYN LPSW
                                             113+$LR      OPSYN LR
                                             114+$LTR     OPSYN LTR
                                             115+$NR      OPSYN NR
                                             116+$SL      OPSYN SL
                                             117+$SLR     OPSYN SLR
                                             118+$SR      OPSYN SR
                                             119+$ST      OPSYN ST
                                             120+$STM     OPSYN STM
                                             121+$X       OPSYN X
                                             122+$BAS     OPSYN BAL
                                             123+$BASR    OPSYN BALR
                                             124+         MNOTE *,'ARCHLVL - ARCHITECTURE LEVEL SET - 1'
        ** [124] MNOTE *,ARCHLVL - ARCHITECTURE LEVEL SET - 1


                                             126 * Ensure interrupt traps are loaded by iplasma.py before program execution
                                             127 * begins.  This macro will create the memory region that will also contain
                                             128 * the IPL PSW.  The region name defaults to ASAREGN.  iplasma.py knows how
                                             129 * to deal with ASA creation.
ASMA Ver. 0.2.0  FBA BOOT LOADER - ARCHITECTURE LEVEL SET AND LOAD ASA CONTENT                      07 Sep 2020 09:13:11  Page     5

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT


                                             131 ASASECT  BLASALD
                            000000  0001FF   133+ASASECT  START 0,ASAREGN
000000  00020000 00000008                    135+         PSW   0,0,2,0,X'008'      64-bit Restart ISR Trap New PSW
000008                      000008  000058   136+         ORG   ASASECT+X'058'
000058  00020000 00000018                    138+         PSW   0,0,2,0,X'018'      64-bit External ISR Trap New PSW
000060  00020000 00000020                    139+         PSW   0,0,2,0,X'020'      64-bit Supervisor Call ISR Trap New PSW
000068  00020000 00000028                    140+         PSW   0,0,2,0,X'028'      64-bit Program ISR Trap New PSW
000070  00020000 00000030                    141+         PSW   0,0,2,0,X'030'      64-bit Machine Check Trap New PSW
000078  00020000 00000038                    142+         PSW   0,0,2,0,X'038'      64-bit Input/Output Trap New PSW
000080                      000080  000200   143+         ORG   ASASECT+512
                                             144          ASAIPL IA=LODSTART    Define the bare-metal program's IPL PSW
                            000000  0001FF   145+ASASECT  CSECT
000200                      000200  000000   146+         ORG   ASASECT
000000  00000000 00000400                    147+         PSW   0,0,0,0,LODSTART,24
000008                      000008  000200   148+         ORG   ASASECT+512      Reset CSECT to end of assigned storage area
                            000000  0001FF   149+ASASECT  CSECT



                                             151 *
                                             152 *  Commonly used FBA Values
                                             153 *

                                             155 * CCW Commands
                            000003  000001   156 NOP      EQU   X'03'     No operation CCW Command
                            000063  000001   157 DEFN_EXT EQU   X'63'     Define Extent CCW Command
                            000043  000001   158 LOC_DATA EQU   X'43'     Locate CCW Command (within a defined extent)
                            000042  000001   159 READ     EQU   X'42'     Read located data CCW Command

                                             161 * CCW Flags
                            000040  000001   162 CC       EQU   X'40'     CCW Command chaining
ASMA Ver. 0.2.0  FBA BOOT LOADER - INITIALIZATION                                                   07 Sep 2020 09:13:11  Page     6

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             164 *
                                             165 * FBA Boot Loader Program
                                             166 *

                            000400  000BD7   168 LODSECT  START X'400',LOADER   Start a second region for the loader itself
                                             169 * This results in LOADER.bin being created in the list directed IPL directory
                                             170          BLINIT DTYPE=LOD1LENF+LOD1FBA
000400                      000000           171+         USING ASA,0           Give me instruction access to the ASA and LOD1
000400  900F 0200                   000200   172+LODSTART STM   0,15,LODPARMS   Preserve Hercules IPL parameters, if any.
                                             173+* This must happen before any register is altered!
000404  05C0                                 174+         BALR  12,0            Establish my base register
000406                      000406           175+         USING *,12            Tell the assembler
000406  89C0 0008                   000008   176+         SLL   12,8            Clear high-order..
00040A  88C0 0008                   000008   177+         SRL   12,8            ..8 bits
00040E  D201 00BA 0002      0000BA  000002   178+         MVC   IOICODE,2(0)    Preserve IPL device number
                                             179+* Ensure program is not re-entered by a Hercules console initiated restart.
                                             180+* Address 0 changed from its absolute storage role (IPL PSW) to its real
                                             181+* storage role (Restart New PSW) after the IPL.
                                             182+* Change from the IPL PSW at address 0 to a Restart New PSW trap
000414  D207 0000 C34A      000000  000750   183+         MVC   RSTNPSW,PGMRS

                                             185+* Check that the IPL device created by IPLASMA can be processed by this
                                             186+* Boot loader.
                                             187+         CLI   LOD1DTYP,LOD1LENF+LOD1FBA \
00041A  9512 0244                   000244      +                                  Can I handle the IPL device type?
00041E  4770 C2E2                   0006E8   188+         BNE   BADDEVT            ..No, end with 018 error code



                                             190+* Store data in LOD1 record
000422  D207 0000 C34A      000000  000750   192+         MVC   RSTNPSW,PGMRS
000428  9211 0255                   000255   193+         MVI   LOD1IO,X'11'           Set I/O arch. and mode in use
00042C  9201 0256                   000256   194+         MVI   LOD1BLAM,X'01'         Set booted program entry AM as 24
000430  9201 0254                   000254   195+         MVI   LOD1CPU,1              Set assembled CPU architecture
000434  9206 0257                   000257   196+         MVI   LOD1BLSV,BLSNUM        Set start of unsupported services
000438  4100 C362                   000768   197+         LA    0,BLS                  Locate services entry point
00043C  5000 0270                   000270   198+         ST    0,LOD1BLST             Store it in LOD1
000440  4100 C39A                   0007A0   199+         LA    0,BLSR                 Locate the service return
000444  5000 0278                   000278   200+         ST    0,LOD1RTN              Save it in LOD1 reserved area



                                             202+* Determine the running architecture of the CPU
000448  D20F C09A 01D0      0004A0  0001D0   204+         MVC   APSZ0010(16),X'1D0'      Save current 128-bit SVC PSW
00044E  D207 C0AA 0060      0004B0  000060   205+         MVC   APSS0010(8),X'060'       Save current 64-bit SVC PSW
000454  D207 C0B2 0068      0004B8  000068   206+         MVC   APSP0010(8),X'068'       Save current 64-bit PGM PSW
00045A  D20F 01D0 C06A      0001D0  000470   207+         MVC   X'1D0'(16,0),AP640010    Set up 128-bit SVC New PSW
000460  D207 0060 C07A      000060  000480   208+         MVC   X'060'(8,0),AP310010     Set up 64-bit SVC New PSW
000466  D207 0068 C082      000068  000488   209+         MVC   X'068'(8,0),AP240010     Set up 64-bit PGM New PSW
00046C  1B66                                 210+         SR    6,6                      Make sure result register is zero
00046E  0A00                                 211+         SVC   0   NOW DO THE PROBE
                                             212+* Control never falls through here.  An interruption takes control elsewhere.
ASMA Ver. 0.2.0  FBA BOOT LOADER - INITIALIZATION                                                   07 Sep 2020 09:13:11  Page     7

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT


                                             214+* Data used by APROB
000470  00000001 80000000                    215+AP640010 PSWZ  0,0,0,0,IS640010,64           64-bit architecture detected
000478  00000000 000004C0
000480  00080000 800004C8                    216+AP310010 PSW380 0,0,0,0,IS310010,31          31-bit architecture detected
000488  00080000 000004E6                    217+AP240010 PSWEC 0,0,0,0,IS240010,24           24-bit architecture detected
000490  00080000 800004FA                    218+WH310010 PSW380 0,0,0,0,APDN0010,31          31-bit tests complete
000498  00000000 000004FA                    219+STBC0010 PSWBC 0,0,0,0,APDN0010,24           Restores BC-mode for S/370 when detected
0004A0  00000000 00000000                    220+APSZ0010 DC    FD'0,0'                       128-bit SVC PSW save area
0004A8  00000000 00000000
0004B0  00000000 00000000                    221+APSS0010 DC    FD'0'                         64-bit SVC PSW save area
0004B8  00000000 00000000                    222+APSP0010 DC    FD'0'                         64-bit PGM PSW save area

0004C0                                       224+IS640010 DS    0H    64-bit architecture found
                                             225+*        LGHI  &REG,9  Use of LGHI ensures all high-order bits in 64-bit reg. are 0
0004C0  47690009                             226+         DC    AL1(X'47',6*16+9),HL2'9'
0004C4  47F0 C0F4                   0004FA   227+         B     APDN0010      64-bit tests are done

0004C8                                       229+IS310010 DS    0H    31-bit architecture found
                                             230+* Detect which 31-bit architecture
0004C8  D207 0068 C08A      000068  000490   231+         MVC   X'068'(8,0),WH310010        Set up 31-bit trap PSW
                                             232+* A failure on the test instruction causes immediate end to any testing
                                             233+* Therefore, the level detected by the failure is set before the test instruction
                                             234+* is executed.
                                             235+* Level 7 - Detect native ESA/390
0004CE  4160 0007                   000007   236+         LA    6,7              Set level to 7 (native ESA/390)
                                             237+*        STFL  0(0)             STORE FACILITY LIST
0004D2  B2B10000                             238+         DC    X'B2B10000'
                                             239+* An operation exception definitely implies native ESA/390
                                             240+* Depending upon the platform STFL might actually work.  Test the STFL bits then.
0004D6  9140 00C8                   0000C8   241+         TM    200,X'40'        Is z/Architecture installed?
0004DA  4780 C0F4                   0004FA   242+         BZ    APDN0010         ..No, this is a native ESA/390 environment
                                             243+*                               ..Yes, ESA/390 on z was detected
0004DE  4160 0008                   000008   244+         LA    6,8              Set level to 8 (ESA/390 on z)
0004E2  47F0 C0F4                   0004FA   245+         B     APDN0010         31-bit tests are done

                                             247+* Detect which 24-bit architecture mode is actually running
0004E6                                       248+IS240010 DS    0H    24-bit architecture found
0004E6  4160 0003                   000003   249+         LA    6,3              Set level to 3 (assume S/370-EC mode)
0004EA  9108 0029                   000029   250+         TM    X'29',X'08'      Is EC-mode enabled in old-PSW?
0004EE  4710 C0F4                   0004FA   251+         BO    APDN0010         ..Yes, already in EC-mode, so done
0004F2  4160 0002                   000002   252+         LA    6,2              ..No, set level to 2 (S/370-BC mode)
0004F6  8200 C092                   000498   253+         LPSW  STBC0010         Restore BC-mode operation

0004FA                                       255+APDN0010 DS    0H   Level found, restore previous new PSW's
0004FA  D20F 01D0 C09A      0001D0  0004A0   256+         MVC   X'1D0'(16,0),APSZ0010      Restore previous 128-bit SVC PSW
000500  D207 0060 C0AA      000060  0004B0   257+         MVC   X'060'(8,0),APSS0010       Restore previous 64-bit SVC PSW
000506  D207 0068 C0B2      000068  0004B8   258+         MVC   X'068'(8,0),APSP0010       Restore previous 64-bit PGM PSW
00050C  4260 0274                   000274   259+         STC   6,LOD1ARCH      Save the running CPU architecture
ASMA Ver. 0.2.0  FBA BOOT LOADER - INITIALIZATION                                                   07 Sep 2020 09:13:11  Page     8

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             261+* Ensure the running architecture can execute the assembled architecture.
000510  1F66                                 263+         SLR   6,6                      Clear the return code
000512  9502 0274                   000274   264+         CLI   LOD1ARCH,2            Is running architecture S/370-BC?
000516  4780 C12E                   000534   265+         BE    AARX0011              ..Yes, architectures are compatible
00051A  9503 0274                   000274   266+         CLI   LOD1ARCH,3            Is running architecture S/370-EC?
00051E  4770 C12A                   000530   267+         BNE   AARI0011              ..No, not compatible
000522  8200 C122                   000528   268+         LPSW  AARB0011              ..Yes, adjust to BC-mode
000528                                       269+AARB0011 DS    0D
000528  00000000 00000534                    270+         PSWBC 0,0,0,0,AARX0011
000530                                       271+AARI0011 DS    0H
000530  4160 000C                   00000C   272+         LA    6,12                  Set incompatible architectures return code
000534                                       273+AARX0011 DS    0H
000534  47F6 C132                   000538   274+         B     *+4(6)          Use the return code to decide action
000538  47F0 C142                   000548   275+         B     ARCHSOK         ..0, architectures compatible, nothing to do
00053C  47F0 C30A                   000710   276+         B     ARCHBAD         ..4, change to z architecture (never)
000540  47F0 C30A                   000710   277+         B     ARCHBAD         ..8, no support to downgrade to ESA/390 on z
000544  47F0 C30A                   000710   278+         B     ARCHBAD         .12, bad combination, can not run

000548                                       280+ARCHSOK  DS    0H
                                             281+*        SAM24                    Boot loader runs in 24-bit address mode



                                             283+* At this point the boot loader's system environment has been validated and,
                                             284+* if need be, adjusted for compatibility with the assembled architecture.  The
                                             285+* loader is now running in its anticipated environment.  Anticipated, that is,
                                             286+* by the loader's _assembled_ target architecture.
ASMA Ver. 0.2.0  FBA BOOT LOADER - PROCESSING                                                       07 Sep 2020 09:13:11  Page     9

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             288 * Test the service call framework
000548  41D0 C7D2                   000BD8   289          LA    13,EOBL+(SAVEAREA-DMEMORY)   Point to my save area
                                             290          BLSCALL SPB=TEST00
00054C  4110 C29E                   0006A4   291+         LA    1,TEST00
000550  58F0 0270                   000270   292+         L     15,LOD1BLST
000554  05EF                                 293+         $BASR 14,15
000556  12FF                                 294          $LTR  15,15
000558  4780 C158                   00055E   295          $BZ   *+6            CC==0, success
00055C  0000                                 296          DC    HL2'0'         Otherwise, die here



                                             298 * Initialize the I/O system and the I/O Table with the IPL device
                                             299          BLSCALL SPB=INIT01
00055E  4110 C2A2                   0006A8   300+         LA    1,INIT01
000562  58F0 0270                   000270   301+         L     15,LOD1BLST
000566  05EF                                 302+         $BASR 14,15
000568  12FF                                 303          $LTR  15,15
00056A  4780 C16A                   000570   304          $BZ   *+6            RC==0, success
00056E  0000                                 305          DC    HL2'0'         Otherwise, die here

                                             307 * Remember where the IPL Device is in the I/O Table.  Need it during use of
                                             308 * EXCP service.  So set it in the ORB.
000570  5860 C2A6                   0006AC   309          L     6,INIT01+(SPBIOTA-SPB)
000574  5060 C2B6                   0006BC   310          ST    6,EXCPORB
000578                      000000           311          USING BLSIOT,6



                                             313 * Test the QIOT service
                                             314 * Look for the IPL device whatever its device number is
000578  D201 C2AC 6000      0006B2  000000   315          MVC     QUERY02+2(2),BLSDEV
00057E                                       316          DROP    6
                                             317          BLSCALL SPB=QUERY02
00057E  4110 C2AA                   0006B0   318+         LA    1,QUERY02
000582  58F0 0270                   000270   319+         L     15,LOD1BLST
000586  05EF                                 320+         $BASR 14,15
000588  47FF C186                   00058C   321          B        *+4(15)     Use branch table to process return code
00058C  47F0 C18E                   000594   322          $B       IPLFND      RC==0, found IPL device in I/O Table
000590  00000004                             323          DC       FL4'4'      RC==4, did not find the IPL device. Die here



                                             325 * Test the ENADEV service
                                             326 * This is commented out because the only device used by the boot loader is
                                             327 * the IPL device and it is enabled by the hardware during the IPL function.
                                             328 * For this reason, the I/O Table address is supplied by the INITIO service.
                                             329 * The boot loader does not need this service, but the booted program may.
                                             330 *         BLSCALL SPB=ENADEV03
                                             331 *         B     *+4(15)        Use branch table to process return code
                                             332 *         DC    F'0'           RC==0, entry added                    TESTED
                                             333 *         $B    IPLFND         RC==4, duplicate entry                TESTED
ASMA Ver. 0.2.0  FBA BOOT LOADER - PROCESSING                                                       07 Sep 2020 09:13:11  Page    10

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             334 *         DC    F'8'           RC==8, error state                    TESTED
                                             335 *         DC    F'12'          RC==12, device not operational        TESTED
                                             336 *         DC    F'16'          RC==16, I/O Table full                TESTED
                                             337 *         DC    F'20'          RC==20, device entry class mismatch   TESTED

                                             339 * Prepare for use of the IPL device by the boot loader
000594  D201 C316 00BA      00071C  0000BA   340 IPLFND   MVC   IPLDEV,IOICODE    Save the address of the IPL device
                                             341 * The IPL device must be available for use because we successfully got here.
                                             342 * Prepare the channel program for use of the IPL device by the boot loader

                                             344 * Initialize the static portions of the I/O related data
00059A  1B22                                 345          SR    2,2          Clear cumulative size of loaded program to zero
00059C  1892                                 346          LR    9,2          Clear size of data being moved from record
00059E  1B62                                 347          SR    6,2          Clear work register
                                             348          LOADHL 6,LOD1MDLN  Fetch from LOD1 the maximum directed record length
0005A0  4860 0246                   000246   349+         LH    6,LOD1MDLN           Load halfword with sign extention
0005A4  8960 0010                   000010   351+         SLL   6,16
0005A8  8860 0010                   000010   352+         SRL   6,16
                                             353          STCCWCNT 6,FBACCW3 CCW - Update count field in CCW
0005AC  4060 C330                   000736   354+         STH   6,FBACCW3+6      Store count into a Format 0 CCW
0005B0  8860 0009                   000009   355          SRL   6,9(0)             Convert bytes into sectors.
0005B4  4060 C344                   00074A   356          STH   6,LOCSECS    LOC - Will always read the same number of sectors
0005B8  1856                                 357          LR    5,6                Save the number of sectors (updates extent)
0005BA  0660                                 358          BCTR  6,0                And the logical end of the extent is constant
0005BC  5060 C33E                   000744   359          ST    6,ENDLSEC    EXT - Set it in the FBA extent data
                                             360 * R6 is now available for other uses
0005C0  5840 026C                   00026C   361          L     4,LOD1IOA          Fetch where directed records are read
                                             362          STCCWADR 4,FBACCW3          CCW - Update the CCW for reading
0005C4  4240 C32D                   000733   363+         STC   4,FBACCW3+3            Store bits 24-31 of reg into address
0005C8  8840 0008                   000008   364+         SRL   4,8                    Move bits 16-23 of reg for storing
0005CC  4240 C32C                   000732   365+         STC   4,FBACCW3+2            Store bits 16-23 of reg into address
0005D0  8840 0008                   000008   366+         SRL   4,8                    Move bits 8-15 of reg for storing
0005D4  4240 C32B                   000731   367+         STC   4,FBACCW3+1            Store bits 8-15 of reg into address
0005D8  8940 0008                   000008   368+         SLL   4,8                    Move bits 24-31 of reg to bits 16-23
0005DC  4340 C32C                   000732   369+         IC    4,FBACCW3+2            Restore bits 16-23 of reg
0005E0  8940 0008                   000008   370+         SLL   4,8                    Move bits 16-23 of reg to bits 8-15
0005E4  4340 C32D                   000733   371+         IC    4,FBACCW3+3            Restore bits 24-31 of reg
0005E8  D203 C336 0258      00073C  000258   372          MVC   FRSTPSEC,LOD1FSEC     EXT - Set starting sector of first record
                                             373 * Initialize the static portions of record loading
0005EE  4184 0006                   000006   374          LA    8,6(4)       Locate start of directed record's content
0005F2  4130 CAAA                   000EB0   375          LA    3,EOBL+(HWM-DMEMORY)   Directed records may not overwrite me!

                                             377 READLOOP BLSCALL SPB=EXCP04
0005F6                                       378+READLOOP DS    0H
0005F6  4110 C2B2                   0006B8   379+         LA    1,EXCP04
0005FA  58F0 0270                   000270   380+         L     15,LOD1BLST
0005FE  05EF                                 381+         $BASR 14,15
000600  47FF C1FE                   000604   382          B     *+4(15)           Use the branch table to analyze return code
000604  47F0 C214                   00061A   383          $B    MOVEREC           ..Success, move the directed record
000608  00000004                             384          DC    FL4'4'            ..Physical EOF should not occur for FBA device
00060C  47F0 C2D2                   0006D8   385          $B    DEVCSW            ..Error state
000610  47F0 C2C2                   0006C8   386          $B    DEVNOAVL          ..Device busy, not avalable or invalid
ASMA Ver. 0.2.0  FBA BOOT LOADER - PROCESSING                                                       07 Sep 2020 09:13:11  Page    11

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

000614  00000010                             387          DC    FL4'16'           ..Die here if ORB is invalid
000618  0000                                 388          DC    HL2'0'            Die here if unexpected return code



00061A                                       390 MOVEREC  DS    0H    Move the directed record to its residence address
00061A  58A4 0000                   000000   391          L     10,0(4)           Destination address of record's content
00061E  153A                                 392          CLR   3,10              Will data from record overwrite boot loader?
000620  4720 C2EA                   0006F0   393          BH    OVRWRITE          ..Yes, HWM higher than load address, quit now!
                                             394          LOADHL 9,4(4)           Size of record being loaded
000624  4894 0004                   000004   395+         LH    9,4(4)               Load halfword with sign extention
000628  8990 0010                   000010   397+         SLL   9,16
00062C  8890 0010                   000010   398+         SRL   9,16
000630  1869                                 399          LR    6,9               Increment for cumulative program loaded
                                             400          VMOVE 10,8,DSTRCT=DESTRT
000632  1B99                                 401+         SR    8+1,8+1             Clear the decrement value
000634  4190 0100                   000100   402+         LA    8+1,256             Maximum bytes to move on one cycle
000638  19B9                                 403+VMVC0022 CR    10+1,8+1            Are we almost done (R1+1 <= 256)?
00063A  47D0 C24E                   000654   404+         BNH   VMVE0022            ..Yes, just do the last mvc
00063E  D2FF A000 8000      000000  000000   405+         MVC   0(256,10),0(8)      Move 256 bytes
000644  1EA9                                 406+         ALR   10,8+1              Increment the destination address by 256
000646  1E89                                 407+         ALR   8,8+1               Increment the source address by 256
000648  1BB9                                 408+         SR    10+1,8+1            Decrenent the remaining byte count by 256
00064A  4720 C232                   000638   409+         BP    VMVC0022            ..If >0, more bytes to move, see if last
00064E  4780 C25E                   000664   410+         BZ    VMVX0022            ..Yes, done with the move if zero
000652  0000                                 411+         DC    H'0'  If <0 or overflow, something went wrong
000654                                       412+VMVE0022 DS    0H   This is the last (or only) move
000654  06B0                                 413+         BCTR  10+1,0              Decrement the remainder count by 1 for MVC
000656  44B0 C258                   00065E   414+         EX    10+1,VMVM0022       Move the last chunk
00065A  47F0 C25E                   000664   415+         B     VMVX0022            Branch around the executed MVC
00065E  D200 A000 8000      000000  000000   416+VMVM0022 MVC   0(1,10),0(8)         Move the last chunk
000664                                       417+VMVX0022 DS    0H   Variable move complete

000664  5E60 024C                   00024C   419          AL    6,LOD1BPLD        Increment loaded program size
000668  5060 024C                   00024C   420          ST    6,LOD1BPLD        Update the cumulative program size in LOD1

                                             422 * Determine if last record has been loaded
00066C  9180 4000                   000000   423          TM    0(4),X'80'        Bit 0 of destination address one?
000670  4710 C27C                   000682   424          BO    CKSIZE            ..Yes, check if correct amount loaded
000674  1865                                 425          LR    6,5               Fetch the number of sectors read
000676  5E60 C336                   00073C   426          AL    6,FRSTPSEC        Update starting sector for the next extent
00067A  5060 C336                   00073C   427          ST    6,FRSTPSEC  EXT - Update the FBA extent with new starting sector
00067E  47F0 C1F0                   0005F6   428          B     READLOOP          Read the next record.

                                             430 * Total bytes loaded should match what LOD1 says is the booted program size
000682  D503 0248 024C      000248  00024C   431 CKSIZE   CLC   LOD1BPLN,LOD1BPLD  Do the cumulative sizes match in LOD1?
000688  4770 C2FA                   000700   432          BNE   CUMERROR           ..No, something went wrong, quit



                                             434 * Enter the boot loaded program...
ASMA Ver. 0.2.0  FBA BOOT LOADER - PROCESSING                                                       07 Sep 2020 09:13:11  Page    12

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             436          BOOTNTR
00068C  9180 0250                   000250   437+         TM    LOD1ENTR,X'80'     Is 31-bit addressing set in address?
000690  4710 C302                   000708   438+         BO    AMERROR            ..Yes, can not do that, so quit
000694  9101 0253                   000253   439+         TM    LOD1ENTR+3,X'01'   Is 64-bit addressing set in address?
000698  4710 C302                   000708   440+         BO    AMERROR            ..Yes, can not do that either, quit
00069C  58F0 0250                   000250   441+         L     15,LOD1ENTR        Fetch entry point for booted program from LOD1
0006A0  07FF                                 442+         BR    15                 Enter the booted program



                                             444 * Service NOOP SPB
0006A4                                       445          DS    0F
0006A4  00000000                             446 TEST00   DC    Y(NOOP),H'0'         Tests service functionality

                                             448 * Service IOINIT SPB
0006A8                                       449          DS    0F
0006A8  00010000 00000000                    450 INIT01   DC    Y(IOINIT),H'0',F'0'  Perform I/O initialization

                                             452 * Service QIOT SPB
0006B0                                       453          DS    0F
0006B0  00020000 00000000                    454 QUERY02  DC    Y(QIOT),H'0',F'0'    Locate the IPL device in the device table

                                             456 * Service ENADEV SPB
                                             457 *         DS    0F      This SPB is used for testing ENADEV service
                                             458 *ENADEV03 DC    Y(ENADEV),X'0110',X'00000000'  Add a device

0006B8                                       460          DS    0F
                                             461 * Service EXCP SPB
0006B8  00040C00                             462 EXCP04   DC    Y(EXCP),AL1(SPBEWDC),XL1'0'
                                             463 EXCPORB  BLSORB CCW=FBACCW1
0006BC                                       465+EXCPORB  DS    0XL12
0006BC  00000000                             466+         DC    A(0)                         Word 0 - Interruption Parameter
0006C0  00                                   467+         DC    AL1((0)*16+B'0000')          Word 1, bits 0-7
0006C1  00                                   468+         DC    BL1'00000000'                Word 1, bits 8-15
0006C2  FF                                   469+         DC    AL1(255)                     Word 1, bits 16-23
0006C3  00                                   470+         DC    BL1'00000000'                 Word 1, bits 24-31
0006C4  00000720                             471+         DC    AL4(FBACCW1)                 Word 2 - CCW address



                                             473 * End the bare-metal program with an error indicated in PSW
0006C8  9204 C361                   000767   474 DEVNOAVL MVI   DIE+7,X'04'   Code 004 device is not available
0006CC  8200 C35A                   000760   475          LPSW  DIE
0006D0  9208 C361                   000767   476 DEVBUSY  MVI   DIE+7,X'08'   Code 008 device is busy (no wait)
0006D4  8200 C35A                   000760   477          LPSW  DIE
0006D8  920C C361                   000767   478 DEVCSW   MVI   DIE+7,X'0C'   Code 00C CSW stored in ASA
0006DC  8200 C35A                   000760   479          LPSW  DIE
0006E0  9210 C361                   000767   480 DEVUNKN  MVI   DIE+7,X'10'   Code 010 unexpected device caused I/O interruption
0006E4  8200 C35A                   000760   481          LPSW  DIE
                                             482 *SERVERR  MVI   DIE+7,X'14'   Code 014 booted program may not call this service
                                             483 *         LPSW  DIE
0006E8  9218 C361                   000767   484 BADDEVT  MVI   DIE+7,X'18'   Code 018 IPL device type unsupported
ASMA Ver. 0.2.0  FBA BOOT LOADER - PROCESSING                                                       07 Sep 2020 09:13:11  Page    13

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

0006EC  8200 C35A                   000760   485          LPSW  DIE
0006F0  921C C361                   000767   486 OVRWRITE MVI   DIE+7,X'1C'   Code 01C Overwriting boot loader
0006F4  8200 C35A                   000760   487          LPSW  DIE
0006F8  9220 C361                   000767   488 DESTRT   MVI   DIE+7,X'20'   Code 020 Destructive overlap detected by MVCL
0006FC  8200 C35A                   000760   489          LPSW  DIE
000700  9224 C361                   000767   490 CUMERROR MVI   DIE+7,X'24'   Code 024 Cumulative booted program sizes do no match
000704  8200 C35A                   000760   491          LPSW  DIE
000708  9228 C361                   000767   492 AMERROR  MVI   DIE+7,X'28'   Code 028 Can not change booted pgm addressing mode
00070C  8200 C35A                   000760   493          LPSW  DIE
000710  922C C361                   000767   494 ARCHBAD  MVI   DIE+7,X'2C'   Code 028 Incompatible assembled vs run-time archs
000714  8200 C35A                   000760   495          LPSW  DIE

                                             497 * General Constants:
000718  00000001                             498 ONE      DC    F'1'      The constant 'one'.

                                             500 * I/O related information
00071C  0000                                 501 IPLDEV   DC    XL2'0000'   IPL device address from I/O interrupt information


                                             503 *
                                             504 * FBA CCW chain used by the boot loader to read a directed record
                                             505 *
000720  63000738 40000010                    506 FBACCW1  CCW   DEFN_EXT,EXTENT,CC,EXTENTL   Define extent for the read
000728  43000748 40000008                    507 FBACCW2  CCW   LOC_DATA,LOCATE,CC,LOCATEL   Establish location for read
000730  42000000 00000000                    508 FBACCW3  CCW   READ,0,0,0                   Read the directed record
                                             509 *         CCW   NOP,0,0,1                    ..then a NOP.
                                             510 * If the preceding NOP CCW command is enabled, then the FBACCW3 must set
                                             511 * command chaining in the flag byte, setting the third operand to X'40'

                                             513 * FBA extent used for reading a directed record.  Unlike typical operations
                                             514 * where the extent is constant and the locate data changes, when reading
                                             515 * directed boot loader records, the extent changes and the locate information
                                             516 * remains unchanged.
000738  40000000                             517 EXTENT   DC    XL4'40000000'   Extent file mask: Inhibit all writes
00073C  00000000                             518 FRSTPSEC DC    FL4'0'       ** Physical first sector of the extent
000740  00000000                             519 FRSTLSEC DC    FL4'0'          First logical sector of the extent, always 0
                                             520 * Last logical sector of the extent, always the same based upon record length
000744  00000000                             521 ENDLSEC  DC    FL4'0'
                            000010  000001   522 EXTENTL  EQU   *-EXTENT        Length of an FBA extent (16 bytes)
                                             523 * ** This field is adjusted for each read of a directed record.

                                             525 * FBA locate used for reading a directed record
000748  06                                   526 LOCATE   DC    XL1'06'         Read sector operation being performed
000749  00                                   527          DC    XL1'00'         Replication count ignored for read sector
00074A  0000                                 528 LOCSECS  DC    HL2'0'          Number of sectors being read
00074C  00000000                             529          DC    FL4'0'          First sector (relative to the extent), always 0
                            000008  000001   530 LOCATEL  EQU   *-LOCATE        Length of the FBA locate information (8 bytes)


                                             532 * PSW used by the boot loader
                                             533 PGMRS    DWAIT CODE=008     Restart New PSW trap.  Points to Restart Old PSW
000750  00020000 00010008                    534+PGMRS    PSW   0,0,2,0,X'010008'
ASMA Ver. 0.2.0  FBA BOOT LOADER - PROCESSING                                                       07 Sep 2020 09:13:11  Page    14

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT



                                             536 * PSW's terminating program execution
                                             537 DONE     DWAITEND              Successful execution of the program
000758  00020000 00000000                    539+DONE     PSW   0,0,2,0,X'000000'
                                             540 DIE      DWAIT PGM=05,CMP=0,CODE=000  Code set at run-time
000760  00020000 00050000                    541+DIE      PSW   0,0,2,0,X'050000'
ASMA Ver. 0.2.0  BOOT LOADER - SERVICES                                                             07 Sep 2020 09:13:11  Page    15

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             543          COPY  'bls.asm'
                                             544 * Copyright (C) 2020 Harold Grovesteen
                                             545 *
                                             546 * This file is part of SATK.
                                             547 *
                                             548 *     SATK is free software: you can redistribute it and/or modify
                                             549 *     it under the terms of the GNU General Public License as published by
                                             550 *     the Free Software Foundation, either version 3 of the License, or
                                             551 *     (at your option) any later version.
                                             552 *
                                             553 *     SATK is distributed in the hope that it will be useful,
                                             554 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
                                             555 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                             556 *     GNU General Public License for more details.
                                             557 *
                                             558 *     You should have received a copy of the GNU General Public License
                                             559 *     along with SATK.  If not, see <http://www.gnu.org/licenses/>.
                                             560 *
                                             561 *
                                             562 * The Boot Loader Services Framework
                                             563 *

                                             565 BLS      SERVS  SERVTBL
000768                                       566+BLS      DS    0H   Boot Loader 32-bit services entry point
000768                      000000           567+         USING ASA,0          Address Assigned Storage area
000768                      000000           568+         USING SPB,1          Pointer to Service Parameter Block
000768                      000000           569+         USING SAVEA,13       Register save area from caller
000768  90EC D00C                   00000C   570+         $STM  14,12,SAVER14       Preserve caller's registers except R13
00076C  18CF                                 571+         $LR   12,15          Establish my local register
00076E                      000768           572+         USING BLS,12         ..and tell the assembler

                                             574+* Locate the service's entry point
00076E  4820 1000                   000000   575+         $LH   2,SPBID         Fetch the Service ID from the SPB
000772  D500 1001 0257              000257   576+         CLC   SPBID+1(1),LOD1BLSV  Is ID valid? (Must be < LOD1 number)
000778  4740 C01A                   000782   577+         $BL   CALLSRV         ..Yes, call the service then
00077C  11F2                                 578+         $LNR  15,2            Turn the Service ID into a negative value
00077E  47F0 C038                   0007A0   579+         $B    BLSR            Return to caller with invalid Service ID

000782                                       581+CALLSRV  DS    0H              Call the actual service now
000782  8920 0002                   000002   582+         SLL   2,2             Turn Service ID into table displacement (x4)
000786  4122 C044                   0007AC   583+         LA    2,SERVTBL(2)    Turn displacement into an address
00078A  5822 0000                   000000   585+         L     2,0(2)             Load fullword
00078E  1222                                 586+         LTR   2,2                Set condition code by testing loaded value
000790  4770 C034                   00079C   587+         $BNZ  BLSCALL         Table entry not zero, so can call it
000794  48F0 C042                   0007AA   588+         $LH   15,BLSMONE      Set return code to negative one
000798  47F0 C038                   0007A0   589+         $B    BLSR            ..and return to caller

00079C                                       591+BLSCALL  DS    0H         Good address!
00079C  18C2                                 592+         $LR   12,2       Set up base register for service routine
00079E  07FC                                 593+         BR    12         Go to the requested service (use as base register)

0007A0                                       595+BLSR     DS    0H             Return to service caller from requested service
ASMA Ver. 0.2.0  BOOT LOADER - SERVICES                                                             07 Sep 2020 09:13:11  Page    16

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             596+* Return from called service has the caller's save area in R13
0007A0                      000000           597+         USING SAVEA,13
0007A0  5000 D010                   000010   598+         $ST   0,SAVER15         Save return code in caller's save area
0007A4  98EC D00C                   00000C   599+         $LM   14,12,SAVER14     Restore caller's registers
                                             600+* Retrun is actually in R15 now
0007A8  07FE                                 601+         BR    14                Return to caller

0007AA  FFFF                                 603+BLSMONE  DC    H'-1'          Negative one used for empty service slot



                                             605 *
                                             606 * Boot Loader Service Table
                                             607 *

                                             609          BLSTABLE
0007AC  000007C8                             611+SERVTBL  DC    A(SERVNOOP)
                            000000  000001   612+NOOP     EQU   0
0007B0  000007F4                             614+         DC    A(SERVIOIN)
                            000001  000001   615+IOINIT   EQU   1
0007B4  00000874                             617+         DC    A(SERVQIOT)
                            000002  000001   618+QIOT     EQU   2
0007B8  000008B0                             620+         DC    A(SERVENAD)
                            000003  000001   621+ENADEV   EQU   3
0007BC  0000098C                             623+         DC    A(SERVEXCP)
                            000004  000001   624+EXCP     EQU   4
0007C0  00000B60                             626+         DC    A(SERVPEND)
                            000005  000001   627+PNDING   EQU   5
                            000006  000001   629+BLSNUM   EQU   6           Number of defined services



                                             631 * Register Contents at service entry
                                             632 *  R0  - unpredictable but usable (also ASA base register)
                                             633 *  R1  - Pointer to Service Parameter Block (passed by framework)
                                             634 *  R2  - unpredictable but usable (used by service framework as work register)
                                             635 *  R3  - unpredictable but usable
                                             636 *  R4  - unpredictable but usable
                                             637 *  R5  - unpredictable but usable
                                             638 *  R6  - unpredictable but usable
                                             639 *  R7  - unpredictable but usable
                                             640 *  R8  - unpredictable but usable
                                             641 *  R9  - unpredictable but usable
                                             642 *  R9  - unpredictable but usable
                                             643 *  R10 - unpredictable but usable
                                             644 *  R11 - unpredictable but usable
                                             645 *  R12 - The service's entry point (set by service framework, use as base)
                                             646 *  R13 - Pointer to service CALLER'S save area (passed by framework)
                                             647 *  R14 - unpredictable but usable
                                             648 *  R15 - unpredictable but usable
                                             649 *
ASMA Ver. 0.2.0  BOOT LOADER - SERVICES                                                             07 Sep 2020 09:13:11  Page    17

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             651 * Use LOD1RTN address to return to caller from the service.
                                             652 * Register usage on entry to SERVRTN
                                             653 *  R0 - Return code from service.  Framework will move it to R15
                                             654 *  R13 - Service caller's save area
                                             655 *  R15 - Address from LOD1RTN to return to framework
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 0 - NOOP                                                     07 Sep 2020 09:13:11  Page    18

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             657 *
                                             658 * Boot Loader Service - 0 - NOOP
                                             659 *

                                             661          SERVNOOP
0007C4                                       663+         DS    0F
0007C4  C2D3E200                             664+         DC    CL3'BLS',AL1(NOOP)
0007C8                                       665+SERVNOOP DS    0H             Start of service
0007C8                      0007C8           666+         USING SERVNOOP,12    Establish service addressing
0007C8                      000000           667+         USING ASA,0          Address the ASA
0007C8                      000000           668+         USING SPB,1          Address the SPB (address from framework)
0007C8                      000000           669+         USING SAVEA,13       Address caller's save area
                                             670+         LA    2,EOBL+(NOOPSAVE-DMEMORY) \
0007C8  4120 C458                   000C20      +                                      Point to my save area
0007CC  5020 D008                   000008   671+         $ST   2,SAVEFWD      Save my save area address in caller's save area
0007D0                                       672+         DROP  13             Forget caller's save area
0007D0                      000000           673+         USING SAVEA,2        Now address MY save area
0007D0  50D0 2004                   000004   674+         $ST   13,SAVEBCK     Preserve caller's R13 now in my save area
0007D4  18D2                                 675+         $LR   13,2           Now point save area to MY save area with R13
0007D6                                       676+         DROP  2
0007D6                      000000           677+         USING SAVEA,13       Re-establish addressing to my save area with R13
0007D6  48B0 1002                   000002   678+         $LH   11,SPBSI        Get the service information
0007DA  41B0 B001                   000001   679+         LA    11,1(,11)       Increment the service information by 1
0007DE  40B0 1002                   000002   680+         STH   11,SPBSI        Set new value in service information
0007E2  1B00                                 681+         $SR   0,0             Set the condition code to zero
0007E4                      000000           683+         USING SAVEA,13      On return, service points to its save area
0007E4  58D0 D004                   000004   684+         $L    13,SAVEBCK     Restore caller's save area address from service
                                             685+* R13 now points to the caller's registers
0007E8  58F0 0278                   000278   686+         L     15,LOD1RTN      Return to the framework for the return
0007EC                                       687+         DROP  0               Forget ASA
0007EC                                       688+         DROP  13              Forget any save area addressing as we leave
0007EC  07FF                                 689+         BR    15              Return now to the framework...

ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 1 - IOINIT                                                   07 Sep 2020 09:13:11  Page    19

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             692 *
                                             693 * Boot Loader Service - 1 - IOINIT
                                             694 *
                                             695 * Register Usage:
                                             696 *   R0 - Return Code
                                             697 *   R1 - Address of the INTHND SPB when used
                                             698 *   R3 - Used to point to caller's save area when booted program being checked
                                             699 *   R4 - Address of the IOINIT input SPB (from R1 entry contents)
                                             700 *   R5 - Start of I/O table address and table entry start
                                             701 *   R6 - I/O table entry length
                                             702 *   R7 - Address of the last byte of the I/O table itself
                                             703 *   R12 - Base register
                                             704 *   R15 - Return address to serivce framework

                                             706          SERVIOIN
0007F0                                       708+         DS    0F
0007F0  C2D3E201                             709+         DC    CL3'BLS',AL1(IOINIT)
0007F4                                       710+SERVIOIN DS    0H             Start of service
0007F4                      0007F4           711+         USING SERVIOIN,12    Establish service addressing
0007F4                      000000           712+         USING ASA,0          Address the ASA
0007F4                      000000           713+         USING SPB,1          Address the SPB (address from framework)
0007F4                      000000           714+         USING SAVEA,13       Address caller's save area
                                             715+         LA    2,EOBL+(IOINSAVE-DMEMORY) \
0007F4  4120 C474                   000C68      +                                      Point to my save area
0007F8  5020 D008                   000008   716+         $ST   2,SAVEFWD      Save my save area address in caller's save area
0007FC                                       717+         DROP  13             Forget caller's save area
0007FC                      000000           718+         USING SAVEA,2        Now address MY save area
0007FC  50D0 2004                   000004   719+         $ST   13,SAVEBCK     Preserve caller's R13 now in my save area
000800  18D2                                 720+         $LR   13,2           Now point save area to MY save area with R13
000802                                       721+         DROP  2
000802                      000000           722+         USING SAVEA,13       Re-establish addressing to my save area with R13
                                             723+* Move input option to INTHND SPB for call
000802  1841                                 724+         $LR   4,1              Need to free up R1 for I/O commands
000804                                       725+         DROP  1
000804                      000000           726+         USING SPB,4            Set new register for addressing input SPB

000804                                       728+IOIA0043 DS    0H    Add IPL Device to the I/O Table
000804  4160 C5DC                   000DD0   729+         LA    6,EOBL+(IOTBL-DMEMORY)   Locate the start of the I/O table
000808  5060 C3D4                   000BC8   730+         ST    6,IOTBLBA                Set up BXLE sum register
00080C  5850 C3D0                   000BC4   731+         L     5,IOTMAX                 Fetch the length of the table
000810  1E56                                 732+         ALR   5,6                      Calculate the byte following the table
000812  5050 C3D0                   000BC4   733+         ST    5,IOTMAX                 Replace length with addresss
000816                      000000           734+         USING BLSIOT,6                 Point to the first entry.
                                             735+* Add the IPL device to the I/O Table
000816  4850 00BA                   0000BA   736+         $LH   5,IOICODE                Fetch the IPL device address
00081A  4050 6000                   000000   737+         STH   5,BLSDEV                 Add the channel/unit address to IOTE
00081E  5050 6004                   000004   738+         ST    5,BLSHDW                 Make it the hardware address too
000822  D200 6002 4002      000002  000002   739+         MVC   BLSTYP,SPBSI             Set device type from SPB SI

                                             741+* Generate the IPL device status error mask
000828  92F1 600C                   00000C   743+         MVI   BLSERR,X'F1'        This is the generic device error check
                                             744+* This checks for these error conditions:
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 1 - IOINIT                                                   07 Sep 2020 09:13:11  Page    20

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             745+*   X'80' - Attention (MAY BE TURNED OFF FOR SOME DEVICES)
                                             746+*   X'40' - Status Modifier
                                             747+*   X'20' - Control-Unit End
                                             748+*   X'10' - Busy
                                             749+*   X'01' - Unit Exception (MAY BE TURNED OFF FOR SOME DEVICES)
                                             750+*
                                             751+* While Unit Check is an error condition, it must be explicitly checked so
                                             752+* that the service can indicate a pending action to read sense data by the
                                             753+* program.  Yes, it is an error condition, but requires special handling.
                                             754+* When set, the service indicates both an error condition AND a pending action.
                                             755+*   X'02' - Unit Check (sense is pending)
                                             756+*
                                             757+* This ignores these normal status conditions.  They must be checked by the
                                             758+* service depending upon the EXCP SPB controls.
                                             759+*   X'08' - Channel end
                                             760+*   X'04' - Device end

                                             762+* If device recognizes physical end-of-file with Unit Exception, not an error
                                             763+* So turn it off.
00082C  9180 6002                   000002   764+         TM    BLSTYP,BLSPEOF      Does device use UE for end-of-file condition?
000830  47E0 C044                   000838   765+         $BNO  ERRU0045            ..No, check if device uses ATTN
000834  94FE 600C                   00000C   766+         NI    BLSERR,X'FE'        ..Yes, turn off UE as an error status

                                             768+* If device signals data is ready with Attention, turn it off as an error.
000838  9140 6002                   000002   769+ERRU0045 TM    BLSTYP,BLSUNSOL     Does device use ATTN when data is ready?
00083C  47E0 C050                   000844   770+         $BNO  ERRX0045            ..No, modifications to error status done
000840  947F 600C                   00000C   771+         NI    BLSERR,X'7F'        ..Yes, turn off ATTN as an error status

                                             773+* Note: At present no device uses UE for physical end-of-file and Attention
                                             774+* for data ready, but this code allows for both to be set in the device
                                             775+* class value.

000844                                       777+ERRX0045 DS    0H  Error mask completed
000844  5060 4004                   000004   778+         ST    6,SPBIOTA                Return to caller the IPL device's IOTA
000848                                       779+         DROP  6                        Done with the table for now
000848  4170 601F                   00001F   780+         LA    7,BLSIOEL-1(,6)          Add the entry length -1
00084C  5070 C3DC                   000BD0   781+         ST    7,IOTBLEA                Set up the BXLE comparand register
000850  9201 4002                   000002   782+         MVI   SPBSI,X'01'          Indicate CCW Format 0 in use
000854  47F0 C06C                   000860   783+         B     IOINRTN0             Return to my caller
000858  4100 0004                   000004   784+IOINRTN4 LA    0,4               Set return code 4 from service
00085C  47F0 C06E                   000862   785+         $B    IOINRTN           Return to caller
000860  1B00                                 786+IOINRTN0 $SR   0,0               Set return code from service
000862                                       787+         DROP  4                 Forget input SPB
000862                      000000           789+         USING SAVEA,13      On return, service points to its save area
000862  58D0 D004                   000004   790+IOINRTN  $L    13,SAVEBCK     Restore caller's save area address from service
                                             791+* R13 now points to the caller's registers
000866  58F0 0278                   000278   792+         L     15,LOD1RTN      Return to the framework for the return
00086A                                       793+         DROP  0               Forget ASA
00086A                                       794+         DROP  13              Forget any save area addressing as we leave
00086A  07FF                                 795+         BR    15              Return now to the framework...

00086C                                       797+         DS    0F      Make sure interruption mask is on a fullword boundary
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 1 - IOINIT                                                   07 Sep 2020 09:13:11  Page    21

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

00086C  FFFFFFFF                             798+INTMASK  DC    X'FFFFFFFF'      Enable all channels for interruptions
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 2 - QIOT                                                     07 Sep 2020 09:13:11  Page    22

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             800 *
                                             801 * Boot Loader Service - 2 - QIOT
                                             802 *
                                             803 * Register Usage:
                                             804 *   R0 - Return Code
                                             805 *   R1 - Address of the SPB and its extention
                                             806 *   R5 - Start of I/O table address and table entry start
                                             807 *   R6 - I/O table entry length
                                             808 *   R7 - Address of the last byte of the I/O table itself
                                             809 *   R12 - Base register
                                             810 *   R15 - Return address to serivce framework

                                             812          SERVQIOT
000870                                       814+         DS    0F
000870  C2D3E202                             815+         DC    CL3'BLS',AL1(QIOT)
000874                                       816+SERVQIOT DS    0H             Start of service
000874                      000874           817+         USING SERVQIOT,12    Establish service addressing
000874                      000000           818+         USING ASA,0          Address the ASA
000874                      000000           819+         USING SPB,1          Address the SPB (address from framework)
000874                      000000           820+         USING SAVEA,13       Address caller's save area
                                             821+         LA    2,EOBL+(QIOTSAVE-DMEMORY) \
000874  4120 C43C                   000CB0      +                                      Point to my save area
000878  5020 D008                   000008   822+         $ST   2,SAVEFWD      Save my save area address in caller's save area
00087C                                       823+         DROP  13             Forget caller's save area
00087C                      000000           824+         USING SAVEA,2        Now address MY save area
00087C  50D0 2004                   000004   825+         $ST   13,SAVEBCK     Preserve caller's R13 now in my save area
000880  18D2                                 826+         $LR   13,2           Now point save area to MY save area with R13
000882                                       827+         DROP  2
000882                      000000           828+         USING SAVEA,13       Re-establish addressing to my save area with R13
000882  1B00                                 829+         $SR   0,0                 Set return code to 0, optimistically
000884  9857 C354                   000BC8   830+         LM    5,7,IOTBLBA         Initialize the search registers
000888                      000000           831+         USING BLSIOT,5
000888                                       832+QIOTLOOP DS    0H                  Check the table entry device number
000888  D501 1002 5000      000002  000000   833+         CLC   SPBSI,BLSDEV         Is this the device being sought?
00088E  4780 C028                   00089C   834+         $BE   QIOFOUND             ..Yes, return the entry's address
000892  8756 C014                   000888   835+         $BXLE 5,6,QIOTLOOP         ..No, try again
                                             836+* Did not find the device in the table
000896  1850                                 837+         $LR   5,0                  Prepare to clear the SPBE
000898  4100 0004                   000004   838+         LA    0,4                  Set return code to 4 (not found)
00089C                                       839+QIOFOUND DS    0H      Found the entry
00089C  5050 1004                   000004   840+         ST    5,SPBIOTA     Return the entry address in the SPBE or zero
0008A0                                       841+         DROP  5
0008A0                      000000           843+         USING SAVEA,13      On return, service points to its save area
0008A0  58D0 D004                   000004   844+QIORETRN $L    13,SAVEBCK     Restore caller's save area address from service
                                             845+* R13 now points to the caller's registers
0008A4  58F0 0278                   000278   846+         L     15,LOD1RTN      Return to the framework for the return
0008A8                                       847+         DROP  0               Forget ASA
0008A8                                       848+         DROP  13              Forget any save area addressing as we leave
0008A8  07FF                                 849+         BR    15              Return now to the framework...
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 3 - ENADEV                                                   07 Sep 2020 09:13:11  Page    23

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             851 *
                                             852 * Boot Loader Service - 3 - ENADEV
                                             853 *
                                             854 * Register Usage:
                                             855 *   R0 - Return Code
                                             856 *   R1 - Hardware device address for I/O commands
                                             857 *   R2 - Address of the new table entry
                                             858 *   R3 - New end of the I/O Table after entry is added
                                             859 *   R4 - Address of the SPB and its extention
                                             860 *   R5 - Address of the existing I/O Table entry of the device
                                             861 *   R6 - Location where channel subsystem SCHIB's are stored
                                             862 *   R12 - Base register
                                             863 *   R15 - Return address to serivce framework

                                             865          SERVENAD
0008AC                                       867+         DS    0F
0008AC  C2D3E203                             868+         DC    CL3'BLS',AL1(ENADEV)
0008B0                                       869+SERVENAD DS    0H             Start of service
0008B0                      0008B0           870+         USING SERVENAD,12    Establish service addressing
0008B0                      000000           871+         USING ASA,0          Address the ASA
0008B0                      000000           872+         USING SPB,1          Address the SPB (address from framework)
0008B0                      000000           873+         USING SAVEA,13       Address caller's save area
                                             874+         LA    2,EOBL+(ENADSAVE-DMEMORY) \
0008B0  4120 C448                   000CF8      +                                      Point to my save area
0008B4  5020 D008                   000008   875+         $ST   2,SAVEFWD      Save my save area address in caller's save area
0008B8                                       876+         DROP  13             Forget caller's save area
0008B8                      000000           877+         USING SAVEA,2        Now address MY save area
0008B8  50D0 2004                   000004   878+         $ST   13,SAVEBCK     Preserve caller's R13 now in my save area
0008BC  18D2                                 879+         $LR   13,2           Now point save area to MY save area with R13
0008BE                                       880+         DROP  2
0008BE                      000000           881+         USING SAVEA,13       Re-establish addressing to my save area with R13
0008BE                                       882+         DROP  1
0008BE  1841                                 883+         $LR   4,1              Need to free up R1 for I/O commands
0008C0                      000000           884+         USING SPB,4            Set new register for addressing SPB
0008C0  1B00                                 885+         SR    0,0              Set return code to 0, optimistically

                                             887+* Determine if device is already in the table
0008C2  D201 C0D0 4002      000980  000002   888+         MVC   ENAQIOT+2,SPBSI   Set device address in my QIOT
0008C8  4110 C0CE                   00097E   890+         LA    1,ENAQIOT
0008CC  58F0 0270                   000270   891+         L     15,LOD1BLST
0008D0  05EF                                 892+         $BASR 14,15
0008D2  12FF                                 893+         LTR   15,15        Test the QIOT return code
0008D4  4770 C04A                   0008FA   894+         BNZ   ENADADD      ..Not found, so device eligible for being added

                                             896+* Make sure the device class is the same
0008D8  5850 C0D2                   000982   897+         L     5,ENAQIOT+SPBIOTA   Fetch the address of the existing entry
0008DC  D500 4004 5002      000004  000002   898+         CLC   SPBDCLS,BLSTYP-BLSIOT(5)  Do the device classes match?
0008E2  4780 C03E                   0008EE   899+         $BE   ENADOK           ..Yes, just return the address
                                             900+* Device class does not match
0008E6  4100 0014                   000014   901+         LA    0,20             Set return code of 20
0008EA  47F0 C0C4                   000974   902+         $B    ENADRTN          Return to caller
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 3 - ENADEV                                                   07 Sep 2020 09:13:11  Page    24

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

0008EE                                       904+ENADOK   DS    0H   Simply return with the I/O Table address
0008EE  5050 4004                   000004   905+         ST    5,SPBIOTA
0008F2  4100 0004                   000004   906+         LA    0,4              Set return address to 4
0008F6  47F0 C0C4                   000974   907+         $B    ENADRTN

0008FA                                       909+ENADADD  DS    0H   Try to add the device to the table
0008FA  5820 C320                   000BD0   910+         L     2,IOTBLEA        Locate the current end of the table
0008FE  1832                                 911+         LR    3,2              Calculate the new end of the table
000900  5E30 C31C                   000BCC   912+         AL    3,IOTBLI         New ending address for new table entry
000904  5530 C314                   000BC4   913+         CL    3,IOTMAX         Did we go beyond the end of the table?
000908  4740 C064                   000914   914+         $BL   ENADTEST         ..No, good to go (room to add new entry)
00090C  4100 0010                   000010   915+         LA    0,16             ..Yes, return with 16 return code, table full
000910  47F0 C0C4                   000974   916+         $B    ENADRTN          Quit now.

000914                                       918+ENADTEST DS    0H   Test if the device is usable.
000914  4120 2001                   000001   919+         LA    2,1(,2)          Point to the table entry being added
000918                      000000           920+         USING BLSIOT,2         Set up addressing for the new I/O Table entry
000918  4810 4002                   000002   921+         LH    1,SPBSI          Fetch the device number (also hardware address)
00091C  9D00 1000                   000000   922+         TIO   0(1)             Test if the device is available or not.
                                             923+* CC==0 (device available) add it to the I/O Table
000920  4780 C092                   000942   924+         BC    B'1000',ENADGOOD
                                             925+* CC==1 (CSW stored in ASA) error status available
000924  4740 C07C                   00092C   926+         BC    B'0100',ENADERR
                                             927+* CC==2 (device or channel busy)
                                             928+*        BC    B'0010', FALL THROUGH
                                             929+* CC==3 (not operational)
                                             930+*        BC    B'0001', FALL THROUGH
000928  47F0 C08A                   00093A   931+         B     ENADNOAV

00092C                                       933+ENADERR  DS    0H       Error status, return code 8
00092C  D201 4006 0044              000044   934+         MVC   SPBDEVST(2),CSW+4   Move error data to SPBE
000932  4100 0008                   000008   935+         LA    0,8                 Exit with return code 8
000936  47F0 C0C4                   000974   936+         $B    ENADRTN

                                             938+ENADNOAV DS    0H \
00093A                                          +                 Device is invalid
00093A  4100 000C                   00000C   939+         LA    0,12     Return with condition code 12
00093E  47F0 C0C4                   000974   940+         $B    ENADRTN

000942                                       942+ENADGOOD DS    0H  Add the channel device to the table...
000942  4010 2000                   000000   943+         STH   1,BLSDEV            Set I/O Table device number
000946  5010 2004                   000004   944+         ST    1,BLSHDW            Set I/O Table hardware address
00094A  D200 2002 4004      000002  000004   945+         MVC   BLSTYP,SPBDCLS      Set the device class in the entry

                                             947+* Create the device error mask from the device class entry
000950  92F1 200C                   00000C   949+         MVI   BLSERR,X'F1'        This is the generic device error check
                                             950+* This checks for these error conditions:
                                             951+*   X'80' - Attention (MAY BE TURNED OFF FOR SOME DEVICES)
                                             952+*   X'40' - Status Modifier
                                             953+*   X'20' - Control-Unit End
                                             954+*   X'10' - Busy
                                             955+*   X'01' - Unit Exception (MAY BE TURNED OFF FOR SOME DEVICES)
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 3 - ENADEV                                                   07 Sep 2020 09:13:11  Page    25

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             956+*
                                             957+* While Unit Check is an error condition, it must be explicitly checked so
                                             958+* that the service can indicate a pending action to read sense data by the
                                             959+* program.  Yes, it is an error condition, but requires special handling.
                                             960+* When set, the service indicates both an error condition AND a pending action.
                                             961+*   X'02' - Unit Check (sense is pending)
                                             962+*
                                             963+* This ignores these normal status conditions.  They must be checked by the
                                             964+* service depending upon the EXCP SPB controls.
                                             965+*   X'08' - Channel end
                                             966+*   X'04' - Device end

                                             968+* If device recognizes physical end-of-file with Unit Exception, not an error
                                             969+* So turn it off.
000954  9180 2002                   000002   970+         TM    BLSTYP,BLSPEOF      Does device use UE for end-of-file condition?
000958  47E0 C0B0                   000960   971+         $BNO  ERRU0053            ..No, check if device uses ATTN
00095C  94FE 200C                   00000C   972+         NI    BLSERR,X'FE'        ..Yes, turn off UE as an error status

                                             974+* If device signals data is ready with Attention, turn it off as an error.
000960  9140 2002                   000002   975+ERRU0053 TM    BLSTYP,BLSUNSOL     Does device use ATTN when data is ready?
000964  47E0 C0BC                   00096C   976+         $BNO  ERRX0053            ..No, modifications to error status done
000968  947F 200C                   00000C   977+         NI    BLSERR,X'7F'        ..Yes, turn off ATTN as an error status

                                             979+* Note: At present no device uses UE for physical end-of-file and Attention
                                             980+* for data ready, but this code allows for both to be set in the device
                                             981+* class value.

00096C                                       983+ERRX0053 DS    0H  Error mask completed

00096C                                       985+ENADSSPB DS    0H   Update the SPBE with the entry's address
00096C  5020 4004                   000004   986+         ST    2,SPBIOTA           Set the I/O Table entry address in SPBE
                                             987+* Officially add the entry to the table
000970  5030 C320                   000BD0   988+         ST    3,IOTBLEA           Update the end of the table
000974                      000000           990+         USING SAVEA,13      On return, service points to its save area
000974  58D0 D004                   000004   991+ENADRTN  $L    13,SAVEBCK     Restore caller's save area address from service
                                             992+* R13 now points to the caller's registers
000978  58F0 0278                   000278   993+         L     15,LOD1RTN      Return to the framework for the return
00097C                                       994+         DROP  0               Forget ASA
00097C                                       995+         DROP  13              Forget any save area addressing as we leave
00097C  07FF                                 996+         BR    15              Return now to the framework...

00097E  00020000 00000000                    998+ENAQIOT  DC    Y(QIOT),H'0',F'0'  Check to see if device in table
000986  0000
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 4 - EXCP                                                     07 Sep 2020 09:13:11  Page    26

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                            1000 *
                                            1001 * Boot Loader Service - 4 - EXCP
                                            1002 *
                                            1003 * SPB:
                                            1004 *      SPB Bytes 0,1   - EXCP Service ID (4)
                                            1005 *      SPB Byte 2      - SI EXCP input function control mask (See SPB DSECT)
                                            1006 *      SPB Byte 3      - not used
                                            1007 *      SPB Bytes 4-7   - ORB - I/O Table device entry address
                                            1008 *      SPB Bytes 8-11  - ORB - Key and flags
                                            1009 *      SPB Bytes 12-15 - ORB - CCW program starting address
                                            1010 *
                                            1011 * Register Usage:
                                            1012 *   R0 - Return Code
                                            1013 *   R1 - Hardware device address for I/O commands (from I/O Table)
                                            1014 *   R2 -
                                            1015 *   R3 - I/O Error execution register
                                            1016 *   R4 - Address of the SPB and its extention (the ORB)
                                            1017 *   R5 - Address of the primary device IOT entry
                                            1018 *   R6 - Interrupting device I/O Table entry (may not be the R5 entry)
                                            1019 *   R7 - Start of I/O table address and table entry start --------+
                                            1020 *        When found this becomes the secondary device IOT address |
                                            1021 *   R8 - I/O table entry length                                   |-- BXLE
                                            1022 *   R9 - Address of the last byte of the I/O table itself --------+
                                            1023 *   R12 - Base register
                                            1024 *   R15 - Return address to serivce framework
                                            1025 *

                                            1027 SERVEXCP SERVEXCP
000988                                      1029+         DS    0F
000988  C2D3E204                            1030+         DC    CL3'BLS',AL1(EXCP)
00098C                                      1031+SERVEXCP DS    0H             Start of service
00098C                      00098C          1032+         USING SERVEXCP,12    Establish service addressing
00098C                      000000          1033+         USING ASA,0          Address the ASA
00098C                      000000          1034+         USING SPB,1          Address the SPB (address from framework)
00098C                      000000          1035+         USING SAVEA,13       Address caller's save area
                                            1036+         LA    2,EOBL+(EXCPSAVE-DMEMORY) \
00098C  4120 C3B4                   000D40      +                                      Point to my save area
000990  5020 D008                   000008  1037+         $ST   2,SAVEFWD      Save my save area address in caller's save area
000994                                      1038+         DROP  13             Forget caller's save area
000994                      000000          1039+         USING SAVEA,2        Now address MY save area
000994  50D0 2004                   000004  1040+         $ST   13,SAVEBCK     Preserve caller's R13 now in my save area
000998  18D2                                1041+         $LR   13,2           Now point save area to MY save area with R13
00099A                                      1042+         DROP  2
00099A                      000000          1043+         USING SAVEA,13       Re-establish addressing to my save area with R13
00099A                                      1044+         DROP  1
00099A  1841                                1045+         $LR   4,1     Free up R1 for I/O commands and preserve SPB
00099C                      000000          1046+         USING SPB,4
00099C  1F00                                1047+         $SLR  0       Set the return code to 0, optimistically

                                            1049+*
                                            1050+* Validate the ORB
                                            1051+*
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 4 - EXCP                                                     07 Sep 2020 09:13:11  Page    27

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

00099E  D503 4004 C23C      000004  000BC8  1052+         CLC   SPBEORBT,IOTBLBA     Is the I/O Table address below table?
0009A4  4740 C198                   000B24  1053+         $BL   EXCP16RC             ..Yes, not a valid address
0009A8  D503 4004 C244      000004  000BD0  1054+         CLC   SPBEORBT,IOTBLEA     Is the address beyond the table?
0009AE  4720 C198                   000B24  1055+         $BH   EXCP16RC             ..Yes, not a valid address
0009B2  9103 4007                   000007  1056+         TM    SPBEORBT+3,X'03'     Is the address on a full word?
0009B6  4770 C198                   000B24  1057+         $BNZ  EXCP16RC             ..No, not a valid address
0009BA  910F 4008                   000008  1058+         TM    SPBEORBK,SPBEORBR    Are bits 4-7 of the key field zeros?
0009BE  4770 C198                   000B24  1059+         $BNZ  EXCP16RC             ..No, not valid for an ORB
0009C2  9500 4009                   000009  1060+         CLI   SPBEORB1,X'00'       Is the F flag zero (and the rest zeros)?
0009C6  4770 C198                   000B24  1061+         $BNE  EXCP16RC             ..No, not a valid flag setting
0009CA  9500 400B                   00000B  1062+         CLI   SPBEORB2,X'00'       Is byte 3 of word 1 zero?
0009CE  4770 C198                   000B24  1063+         $BNE  EXCP16RC             ..No, not valid for an ORB



                                            1065+*
                                            1066+* STEP 1 - Start I/O operations for the device
                                            1067+*
0009D2  D200 C1CE 4002      000B5A  000002  1068+         MVC   PDEVENDS,SPBECTL     Move the SPB SI control mask
0009D8  940C C1CE                   000B5A  1069+         NI    PDEVENDS,PDEVENDM    Isolate channel end and device end bits
                                            1070+* This mask will be used to determine when the primary device is done

0009DC  9180 4002                   000002  1072+         TM    SPBECTL,SPBEBY1      Is the channel program bypassed?
0009E0  4710 C090                   000A1C  1073+         $BO   EXCPDOWT             ..Yes, go to step 2, waiting
0009E4  D502 400D C1C4      00000D  000B50  1074+         CLC   SPBEORBP,EXCPZERO    Is channel program address missing?
0009EA  4780 C198                   000B24  1075+         $BE   EXCP16RC             ..Yes, not valid for this ORB

0009EE  5850 4004                   000004  1077+         L     5,SPBEORBT           Fetch the I/O Table entry address from ORB
0009F2                      000000          1078+         USING BLSIOT,5             Address the entry
                                            1079+* NEED TO CHECK FOR BUSY STATE
0009F2  D200 0048 4008      000048  000008  1080+         MVC   CAWKEY,SPBEORBK      Move the key to the CAW in ASA
0009F8  D202 0049 400D      000049  00000D  1081+         MVC   CAWADDR,SPBEORBP     Move the CCW address to the CAW in ASA
0009FE  D201 5008 C1C4      000008  000B50  1082+         MVC   BLSUNCH,EXCPZERO     Clear the status field to zeros
000A04  5810 5004                   000004  1083+         L     1,BLSHDW             Fetch the device's hardware address

                                            1085+* Try to start the I/O at the primary device
000A08  9C00 1000                   000000  1086+         SIO   0(1)     Request device channel program to start, did it?
000A0C  4740 C18C                   000B18  1087+         BC    B'0100',EXCP12RC     ..No, CC=1 device not available
000A10  4720 C18C                   000B18  1088+         BC    B'0010',EXCP12RC     ..No, CC=2 device or channel is busy
000A14  4710 C180                   000B0C  1089+         BC    B'0001',EXCP08RC     ..No, CC=3 CSW stored in ASA at X'40'
                                            1090+* I/O Started - busy with my work.  Indicate the device is busy...
000A18  9280 5003                   000003  1091+         MVI   BLSTATUS,BLSBUSY     ..and clear other status bits



                                            1093+*
                                            1094+* STEP 2 - Wait for I/O Operation to complete with an interruption
                                            1095+*
000A1C                                      1096+EXCPDOWT DS    0H   Wait for an interrupt from a device
000A1C  D207 0078 C1B4              000B40  1097+         MVC   IONPSW(8),EXCPCONT   Set up new PSW for after I/O interrupt
000A22  8200 C1AC                   000B38  1098+         $LPSW EXCPWAIT   Wait for I/O interruption and CSW from channel
                            000A26  000001  1099+EXCPDONE EQU   *          EXCP continues here after I/O interruption
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 4 - EXCP                                                     07 Sep 2020 09:13:11  Page    28

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

000A26  D207 0078 C1BC              000B48  1100+         MVC   IONPSW(8),EXCPTRAP   Restore I/O trap PSW
                                            1101+* Determine if an unexpected interrupt occurred
000A2C  D201 00BA 003A      0000BA  00003A  1102+         MVC   IOICODE,IOOPSW+2   Move BC-mode interrupt code to ASA from PSW
000A32  4910 00BA                   0000BA  1103+         CH    1,IOICODE     Is the interrupt from the primary device?
000A36  4770 C0B8                   000A44  1104+         BNE   EXCPFIND       ..No, find the secondary device's IOT entry
000A3A  9201 C248                   000BD4  1105+         MVI   INTSRC,INTPRI  ..Yes, remember it is the primary device
000A3E  1875                                1106+         LR    7,5            Set up R7 for IOT entry base, as used below
000A40  47F0 C0D6                   000A62  1107+         B     EXCPMVST       Move it to the primary device IOT entry
000A44                                      1108+         DROP  5

                                            1110+*
                                            1111+* Locate the secondary interrupting device IOT entry from its hardware address
                                            1112+*
000A44  9879 C23C                   000BC8  1113+EXCPFIND LM    7,9,IOTBLBA         Initialize the search registers
000A48                      000000          1114+         USING BLSIOT,7
                                            1115+*Same logic as in QIOT service, except looking for hardware address
000A48                                      1116+EXCPQIOT DS    0H
000A48  D501 00BA 7006      0000BA  000006  1117+         CLC   IOICODE,BLSHDW+2     Is this the primary device?
000A4E  4780 C0D2                   000A5E  1118+         $BE   EXCPFNDS             ..Yes, found the secondary device
000A52  8778 C0BC                   000A48  1119+         $BXLE 7,8,EXCPQIOT         ..No, try another device
                                            1120+* Did not find the device in the table, so can not be the expected device
                                            1121+* Only devices in the table are processable here, so ignore unknown device
000A56  9200 C248                   000BD4  1122+         MVI   INTSRC,X'00'   From an unknown device
000A5A  47F0 C090                   000A1C  1123+         $B    EXCPDOWT       Try for an interrupt from the primary device
000A5E  9202 C248                   000BD4  1124+EXCPFNDS MVI   INTSRC,INTSEC  Remember the interrupt is from a secondary device

000A62                                      1126+EXCPMVST DS    0H    Move the status to the found IOT entry
                                            1127+* Clear unused bytes
000A62  D203 7011 C1C4              000B50  1128+         MVC   BLSSW+1(4),EXCPZERO
                                            1129+* Move the CSW flag
000A68  D200 7010 0040              000040  1130+         MVC   BLSSW+(SCSWFLAG-SCSW)(L'SCSWFLAG),CSW+(CSWFLAG-CSWFMT)
                                            1131+* Move the CSW CCW address, status, and residual count fields
000A6E  D206 7015 0041              000041  1132+         MVC   BLSSW+(SCSWCCW+SCSW)+1(7),CSW+(CSWCCW-CSWFMT)

                                            1134+* Accumulate the status for this device
000A74  D601 7008 7018      000008  000018  1135+         OC    BLSUNCH,BLSSW+(SCSWUS-SCSW)
000A7A  9602 7003                   000003  1136+         OI    BLSTATUS,BLSTATS       BLSUNCH has status



                                            1138+*
                                            1139+* STEP 3 - Analyze Status (from either expected or unexpected device)
                                            1140+*
000A7E                                      1141+EXCPANAL DS    0H   Analyze status in the IOT entry
000A7E  9102 7003                   000003  1142+         TM    BLSTATUS,BLSTATS    Status in the IOT entry?
000A82  4710 C0FC                   000A88  1143+         $BO   *+6                 ..Yes, keep going
000A86  0000                                1144+         DC    H'0'                ..No, should have status here.  DIE!

                                            1146+* Determine if unsolicited status normal for this device
000A88  9140 7002                   000002  1147+         TM    BLSTYP,BLSUNSOL     Does the device generate unsolicited ATTN?
000A8C  47E0 C122                   000AAE  1148+         $BNO  EXCPSOL             ..No, so solicited status
000A90  9180 7008                   000008  1149+         TM    BLSUNIT,BLSATTN     ..Yes, so is this an ATTN?
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 4 - EXCP                                                     07 Sep 2020 09:13:11  Page    29

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

000A94  47E0 C122                   000AAE  1150+         BNO   EXCPSOL     ..No, so assume solicited status for primary device
000A98  9204 700B                   00000B  1151+         MVI   BLSACT,BLSREAD      ..Yes, indicate this device needs a read
000A9C  9620 7003                   000003  1152+         OI    BLSTATUS,BLSTATO    There is a pending action for this device
000AA0  9201 4003                   000003  1153+         MVI   SPBPEND,SPBPENDG    Tell the program some device needs action
000AA4  1557                                1154+         $CLR  5,7                 Is this the primary device?
000AA6  4770 C090                   000A1C  1155+         $BNE  EXCPDOWT            ..No, try for another interrupt

                                            1157+* Primary device sent Attention status.  So, return code is 0
000AAA                                      1158+         DROP  7                   Forget interrupting device entry
000AAA  47F0 C16A                   000AF6  1159+         B     EXCP00RC            Return code 0

000AAE                                      1161+EXCPSOL  DS    0H      Determine primary device's state
000AAE                      000000          1162+         USING BLSIOT,5
000AAE  9500 5009                   000009  1163+         CLI   BLSCH,X'00'         Did a channel error occur?
000AB2  4770 C180                   000B0C  1164+         $BNE  EXCP08RC            ..Yes, indicate an error condition
000AB6  4330 500C                   00000C  1165+         IC    3,BLSERR            Fetch the error mask for the device
000ABA  4430 C1CA                   000B56  1166+         EX    3,EXCPDERR          ..Did a general device error occur?
000ABE  4770 C180                   000B0C  1167+         $BNZ  EXCP08RC            ..Yes, return with 8 as return code

000AC2  9102 5008                   000008  1169+         TM    BLSUNIT,SCSWUC      Did a Unit Check occur?
000AC6  47E0 C14E                   000ADA  1170+         $BNO  EXCPSOLE            ..No, check for possible EOF condition
000ACA  9200 500B                   00000B  1171+         MVI   BLSACT,BLSRDSN      ..Yes, indicate this device has sense data
000ACE  9201 4003                   000003  1172+         MVI   SPBPEND,SPBPENDG    Tell the program some device needs action
000AD2  9620 5003                   000003  1173+         OI    BLSTATUS,BLSTATO    There is a pending action for this device
000AD6  47F0 C180                   000B0C  1174+         $B    EXCP08RC            Also indicate the primary device has error.

000ADA                                      1176+EXCPSOLE DS    0H     Determine if ending status is good
                                            1177+* Determine if the device ended as expected
                                            1178+* Checking termination settings from input SPBSI
000ADA  4330 C1CE                   000B5A  1179+         IC    3,PDEVENDS          Fetch the ending mask for the operation
000ADE  4430 C1CA                   000B56  1180+         EX    3,EXCPDERR          Did device end?
000AE2  47E0 C090                   000A1C  1181+         $BNO  EXCPDOWT            ..No, wait for another interrupt
000AE6  9180 5002                   000002  1182+         TM    BLSTYP,BLSPEOF      Does device detect physcial end-of-file?
000AEA  47E0 C16A                   000AF6  1183+         $BNO  EXCP00RC            ..No, return code 0
000AEE  9101 5008                   000008  1184+         TM    BLSUNIT,SCSWUX      Did Unit Exception occur?
000AF2  4710 C174                   000B00  1185+         $BO   EXCP04RC            ..Yes, return code 4
000AF6                      000000          1186+         USING BLSIOT,5            Return to the caller with return code 0
                                            1187+*
                                            1188+* Return to service caller with primary device return code
                                            1189+*
000AF6                                      1190+EXCP00RC DS    0H   Primary device successful
000AF6  947F 5003                   000003  1191+         NI    BLSTATUS,X'FF'-BLSBUSY    Turn off busy flag
000AFA  1F00                                1192+         $SLR  0,0               Set return code to 0
000AFC  47F0 C19C                   000B28  1193+         $B    EXCPRCAL

000B00                                      1195+EXCP04RC DS    0H   Primary device detected physical end-of-file condition
000B00  947F 5003                   000003  1196+         NI    BLSTATUS,X'FF'-BLSBUSY    Turn off busy flag
000B04  4100 0004                   000004  1197+         LA    0,4                Set return code to 4
000B08  47F0 C19C                   000B28  1198+         $B    EXCPRCAL
000B0C                                      1199+EXCP08RC DS    0H   Primary device is in an error condition
000B0C  947F 5003                   000003  1200+         NI    BLSTATUS,X'FF'-BLSBUSY    Turn off busy flag
000B10  4100 0008                   000008  1201+         LA    0,8                Set return code to 8
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 4 - EXCP                                                     07 Sep 2020 09:13:11  Page    30

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

000B14  47F0 C19C                   000B28  1202+         $B    EXCPRCAL

000B18                                      1204+EXCP12RC DS    0H   Device not available
000B18  947F 5003                   000003  1205+         NI    BLSTATUS,X'FF'-BLSBUSY    Turn off busy flag
000B1C  4100 000C                   00000C  1206+         LA    0,12                Set return code to 12
000B20  47F0 C19C                   000B28  1207+         $B    EXCPRCAL

000B24                                      1209+EXCP16RC DS    0H   Return invalid ORB
000B24  4100 0010                   000010  1210+         LA    0,16                Set return code to 16

000B28                                      1212+         DROP  4
000B28                                      1213+         DROP  5

                                            1215+*
                                            1216+* Return to service caller
                                            1217+*
000B28                      000000          1219+         USING SAVEA,13      On return, service points to its save area
000B28  58D0 D004                   000004  1220+EXCPRCAL $L    13,SAVEBCK     Restore caller's save area address from service
                                            1221+* R13 now points to the caller's registers
000B2C  58F0 0278                   000278  1222+         L     15,LOD1RTN      Return to the framework for the return
000B30                                      1223+         DROP  0               Forget ASA
000B30                                      1224+         DROP  13              Forget any save area addressing as we leave
000B30  07FF                                1225+         BR    15              Return now to the framework...

000B38  FE020000 00000000                   1227+EXCPWAIT PSWBC X'FE',0,2,0,0      Causes CPU to wait for I/O interruption
000B40  00000000 00000A26                   1228+EXCPCONT PSW   0,0,0,0,EXCPDONE   Causes the CPU to continue after waiting
000B48  00020000 00000038                   1229+EXCPTRAP PSW   0,0,2,0,X'38'      I/O trap New PSW (restored after I/O)
000B50  00000000                            1230+EXCPZERO DC    F'0'               A constant of zeros
000B54  0001                                1231+EXCPONE  DC    H'1'               A constant of one

                                            1233+* These two locations detect device errors for a specific device type
                                            1234+* The device type implies the EXCPDEMK content.
000B56                      000000          1235+         USING BLSIOT,5    Set addressing for executed instruction
000B56  9100 5008                   000008  1236+EXCPDERR TM    BLSUNIT,0   Executed to detect device errors or ending status
000B5A                                      1237+         DROP  5

                                            1239+* Successful primary device unit status mask (driven by EXCP SPB SI data)
000B5A  00                                  1240+PDEVENDS DC    XL1'00'            Primary unit status mask success
                            00000C  000001  1241+PDEVENDM EQU   X'0C'    Isolate the Channel End and Device status bits
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 5 - PNDING                                                   07 Sep 2020 09:13:11  Page    31

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                            1243 *
                                            1244 * Boot Loader Service - 5 - PNDING
                                            1245 *
                                            1246 * Register Usage:
                                            1247 *   R0 - Return Code
                                            1248 *   R1 - AVAILABLE
                                            1249 *   R2 - AVAILABLE
                                            1250 *   R3 - AVAILABLE
                                            1251 *   R4 - Address of the SPB and its extention
                                            1252 *   R5 - AVAILABLE
                                            1253 *   R6 - AVAILABLE
                                            1254 *   R7 - Start of I/O table address and table entry start --------+
                                            1255 *        When found this becomes the secondary device IOT address |
                                            1256 *   R8 - I/O table entry length                                   |-- BXLE
                                            1257 *   R9 - Address of the last byte of the I/O table itself --------+
                                            1258 *   R10 - AVAILABLE
                                            1259 *   R11 - AVAILABLE
                                            1260 *   R12 - Base register
                                            1261 *   R15 - Return address to serivce framework
                                            1262 *

                                            1264          SERVPEND
000B5C                                      1266+         DS    0F
000B5C  C2D3E205                            1267+         DC    CL3'BLS',AL1(PNDING)
000B60                                      1268+SERVPEND DS    0H             Start of service
000B60                      000B60          1269+         USING SERVPEND,12    Establish service addressing
000B60                      000000          1270+         USING ASA,0          Address the ASA
000B60                      000000          1271+         USING SPB,1          Address the SPB (address from framework)
000B60                      000000          1272+         USING SAVEA,13       Address caller's save area
                                            1273+         LA    2,EOBL+(PENDSAVE-DMEMORY) \
000B60  4120 C228                   000D88      +                                      Point to my save area
000B64  5020 D008                   000008  1274+         $ST   2,SAVEFWD      Save my save area address in caller's save area
000B68                                      1275+         DROP  13             Forget caller's save area
000B68                      000000          1276+         USING SAVEA,2        Now address MY save area
000B68  50D0 2004                   000004  1277+         $ST   13,SAVEBCK     Preserve caller's R13 now in my save area
000B6C  18D2                                1278+         $LR   13,2           Now point save area to MY save area with R13
000B6E                                      1279+         DROP  2
000B6E                      000000          1280+         USING SAVEA,13       Re-establish addressing to my save area with R13
000B6E  1B00                                1281+         $SR   0,0                 Set return code to 0, optimistically
                                            1282+*         ICM   5,B'1111',SPBIOTA   Was an IOT address supplied?
000B70  5850 1004                   000004  1284+         L     5,SPBIOTA          Load fullword
000B74  1255                                1285+         LTR   5,5                Set condition code by testing loaded value
000B76  4780 C026                   000B86  1286+         $BZ   PNDSRCH             ..No entry address, so search the table
000B7A                      000000          1287+         USING BLSIOT,5            Address the IOT entry
000B7A  9120 5003                   000003  1288+         TM    BLSTATUS,BLSTATO    Does device have a pending action?
000B7E  4710 C03A                   000B9A  1289+         $BO   PNDINGD             ..Yes, need to report to the program
000B82  47F0 C052                   000BB2  1290+         $B    PNDRTN              ..No, return code of zero then

000B86                                      1292+PNDSRCH  DS    0H   Search the IOT for a pending action
000B86  9857 C068                   000BC8  1293+         LM    5,7,IOTBLBA         Initialize the search registers
000B8A  9120 5003                   000003  1294+PNDLOOP  TM    BLSTATUS,BLSTATO    Does device have a pending action?
000B8E  4710 C03A                   000B9A  1295+         $BO   PNDINGD             ..Yes, need to report to the program
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 5 - PNDING                                                   07 Sep 2020 09:13:11  Page    32

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

000B92  8756 C02A                   000B8A  1296+         $BXLE 5,6,PNDLOOP         ..No, try next table entry
                                            1297+* Did not find a device with a pending action
000B96  47F0 C052                   000BB2  1298+         $B    PNDRTN              Return code 0

000B9A                                      1300+PNDINGD  DS    0H   Report pending action to the program
000B9A  9504 500B                   00000B  1301+         CLI   BLSACT,BLSREAD      Is a program read pending?
000B9E  4780 C04A                   000BAA  1302+         $BE   PNDSNS              ..No, must be sense
000BA2  4100 0004                   000004  1303+         LA    0,4                 ..Yes, return code 4
000BA6  47F0 C04E                   000BAE  1304+         $B    PNDDEV  Report to the program the device with the pending action
000BAA  4100 0008                   000008  1305+PNDSNS   LA    0,8                 Tell program device has sense data

000BAE  5050 1004                   000004  1307+PNDDEV   ST    5,SPBIOTA     Tell the program which device has action pending
000BB2                                      1308+         DROP  5
000BB2                      000000          1310+         USING SAVEA,13      On return, service points to its save area
000BB2  58D0 D004                   000004  1311+PNDRTN   $L    13,SAVEBCK     Restore caller's save area address from service
                                            1312+* R13 now points to the caller's registers
000BB6  58F0 0278                   000278  1313+         L     15,LOD1RTN      Return to the framework for the return
000BBA                                      1314+         DROP  0               Forget ASA
000BBA                                      1315+         DROP  13              Forget any save area addressing as we leave
000BBA  07FF                                1316+         BR    15              Return now to the framework...
ASMA Ver. 0.2.0  BOOT LOADER - COMMON SERVICES DATA                                                 07 Sep 2020 09:13:11  Page    33

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                            1318 *
                                            1319 * Common information used by Boot Loader Services
                                            1320 *

                                            1322          BLCOMMON
                                            1323+* End-of-Boot-Loader Address used to identify if caller is the boot loader
000BBC  00000BD8                            1324+EOBLA    DC    A(EOBL)      Boot Loader's ending address
                                            1325+* IPL Device I/O Table Address
000BC0  00000000                            1326+IPLDEVTA DC    A(0)     Returned by IOINIT service. Established upon return

                                            1328+* ENADEV service uses this to determine if the table is full.  The field
                                            1329+* is initialized in the assembly to the total length of the I/O Table and
                                            1330+* converted to an address by the IOINIT service.
000BC4  00000100                            1331+IOTMAX   DC    A(IOTDEVS*BLSIOEL)   The byte following the I/O Table.

                                            1333+* These values may be used by a BXLE.  The first entry is pointed to by the
                                            1334+* initial 'sum' register value.  If the table entry fails, use BXLE to
                                            1335+* point to the next entry.  The entire table has been examined when the
                                            1336+* branch is not taken.  The IOINIT service adds the IPL device to the table.
                                            1337+* So there is always at least one device in the table
000BC8  00000000                            1338+IOTBLBA  DC    A(0)    Set by IOINIT service               BXLE R1   sum
000BCC  00000020                            1339+IOTBLI   DC    A(BLSIOEL)   Entry length (increment)       BXLE R3   even
000BD0  00000000                            1340+IOTBLEA  DC    A(0)    Set by IOINIT service (comparand)   BXLE R3+1 odd

                                            1342+* Latest interruption source is the primary or secondary device
000BD4  00                                  1343+INTSRC   DC    X'00'    Interruption source
                            000001  000001  1344+INTPRI   EQU   X'01'    Interruption source is the primary device
                            000002  000001  1345+INTSEC   EQU   X'02'    Interruption source is the secondary device



                                            1347 * END OF bls.asm
ASMA Ver. 0.2.0  BOOT LOADER - MEMORY USAGE OUTSIDE OF REGION                                       07 Sep 2020 09:13:11  Page    34

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

000BD8                                      1349 EOBL     DS    0D   The end of the boot loader that participates in IPL.
                                            1350 * DSECT DMEMORY is placed after this location

                                            1352          BLMEM
                                            1353+* This DSECT defines memory usage not part of the assembled region
                                            1354+* By placing areas within this section, the boot loader size is reduced.
                                            1355+* The boot loader must provide addressability to these areas at run-time.
                                            1356+DMEMORY  DSECT
                                            1357+*
                                            1358+*  Service related save areas
                                            1359+*
000000  00000000 00000000                   1361+SAVEAREA DC    18F'0'      32-bit register save area
000008  00000000 00000000
000010  00000000 00000000
000018  00000000 00000000
000020  00000000 00000000
000028  00000000 00000000
000030  00000000 00000000
000038  00000000 00000000
000040  00000000 00000000
000048  00000000 00000000                   1363+NOOPSAVE DC    18F'0'      32-bit register save area
000050  00000000 00000000
000058  00000000 00000000
000060  00000000 00000000
000068  00000000 00000000
000070  00000000 00000000
000078  00000000 00000000
000080  00000000 00000000
000088  00000000 00000000
000090  00000000 00000000                   1365+IOINSAVE DC    18F'0'      32-bit register save area
000098  00000000 00000000
0000A0  00000000 00000000
0000A8  00000000 00000000
0000B0  00000000 00000000
0000B8  00000000 00000000
0000C0  00000000 00000000
0000C8  00000000 00000000
0000D0  00000000 00000000
0000D8  00000000 00000000                   1367+QIOTSAVE DC    18F'0'      32-bit register save area
0000E0  00000000 00000000
0000E8  00000000 00000000
0000F0  00000000 00000000
0000F8  00000000 00000000
000100  00000000 00000000
000108  00000000 00000000
000110  00000000 00000000
000118  00000000 00000000
000120  00000000 00000000                   1369+ENADSAVE DC    18F'0'      32-bit register save area
000128  00000000 00000000
000130  00000000 00000000
000138  00000000 00000000
000140  00000000 00000000
ASMA Ver. 0.2.0  BOOT LOADER - MEMORY USAGE OUTSIDE OF REGION                                       07 Sep 2020 09:13:11  Page    35

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

000148  00000000 00000000
000150  00000000 00000000
000158  00000000 00000000
000160  00000000 00000000
000168  00000000 00000000                   1371+EXCPSAVE DC    18F'0'      32-bit register save area
000170  00000000 00000000
000178  00000000 00000000
000180  00000000 00000000
000188  00000000 00000000
000190  00000000 00000000
000198  00000000 00000000
0001A0  00000000 00000000
0001A8  00000000 00000000
0001B0  00000000 00000000                   1373+PENDSAVE DC    18F'0'      32-bit register save area
0001B8  00000000 00000000
0001C0  00000000 00000000
0001C8  00000000 00000000
0001D0  00000000 00000000
0001D8  00000000 00000000
0001E0  00000000 00000000
0001E8  00000000 00000000
0001F0  00000000 00000000



                                            1375+* I/O Table is placed last so that it can be dynamically extended if needed.
                                            1376+* No service is provided for that purpose, but it can be done by increasing
                                            1377+* IOTMAX by size of the number of additional table entries being added.  IOTBLI
                                            1378+* contains the size of each individual entry.
0001F8                                      1380+         DS    0D
0001F8  00000000 00000000                   1381+IOTBL    DS    (8*7)F'0'             Define the I/O table
000200  00000000 00000000
000208  00000000 00000000
000210  00000000 00000000
000218  00000000 00000000
000220  00000000 00000000
000228  00000000 00000000
000230  00000000 00000000
000238  00000000 00000000
000240  00000000 00000000
000248  00000000 00000000
000250  00000000 00000000
000258  00000000 00000000
000260  00000000 00000000
000268  00000000 00000000
000270  00000000 00000000
000278  00000000 00000000
000280  00000000 00000000
000288  00000000 00000000
000290  00000000 00000000
000298  00000000 00000000
0002A0  00000000 00000000
ASMA Ver. 0.2.0  BOOT LOADER - MEMORY USAGE OUTSIDE OF REGION                                       07 Sep 2020 09:13:11  Page    36

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

0002A8  00000000 00000000
0002B0  00000000 00000000
0002B8  00000000 00000000
0002C0  00000000 00000000
0002C8  00000000 00000000
0002D0  00000000 00000000
                            000008  000001  1382+IOTDEVS  EQU   8                     Number of devices in the I/O table
                            0002D8  000001  1383+IOTBLE   EQU   *



                            0002D8  000001  1385+HWM      EQU   IOTBLE     Can not load any directed record lower than here
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               07 Sep 2020 09:13:11  Page    37

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                            1387          BLSPB
                                            1388+*
                                            1389+* Boot Loader Services Parameter Block
                                            1390+*
                                            1391+SPB      DSECT
000000  0000                                1392+SPBID    DS    H           Service ID of requested service from caller
000002  0000                                1393+SPBSI    DS    H           Service Information provided by caller
                            000004  000001  1394+SPBE     EQU   *           Start of SPB extension used by service

                                            1396+* This SPBE field is used by IOINIT, QIOT, ENADEV, and PNDING services
000004  00000000                            1397+SPBIOTA  DS    F           I/O Table entry address as service input or output

                                            1399+* IOINIT SPBE - SERVICE ID 1
                                            1400+*   SPB: DC  Y(IOINIT),H'0'
000008                      000008  000002  1401+         ORG   SPBSI
000002  00                                  1402+SPBCCWF  DS    X           CCW Format used by boot loader services
                            000001  000001  1403+SPBCCW0  EQU   X'01'       CCW Format 0 used
                            000002  000001  1404+SPBCCW1  EQU   X'02'       CCW Format 1 used
000003  00                                  1405+         DS    X
000004  00000000                            1406+         DS    F           Returned address of I/O Table entry

                                            1408+* QIOT SPBE -   SERVICE ID 2
                                            1409+*   SPB: DC  Y(QIOT),H'0',F'0'
000008                      000008  000004  1410+         ORG   SPBE
000004  00000000                            1411+         DS    F           Returned address of I/O Table entry

                                            1413+* ENADEV SPBE - SERVICE ID 3
                                            1414+*   SPB: DC   Y(ENADEV),H'0',AL1(BLSTYP),XL3'000000'
000008                      000008  000004  1415+         ORG   SPBE
000004  00                                  1416+SPBDCLS  DS    X           Input Device Class (same values as BLSTYP)
000005                      000005  000004  1417+         ORG   SPBE  (RC==0 or RC==4)
000004  00000000                            1418+         DS    F           Returned address of I/O Table entry
000008                      000008  000004  1419+         ORG   SPBE  (RC==8)
000004  00                                  1420+         DS    X           Input Device Class (SPBDCLS)
000005  00                                  1421+         DS    X           RESERVED
000006  00                                  1422+SPBDEVST DS    X           Device status (if available)
000007  00                                  1423+SPBCHST  DS    X           Channel status (if available)
000008                      000008  000004  1424+         ORG   SPBE  (RC==12, RC==16, or RC==20)
000004  00                                  1425+         DS    X           Input Device Class (SPBDCLS)
000005  000000                              1426+         DS    XL3         RESERVED


                                            1428+* EXCP SPB -    SERVICE ID 4
                                            1429+*   SPB: DC   Y(EXCP),H'0'
                                            1430+*        BLSORB
000008                      000008  000002  1431+         ORG   SPBSI
000002  00                                  1432+SPBECTL  DS    X           EXCP input function control mask
                            000080  000001  1433+SPBEBY1  EQU   X'80'       Bypass Step 1 processing (start I/O)
                                            1434+* SPBEBY2  EQU   X'40'       Bypass Step 2 processing (I/O wait)
                                            1435+* SPBEBY3  EQU   X'20'       Bypass Step 3 processing (status analysis)
                            00000C  000001  1436+SPBEWTM  EQU   X'0C'       Mask to isolate wait conditions
                                            1437+*                          Step 2 wait conditions:
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               07 Sep 2020 09:13:11  Page    38

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                            00000C  000001  1438+SPBEWDC  EQU   12            - Wait for both device and channel end
                            000008  000001  1439+SPBEWCO  EQU   8             - Wait for channel end (may also have device end)
                            000004  000001  1440+SPBEWDO  EQU   4             - Wait for device end (may also have channel end)
                            000000  000001  1441+SPBEWNO  EQU   0             - Do not wait for both device and channel end
                            00000C  000001  1442+SPBENRM  EQU   SPBEWDC     Usual controls for most I/O actions
                            000080  000001  1443+SPBEATN  EQU   SPBEBY1     Usual controls for ATTN wait

000003  00                                  1445+SPBPEND  DS    X           EXCP output pending data condition
                            000001  000001  1446+SPBPENDG EQU   X'01'       I/O Table has pending actions for other devices
                            000000  000001  1447+SPBPENDN EQU   X'00'       I/O Table has no pending actions

000004  00000000 00000000                   1449+SPBEORB  DS    3F          Operational Request Block
00000C  00000000
000010                      000010  000004  1450+         ORG   SPBEORB
000004  00000000                            1451+SPBEORBT DS    F       +0  Device I/O Table address (Interruption Parameter)
000008  00                                  1452+SPBEORBK DS    X       +4  Storage Key field
                            0000F0  000001  1453+SPBEORBM EQU   X'F0'       Storage Key mask
                            00000F  000001  1454+SPBEORBR EQU   X'0F'       Reserved portion of key field byte
000009  00                                  1455+SPBEORB1 DS    X       +5  F flag byte required content
00000A  00                                  1456+SPBEORBL DS    X       +6  Logical Path Mask
00000B  00                                  1457+SPBEORB2 DS    X       +7  Required content
00000C                                      1458+SPBEORBC DS    0XL4    +8  31-bit channel program address
00000C  00                                  1459+         DS    X       +8  Ignored for early architectures
00000D  000000                              1460+SPBEORBP DS    XL3     +9  24-bit channel program address


                                            1462+* PNDGIN SPB -    SERVICE ID 5
                                            1463+*   SPB: DC   Y(PNDING),H'0',F'0'
000010                      000010  000004  1464+         ORG   SPBE
000004  00000000                            1465+         DS    F           Returned IOT entry address of pending device



                                            1467 BLSIOT   BLSIOT
                                            1468+*
                                            1469+* Boot Loader I/O Table Entry
                                            1470+*
                                            1471+BLSIOT   DSECT
000000  0000                                1472+BLSDEV   DS    H        +0 I/O device number

000002  00                                  1474+BLSTYP   DS    X        +2 I/O device class and attributes
                            000080  000001  1475+BLSPEOF  EQU   B'10000000' 'Detects physical end-of-file' mask
                            000040  000001  1476+BLSUNSOL EQU   B'01000000' 'Generates unsolicited status' mask
                            000038  000001  1477+BLSSCLS  EQU   B'00111000' Device subclass mask
                                            1478+* Note: the device class is positioned in the byte so it can be used for the
                                            1479+* channel subsystem SCHIB I/O subclass code field without shifting.
                            0000F8  000001  1480+BLSRSV   EQU   B'11111000' Reserved bits mask (zeros)              UE
                                            1481+*                        CLASS                                    PEOF ATTN
                                            1482+*              B'00000000' 0 - Highest priority available           ?    ?
                            000008  000001  1483+BLSFBA   EQU   B'00001000' 1 - Fixed-Block-Architecture DASD device N    N
                            000089  000001  1484+BLSCKD   EQU   B'10001001' 1 - Count-Key-Data DASD device           Y    N
                            000090  000001  1485+BLSTAPE  EQU   B'10010000' 2 - Sequential tape device               Y    N
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               07 Sep 2020 09:13:11  Page    39

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                            000098  000001  1486+BLSCARD  EQU   B'10011000' 3 - Sequential input card device         Y    N
                            000020  000001  1487+BLSPUN   EQU   B'00100000' 4 - Sequential output punch device       N    N
                            000028  000001  1488+BLSPR    EQU   B'00101000' 5 - Sequential output printer device     N    N
                            000070  000001  1489+BLSCON   EQU   B'01110000' 6 - Operator console device              N    Y
                            000078  000001  1490+BLS3270  EQU   B'01111000' 7 - Operator 3270 terminal device        N    Y

000003  00                                  1492+BLSTATUS DS    X        +3 Current device status
                            000080  000001  1493+BLSBUSY  EQU   B'10000000' Device is busy
                                            1494+* Note: When BLSBUSY set, BLSTAT, BLSTATO, BLSTATS and BLSSNSP turned off,
                                            1495+* (set to 0).
                            000040  000001  1496+BLSTAT   EQU   B'01000000' Status in BLSSW.
                            000020  000001  1497+BLSTATO  EQU   B'00100000' Pending action present in BLSACT
                            000002  000001  1498+BLSTATS  EQU   B'00000010' Unit and channel status present in BLSUNCH
                            000001  000001  1499+BLSSNSP  EQU   B'00000001' Sense data is present in BLSSNS

000004  00000000                            1501+BLSHDW   DS    F        +4 Hardware defined device address

000008                                      1503+BLSUNCH  DS    0XL2     +8 Accumulated status when bit 1 set to 1 in BLSTATUS
000008  00                                  1504+BLSUNIT  DS    X           Unit status
                            000080  000001  1505+BLSATTN  EQU   B'10000000' Attention status
                            000001  000001  1506+BLSUE    EQU   B'00000001' Unit exception status (physical EOF)
000009  00                                  1507+BLSCH    DS    X           Channel status


00000A  00                                  1509+BLSSNS   DS    XL1     +10 Sense data present when bit 7 set to 1 in BLSTATUS

00000B  00                                  1511+BLSACT   DS    XL1     +11 Pending action when bit 2 set to 1 in BLSTATUS
                            000000  000001  1512+BLSRDSN  EQU   X'00'       Device has pending sense data to be read
                            000004  000001  1513+BLSREAD  EQU   X'04'       Device has pending data to be read

00000C  00                                  1515+BLSERR   DS    XL1     +12 Device status error mask, set by ENADEV

00000D  000000                              1517+BLSRSV2  DS    XL3     +13 RESERVED

000010  00000000 00000000                   1519+BLSSW    DS    3F      +16 SCSW of the latest interruption
000018  00000000

00001C  00000000                            1521+BLSPROG  DS    F       +28 Reserved for booted program usage
                            000020  000001  1522+BLSIOEL  EQU   *-BLSIOT    Length of an I/O Table Entry (32 bytes)



                                            1524 *
                                            1525 * Subroutine Register Save Area DSECT
                                            1526 *

                                            1528          SAVEAREA DSECT=YES
                                            1529+SAVEA    DSECT
000000  00000000                            1530+SAVERSV  DS    F'0'        Reserved save area field
000004  00000000                            1531+SAVEBCK  DS    A(0)        Backward save area pointer (points to caller)
000008  00000000                            1532+SAVEFWD  DS    A(0)        Forward save area pointer (points to called)
00000C  00000000                            1533+SAVER14  DS    A(0)        Saved R14 (caller's return address)
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               07 Sep 2020 09:13:11  Page    40

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

000010  00000000                            1534+SAVER15  DS    A(0)        Saved R15 (called routine entry address)
000014  00000000                            1535+SAVER0   DS    F'0'        Saved R0
000018  00000000                            1536+SAVER1   DS    F'0'        Saved R1
00001C  00000000                            1537+SAVER2   DS    F'0'        Saved R2
000020  00000000                            1538+SAVER3   DS    F'0'        Saved R3
000024  00000000                            1539+SAVER4   DS    F'0'        Saved R4
000028  00000000                            1540+SAVER5   DS    F'0'        Saved R5
00002C  00000000                            1541+SAVER6   DS    F'0'        Saved R6
000030  00000000                            1542+SAVER7   DS    F'0'        Saved R7
000034  00000000                            1543+SAVER8   DS    F'0'        Saved R8
000038  00000000                            1544+SAVER9   DS    F'0'        Saved R9
00003C  00000000                            1545+SAVER10  DS    F'0'        Saved R10
000040  00000000                            1546+SAVER11  DS    F'0'        Saved R11
000044  00000000                            1547+SAVER12  DS    F'0'        Saved R12
                            000048  000001  1548+SAVELEN  EQU   *-SAVEA     Length of 32-bit subroutine save area



                                            1550 *
                                            1551 * Input/Output Structure DSECT's
                                            1552 *

                                            1554          BLSIODS

                                            1556+*
                                            1557+* I/O Operation Request Block (ORB)
                                            1558+*

                                            1562+ORB      DSECT
000000  00000000                            1563+ORBPARM  DC    F'0'     Word 0, bits 0-31

000004  00                                  1565+ORB1_0   DC    X'00'    Word 1, bits 0-7
                            0000F0  000001  1566+ORBKEYM  EQU   X'F0'    Word 1, bits 0-3   - Storage Key Mask
                            000008  000001  1567+ORBS     EQU   X'08'    Word 1, bit 4      - Suspend Control
                            000004  000001  1568+ORBC     EQU   X'04'    Word 1, bit 5      - Streaming Mode Control
                            000002  000001  1569+ORBM     EQU   X'02'    Word 1, bit 6      - Modification Control
                            000001  000001  1570+ORBY     EQU   X'01'    Word 1, bit 7      - Synchronization Control

000005  00                                  1572+ORB1_8   DC    X'00'    Word 1, bits 8-15
                            000080  000001  1573+ORBF     EQU   X'80'    Word 1, bit 8      - CCW Format-Control
                            000040  000001  1574+ORBP     EQU   X'40'    Word 1, bit 9      - Pre-fetch control
                            000020  000001  1575+ORBI     EQU   X'20'    Word 1, bit 10     - Initial-status Interruption Control
                            000010  000001  1576+ORBA     EQU   X'10'    Word 1, bit 11     - Address Limit Checking Control
                            000008  000001  1577+ORBU     EQU   X'08'    Word 1, bit 12     - Suppress-suspended-interruption control
                            000004  000001  1578+ORBB     EQU   X'04'    Word 1, bit 13     - Channel-Program-Type Control
                            000002  000001  1579+ORBH     EQU   X'02'    Word 1, bit 14     - Format 2-IDAW Control
                            000001  000001  1580+ORBT     EQU   X'01'    Word 1, bit 15     - 2K-IDAW control
000006  00                                  1581+ORBLPM   DC    X'00'    Word 1, bits 16-23 - Logical Path Mask
000007  00                                  1582+ORRB1_24 DC    X'00'    Word 1, bits 24-31
                            000080  000001  1583+ORBL     EQU   X'80'    Word 1, bit 24     - Incorrect Length Suppression Mode
                            00007F  000001  1584+ORBRSV3  EQU   X'7F'    Word 1, bits 25-31 - reserved must be zeros
                            000040  000001  1585+ORBD     EQU   X'40'    Word 1, bit 25     - MIDAW Addressing Control
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               07 Sep 2020 09:13:11  Page    41

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                            00003E  000001  1586+ORBRSV26 EQU   X'3E'    Word 1, bits 26-30 - reserved must be zeros
                            00007E  000001  1587+ORBRSV25 EQU   X'7E'    Word 1, bits 25-30 - reserved must be zeros
                            000001  000001  1588+ORBX     EQU   X'01'    Word 1, bit 31     - ORB-extension control

000008  00000000                            1590+ORBCCW   DC    A(0)     Word 2, bits 1-31  - Channel Program Address
                            000080  000001  1591+ORBRSV4  EQU   X'80'    Word 2, bit 0      - reserved must be zero
                            00000C  000001  1592+ORBLEN   EQU   *-ORB Length of standard ORB
                                            1593+* Extended ORB fields
00000C  00                                  1594+ORBCSS   DC    X'00'    Word 3, bits 0-7   - Channel Subsystem Priority
00000D  00                                  1595+ORBRSV5  DC    X'00'    Word 3, bits 8-15  - reserved must be zeros
00000E                                      1596+ORBPGM   DC    0X'00'   Word 3, bits 16-23 - Transport mode reserves for program use
00000E  00                                  1597+ORBCU    DC    X'00'    Word 3, bits 16-23 - Control Unit Priority
00000F  00                                  1598+ORBRSV6  DC    X'00'    Word 3, bits 24-31 - reserved must be zeros
000010  00000000 00000000                   1599+ORBRSV7  DC    XL16'00' Words 4-7          - reserved must be zeros
000018  00000000 00000000
                            000020  000001  1600+ORBXLEN  EQU   *-ORB Length of extended ORB




                                            1603+*
                                            1604+* Channel Subsystem Status Word (SCSW)
                                            1605+*

                                            1609+SCSW     DSECT Subchannel          Status Word
000000  00                                  1610+SCSWFLAG DC    X'00'    Flags
                            0000F0  000001  1611+SCSWKEYM EQU   X'F0'    Storage Key Mask of subchannel storage key
                            000008  000001  1612+SCSWSUSC EQU   X'08'    Suspend Control
                            000004  000001  1613+SCSWESWF EQU   X'04'    Extended Status Word Format
                            000003  000001  1614+SCSWDCCM EQU   X'03'    Deferred condiont code mask
                            000000  000001  1615+SCSWDCC0 EQU   X'00'    Normal I/O interruption
                            000001  000001  1616+SCSWDCC1 EQU   X'01'    Deferred condition code is 1
                            000003  000001  1617+SCSWDCC3 EQU   X'03'    Deferred condition code is 3

000001  00                                  1619+SCSWCTLS DC    X'00'    General Controls
                            000080  000001  1620+SCSWCCWF EQU   X'80'    CCW Format control when ...
                            000040  000001  1621+SCSWCCWP EQU   X'40'    CCW Prefetch Control
                            000020  000001  1622+SCSWISIC EQU   X'20'    Initial-Status-Interruption Control
                            000010  000001  1623+SCSWALKC EQU   X'10'    Address-Limit-Checking Control
                            000008  000001  1624+SCSWSSIC EQU   X'08'    Suppress suspended interruption
                            000004  000001  1625+SCSW0CC  EQU   X'04'    Zero-Condition Code
                            000002  000001  1626+SCSWECWC EQU   X'02'    Extended Control Word control
                            000001  000001  1627+SCSWPNOP EQU   X'01'    Path Not Operational

000002  00                                  1629+SCSW1    DC    X'00'    Control Byte 1
                            000070  000001  1630+SCSWFM   EQU   X'70'    Functional Control Mask
                            000040  000001  1631+SCSWFS   EQU   X'40'    Function Control - Start Function
                            000020  000001  1632+SCSWFH   EQU   X'20'    Function Control - Halt Function
                            000010  000001  1633+SCSWFC   EQU   X'10'    Function Control - Clear Function
                            000008  000001  1634+SCSWARP  EQU   X'08'    Activity Control - Resume pending
                            000004  000001  1635+SCSWASP  EQU   X'04'    Activity Control - Start pending
                            000002  000001  1636+SCSWAHP  EQU   X'02'    Activity Control - Halt pending
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               07 Sep 2020 09:13:11  Page    42

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                            000001  000001  1637+SCSWACP  EQU   X'01'    Activity Control - Clear pending
000003  00                                  1638+SCSW2    DC    X'00'    Control Byte 2
                            000080  000001  1639+SCSWASA  EQU   X'80'    Activity Control - Subchannel Active
                            000040  000001  1640+SCSWADA  EQU   X'40'    Activity Control - Device Active
                            000020  000001  1641+SCSWASUS EQU   X'20'    Activity Control - Suspended
                            000010  000001  1642+SCSWSAS  EQU   X'10'    Status Control   - Alert Status
                            000008  000001  1643+SCSWSINT EQU   X'08'    Status Control   - Intermediate Status
                            000004  000001  1644+SCSWSPRI EQU   X'04'    Status Control   - Primary Status
                            000002  000001  1645+SCSWSSEC EQU   X'02'    Status Control   - Secondary Status
                            000001  000001  1646+SCSWSPEN EQU   X'01'    Status Control   - Status Pending

000004  00000000                            1648+SCSWCCW  DC    A(0)     CCW Address

000008  00                                  1650+SCSWUS   DC    X'00'    Unit Status
                            000080  000001  1651+SCSWATTN EQU   X'80'    Attention
                            000040  000001  1652+SCSWSM   EQU   X'40'    Status modifier
                            000020  000001  1653+SCSWCUE  EQU   X'20'    Control-unit end
                            000010  000001  1654+SCSWBUSY EQU   X'10'    Busy
                            000008  000001  1655+SCSWCE   EQU   X'08'    Channel end
                            000004  000001  1656+SCSWDE   EQU   X'04'    Device end
                            000002  000001  1657+SCSWUC   EQU   X'02'    Unit check
                            000001  000001  1658+SCSWUX   EQU   X'01'    Unit exception

000009  00                                  1660+SCSWCS   DC    X'00'    Channel Status
                            000080  000001  1661+SCSWPCI  EQU   X'80'    Program-controlled interruption
                            000040  000001  1662+SCSWIL   EQU   X'40'    Incorrect length
                            000020  000001  1663+SCSWPRGM EQU   X'20'    Program check
                            000010  000001  1664+SCSWPROT EQU   X'10'    Protection Check
                            000008  000001  1665+SCSWCDAT EQU   X'08'    Channel-data check
                            000004  000001  1666+SCSWCCTL EQU   X'04'    Channel-control check
                            000002  000001  1667+SCSWICTL EQU   X'02'    Interface-control check
                            000001  000001  1668+SCSWCHNG EQU   X'01'    Chaining check

00000A  0000                                1670+SCSWCNT  DC    H'0'     Residual CCW count
                            00000C  000001  1671+SCSWL    EQU   *-SCSW




                                            1674+*
                                            1675+* Channel Command Word Format-0 (CCW0)
                                            1676+*

                                            1680+CCW0     DSECT
000000  00                                  1681+CCW0CODE DC    X'00'         Device specific Command Code
000001  000000                              1682+CCW0ADDR DC    AL3(0)        Data Address
000004  00                                  1683+CCW0FLGS DC    X'00'         Flags (see flag equates)
000005  00                                  1684+         DC    X'00'         not used - must be zeros
000006  0000                                1685+CCW0CNT  DC    H'0'          Byte Count
                            000008  000001  1686+CCW0L    EQU   *-CCW0 Length of CCW Format 0

                                            1688+* Chanel Command Word Flags used by both CCW formats 0 and 1
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               07 Sep 2020 09:13:11  Page    43

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                            000080  000001  1689+CCWCD    EQU   X'80'         Chain Data flag
                            000040  000001  1690+CCWCC    EQU   X'40'         Command Chain flag
                            000020  000001  1691+CCWSLI   EQU   X'20'         Suppress Length Indication flag
                            000010  000001  1692+CCWSKIP  EQU   X'10'         Suprress data transfer flag (skip)
                            000008  000001  1693+CCWPCI   EQU   X'08'         Causes an intermediate interruption (programmed control)
                            000004  000001  1694+CCWIDA   EQU   X'04'         Use Indirect Data Addressing
                            000002  000001  1695+CCWSUSP  EQU   X'02'         Cause suspension before executing this command word




                                            1698+*
                                            1699+* Channel Status Word
                                            1700+*

                                            1704+CSWFMT   DSECT
000000  00                                  1705+CSWFLAG  DC    X'00'    Flags
                            0000F0  000001  1706+CSWKEYM  EQU   X'F0'    Storage Key Mask of subchannel storage key
                                            1707+* The following flags are not available and always zero on System/360
                            000008  000001  1708+CSWSUSP  EQU   X'08'    I/O operation CCW suspended
                            000004  000001  1709+CSWLOG   EQU   X'04'    Further I/O instructions blocked due to pending logout
                            000003  000001  1710+CSWDCCM  EQU   X'03'    Deferred condiont code mask
                            000000  000001  1711+CSWDCC0  EQU   X'00'    Normal I/O interruption
                            000001  000001  1712+CSWDCC1  EQU   X'01'    Deferred condition code is 1
                            000003  000001  1713+CSWDCC3  EQU   X'03'    Deferred condition code is 3

000001  000000                              1715+CSWCCW   DC    AL3(0)   Last CCW address plus 8

000004  00                                  1717+CSWUS    DC    X'00'    Unit Status
                            000080  000001  1718+CSWATTN  EQU   X'80'    Attention
                            000040  000001  1719+CSWSM    EQU   X'40'    Status modifier
                            000020  000001  1720+CSWCUE   EQU   X'20'    Control-unit end
                            000010  000001  1721+CSWBUSY  EQU   X'10'    Busy
                            000008  000001  1722+CSWCE    EQU   X'08'    Channel end
                            000004  000001  1723+CSWDE    EQU   X'04'    Device end
                            000002  000001  1724+CSWUC    EQU   X'02'    Unit check
                            000001  000001  1725+CSWUX    EQU   X'01'    Unit exception

000005  00                                  1727+CSWCS    DC    X'00'    Channel Status
                            000080  000001  1728+CSWPCI   EQU   X'80'    Program-controlled interruption
                            000040  000001  1729+CSWIL    EQU   X'40'    Incorrect length
                            000020  000001  1730+CSWPRGM  EQU   X'20'    Program check
                            000010  000001  1731+CSWPROT  EQU   X'10'    Protection Check
                            000008  000001  1732+CSWCDAT  EQU   X'08'    Channel-data check
                            000004  000001  1733+CSWCCTL  EQU   X'04'    Channel-control check
                            000002  000001  1734+CSWICTL  EQU   X'02'    Interface-control check
                            000001  000001  1735+CSWCHNG  EQU   X'01'    Chaining check

000006  0000                                1737+CSWCNT   DC    H'0'     Residual CCW count
                            000008  000001  1738+CSWFMTL  EQU   *-CSWFMT Length of CSW

ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               07 Sep 2020 09:13:11  Page    44

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT




                                            1742 *
                                            1743 * Hardware and Software Assigned Storage Locations
                                            1744 *

                                            1746 * This DSECT allows symbolic access to these locations.  The DSECT created is
                                            1747 * named ASA.  Addressing is established by: USING  ASA,0
                                            1748 * In this context, general register 0 is an assembler artifact.  Instructions
                                            1749 * that have R0 as a base register never actually use it for address generation.

                                            1751 ASA      BLSASA
                                            1753+ASA      DSECT
                            000000  000001  1754+ASBEGIN  EQU   *                   Start of absolute/real assigned storage areas
000000  00000000 00000000                   1755+IPLPSW   DC    FD'0'        000 A  Initial Program Load Program Status Word
000008  00000000 00000000                   1756+IPLCCW1  DC    FD'0'        008 A  Initial Program Load first Channel Command Word
000010  00000000 00000000                   1757+IPLCCW2  DC    FD'0'        010 A  Initial program Load second Channel Command Word
                                            1758+* RESTART RELATED PROGRAM STATUS WORDS
000018                      000018  000000  1759+         ORG   ASBEGIN
000000  00000000 00000000                   1760+RSTNPSW  DC    FD'0'        000 R  Restart New PSW
000008  00000000 00000000                   1761+RSTOPSW  DC    FD'0'        008 R  Restart Old PSW
000010  00000000 00000000                   1762+UA0      DC    FD'0'        010 R  Unassigned Area 0
                                            1763+* INTERRUPTION OLD PROGRAM STATUS WORD SAVE AREAS
000018  00000000 00000000                   1764+EXTOPSW  DC    FD'0'        018 R  External Interrupt Old PSW
000020  00000000 00000000                   1765+SVCOPSW  DC    FD'0'        020 R  Supervisor Call Old PSW
000028  00000000 00000000                   1766+PGMOPSW  DC    FD'0'        028 R  Program Old PSW
000030  00000000 00000000                   1767+MCKOPSW  DC    FD'0'        030 R  Machine Check Old PSW
000038  00000000 00000000                   1768+IOOPSW   DC    FD'0'        038 R  Input/Output Old PSW
                                            1769+* System/360 or System/370 Basic Control Mode INTERRUPTION INFORMATION
000040                      000040  00001A  1770+         ORG   EXTOPSW+2
00001A  0000                                1771+BCEXTCOD DC    H'0'         01A R  External Interuption Code
00001C                      00001C  000022  1772+         ORG   SVCOPSW+2
000022  0000                                1773+BCSVCCOD DC    H'00'        022 R  Supervisor Call Interruption Code
000024                      000024  00002A  1774+         ORG   PGMOPSW+2
00002A  0000                                1775+BCPGMCOD DC    H'0'         02A R  Program Interruption Code
00002C                      00002C  000032  1776+         ORG   MCKOPSW+2
000032  0000                                1777+BCMCKCOD DC    H'0'         032 R  Machine Check Interruption Code
000034                      000034  00003A  1778+         ORG   IOOPSW+2
00003A  0000                                1779+BCIOCOD  DC    H'0'         03A R  Input/Output Interruption Code (Device CCUU)
00003C                      00003C  000040  1780+         ORG   *+4
                                            1781+* CHANNEL-BASED INPUT/OUTPUT INTERRUPT RELATED
000040  00000000 00000000                   1782+CSW      DC    FD'0'        040 R  Channel Status Word
000048                                      1783+CAW      DC    0F'0'        048 R  Channel Address Word
000048  00                                  1784+CAWKEY   DC    X'00'        048 R  Channel Storage Key (bits 0-3)
                            000008  000001  1785+CAWSUSP  EQU   X'08'        048 R  Suspend Control (bit 4)
000049  000000                              1786+CAWADDR  DC    AL3(0)       049 R  Channel Command Address
00004C  00000000                            1787+UA1      DC    F'0'         04C R  Unassigend Area 1
                                            1788+* MISCELANEOUS AREAS
000050  00000000                            1789+TIMER    DC    F'0'         050 R  System/360 and System/370 Interval Timer
000054  00000000                            1790+TTDES    DC    F'0'         054 R  System/370 Trace-Table-Designation
                                            1791+* INTERRUPTION NEW PROGRAM STATUS WORD AREAS
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               07 Sep 2020 09:13:11  Page    45

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

000058  00000000 00000000                   1792+EXTNPSW  DC    FD'0'        058 R  External New PSW
000060  00000000 00000000                   1793+SVCNPSW  DC    FD'0'        060 R  Supervisor Call New PSW
000068  00000000 00000000                   1794+PGMNPSW  DC    FD'0'        068 R  Program New PSW
000070  00000000 00000000                   1795+MCKNPSW  DC    FD'0'        070 R  Machine Check New PSW
000078  00000000 00000000                   1796+IONPSW   DC    FD'0'        078 R  Input/Output New PSW
                                            1797+* System/360 Diagnostic Scanout Area
000080                                      1798+SCANOUT  DS    0X           080 A  System/360 Diagnostic Scanout Area
                            000000  000001  1799+SCANOUTL EQU   *-SCANOUT           System/360 Diagnostic Scanout Area Length
                                            1800+* EXTERNAL INTERRUPTION INFORMATION
000080                      000080  000080  1801+         ORG   ASBEGIN+X'80'
000080  00000000                            1802+EXTIPARM DC    F'0'         080 R  External-interruption Parameter
000084  0000                                1803+EXTCPUAD DC    H'0'         084 R  External-interruption CPU Address
000086  0000                                1804+EXTICODE DC    H'0'         086 R  External-interruption Code
                                            1805+* SUPERVISOR CALL INTERRUPTION INFORMATION
000088                                      1806+SVCIID   DC    0F'0'        088 R  Supervisor-Call Interuption Identification
000088  00                                  1807+         DC    X'00'        088 R  not-used - zeros stored
000089  00                                  1808+SVCIILC  DC    X'00'        089 R  Supervisor-Call instruction length code
                            00000C  000001  1809+SVCIILCM EQU   B'00001100'         Supervisor-Call ILC mask, zeros stored in other bits
00008A  0000                                1810+SVCICODE DC    H'0'         08A R  Supervisor-Call Interruption Code
                                            1811+* PROGRAM INTERRUPTION INFORMATION
00008C                                      1812+PGMIID   DC    0F'0'        08C R  Program-interruption identification
00008C  00                                  1813+         DC    X'00'        08C R  not-used - zeros stored
00008D  00                                  1814+PGMIILC  DC    X'00'        08D R  Program instruction lengh code
                            00000C  000001  1815+PGMIILCM EQU   B'00001100'         Progrtam ILC mask, zeros stored in other bits
00008E  0000                                1816+PGMICODE DC    H'0'         08E R  Program Interruption Code
000090                                      1817+PGMDXC   DC    0F'0'        090 R  Data-Exception Code
000090  00000000                            1818+PGMTRX   DC    F'0'         090 R  Translation-Exception Identification
000094                                      1819+MONCLS   DC    0H'0'        094 R  Monitor-Class Number
000094  00                                  1820+         DC    X'00'        094 R  not-used - zeros stored
000095  00                                  1821+MONNUMBR DC    X'00'        095 R  Monitor-Class Number stored
000096  00                                  1822+PERCODE  DC    X'00'        096 R  Program-Event-Recording Code
                            0000F0  000001  1823+PERCODMK EQU   B'11110000'         Program-Event-Recordind Code mask in bits 0-3
000097  00                                  1824+         DC    X'00'        097 R  PER Code not used - zeros stored
000098  00000000                            1825+PERADDR  DC    F'0'         098 R  PER Address
00009C  00000000                            1826+MONCODE  DC    F'0'         09C R  Monitor Event Code in bytes 1-3, zeros in byte 0
0000A0  00                                  1827+PGMACCID DC    X'00'        0A0 R  Exception accress identification
0000A1  00                                  1828+PERACCID DC    X'00'        0A1 R  PER access identification
0000A2  00                                  1829+MPGACCID DC    X'00'        0A2 R  MOVE PAGE Operand access identification
0000A3                                      1830+SSARCHMD DC    0X'00'       0A3 A  Store Status Architectural Mode Identification
0000A3  00                                  1831+MKARCHMD DC    X'00'        0A3 R  Machine-Check Architectural Mode Identification
0000A4  00000000                            1832+UA2      DC    F'0'         0A4 R  Unused area
                                            1833+* z/Architecture PROGRAM INTERRUPTION INFORMATION
0000A8  00000000 00000000                   1834+ZPGMTRX  DC    FD'0'        0A8 R  Translation Exception information
0000B0  00000000 00000000                   1835+ZMONCODE DC    FD'0'        0B0 R  Monitor Code
                                            1836+* System/370 CHANNEL INPUT/OUTPUT INFORMATION
0000B8                      0000B8  0000A8  1837+         ORG   ASBEGIN+X'A8'
0000A8  00000000                            1838+CHANID   DC    F'0'         0A8 R  System/370 STORE CHANNEL ID location
0000AC  00000000                            1839+IOELADDR DC    F'0'         0AC R  System/370 I/O Extended Logout Address
0000B0  00000000                            1840+LCHANLOG DC    F'0'         0B0 R  System/370 Limited Channel Logout Area
0000B4  00000000                            1841+UA3      DC    F'0'         0B4 R  unused by System/370
0000B8  00                                  1842+UA4      DC    X'00'        0B8 R  unused by System/370
0000B9  00                                  1843+MEASUREB DC    X'00'        0B9 R  System/370 Measurement Byte
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               07 Sep 2020 09:13:11  Page    46

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

0000BA  0000                                1844+IOICODE  DC    H'0'         0BA R  System/370 Input/Output Interruption Device Address
                                            1845+* CHANNEL SUBSYSTEM INPUT/OUTPUT INFORMATION
0000BC                      0000BC  0000B8  1846+         ORG   ASBEGIN+X'B8'
0000B8  00000000                            1847+IOSSID   DC    F'0'         0B8 R  Channel subsystem-identification word
0000BC  00000000                            1848+IOIPARM  DC    F'0'         0BC R  Channel subsystem I/O Interruption parameter
0000C0  00000000                            1849+IOIID    DC    F'0'         0C0 R  Channel subsystem I/O Interruption Identification
0000C4  00000000                            1850+PCFETO   DC    A(0)         0C4 R  ESA/390 PROGRAM CALL FAST Entry Table Origin
0000C8  00000000                            1851+STFLDATA DC    F'0'         0C8 R  STORE FACILITY LIST storage area
0000CC  00000000 00000000                   1852+UA5      DC    XL8'00'      0CC R  unused area
                                            1853+* MACHINE-CHECK INTERRUPTION INFORMATION
0000D4  00000000                            1854+MKXSAA   DC    F'0'         0D4 R  Machine-Check Extended Save Area Address
0000D8  00000000 00000000                   1855+MKCPUTIM DC    FD'0'        0D8 R  Machine-Check CPU timer save area
0000E0  00000000 00000000                   1856+MKCLKCMP DC    FD'0'        0E0 R  Machine-Check clock comparator save area
0000E8  00000000                            1857+MKICODE  DC    F'0'         0E8 R  Machine-Check interruption code
0000EC  00000000 00000000                   1858+UA6      DC    XL8'00'      0EC R  unused area
0000F4  00000000                            1859+MKDMGCOD DC    F'0'         0F4 R  Machine-Check external damage code
0000F8                                      1860+ZMKFAILA DC    0FD'0'       0F8 R  Machine-Check failing storage address
0000F8  00000000                            1861+MKFAILA  DC    F'0'         0F8 R  Machine-Check failing storage address
0000FC  00000000                            1862+MKMODEL  DC    F'0'         0FC R  Machine-Check model dependent information
000100  00000000 00000000                   1863+MKLOGOUT DC    4F'0'        100 R  ESA machine-check fixed logout area
000108  00000000 00000000
000110                      000110  000100  1864+         ORG   ASBEGIN+X'100'
000100  00000000 00000000                   1865+ZEMONCTR DC    AD(0)        100 R  Enhanced-Monitor Counter-Array Origin
000108  00000000                            1866+ZEMONSIZ DC    F'0'         108 R  Enhanced-Monitor Counter-Array Size
00010C  00000000                            1867+ZEMONCNT DC    F'0'         10C R  Enhanced-Monitor Exception Count
000110  00000000 00000000                   1868+ZBRKADDR DC    AD(0)        110 R  Breaking-Event Address
000118  00000000 00000000                   1869+UA7      DC    FD'0'        118 R  unused area
000120  00000000 00000000                   1870+MKARS    DC    16F'0'       120 R  Machine-Check access register save area
000128  00000000 00000000
000130  00000000 00000000
000138  00000000 00000000
000140  00000000 00000000
000148  00000000 00000000
000150  00000000 00000000
000158  00000000 00000000
000160                      000160  000100  1871+         ORG   ASBEGIN+X'100'
000100  00000000 00000000                   1872+MCKLOG   DC    24F'0'       100 R  System/370, 370-XA machine-Check fixed logout area.
000108  00000000 00000000
000110  00000000 00000000
000118  00000000 00000000
000120  00000000 00000000
000128  00000000 00000000
000130  00000000 00000000
000138  00000000 00000000
000140  00000000 00000000
000148  00000000 00000000
000150  00000000 00000000
000158  00000000 00000000
000160  00000000 00000000                   1873+MKFPRS   DC    4D'0'        160 R  Machine-Check floating point register save area
000168  00000000 00000000
000170  00000000 00000000
000178  00000000 00000000
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               07 Sep 2020 09:13:11  Page    47

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

000180  00000000 00000000                   1874+NKGRS    DC    16F'0'       180 R  Machine-Check general register save area
000188  00000000 00000000
000190  00000000 00000000
000198  00000000 00000000
0001A0  00000000 00000000
0001A8  00000000 00000000
0001B0  00000000 00000000
0001B8  00000000 00000000
0001C0  00000000 00000000                   1875+MKCRS    DC    16F'0'       1C0 R  Machine-Check control register save area
0001C8  00000000 00000000
0001D0  00000000 00000000
0001D8  00000000 00000000
0001E0  00000000 00000000
0001E8  00000000 00000000
0001F0  00000000 00000000
0001F8  00000000 00000000
                                            1876+* STORE/STATUS SAVE AREAS
000200                      000200  0000D4  1877+         ORG   ASBEGIN+X'D4'
0000D4  00000000                            1878+SSXSAA   DC    A(0)         0D4 A  Store Status Extended Save Area Address
0000D8  00000000 00000000                   1879+SSCPUTIM DC    FD'0'        0D8 A  CPU Timer save area
0000E0  00000000 00000000                   1880+SSCLKCMP DC    FD'0'        0E0 A  Clock-Comparator save area
0000E8                      0000E8  000100  1881+         ORG   ASBEGIN+X'100'
000100  00000000 00000000                   1882+SSPSW    DC    FD'0'        100 A  Program-Status Word save area
000108  00000000                            1883+SSPREFIX DC    F'0'         108 A  Prefix save area
00010C  00000000                            1884+SSMODEL  DC    F'0'         10C A  Model-dependent save area
000110                      000110  000120  1885+         ORG   ASBEGIN+X'120'
000120  00000000 00000000                   1886+SSARS    DC    16F'0'       120 A  Access-register save area
000128  00000000 00000000
000130  00000000 00000000
000138  00000000 00000000
000140  00000000 00000000
000148  00000000 00000000
000150  00000000 00000000
000158  00000000 00000000
000160  00000000 00000000                   1887+SSFPRS   DC    4D'0'        160 A  Floating-point register save area
000168  00000000 00000000
000170  00000000 00000000
000178  00000000 00000000
000180  00000000 00000000                   1888+SSGRS    DC    16F'0'       180 A  General register save area
000188  00000000 00000000
000190  00000000 00000000
000198  00000000 00000000
0001A0  00000000 00000000
0001A8  00000000 00000000
0001B0  00000000 00000000
0001B8  00000000 00000000
0001C0  00000000 00000000                   1889+SSCRS    DC    16F'0'       1C0 A  Control register save area
0001C8  00000000 00000000
0001D0  00000000 00000000
0001D8  00000000 00000000
0001E0  00000000 00000000
0001E8  00000000 00000000
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               07 Sep 2020 09:13:11  Page    48

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

0001F0  00000000 00000000
0001F8  00000000 00000000
                                            1890+* z/Architecture OLD PROGRAM STATUS WORDS
000200                      000200  000120  1891+         ORG   ASBEGIN+X'120'
000120  00000000 00000000                   1892+ZRSTOPSW DC    XL16'00'     120 R  Restart Old PSW
000128  00000000 00000000
000130  00000000 00000000                   1893+ZEXTOPSW DC    XL16'00'     130 R  External Old PSW
000138  00000000 00000000
000140  00000000 00000000                   1894+ZSVCOPSW DC    XL16'00'     140 R  Supervisor-Call Old PSW
000148  00000000 00000000
000150  00000000 00000000                   1895+ZPGMOPSW DC    XL16'00'     150 R  Program Old PSW
000158  00000000 00000000
000160  00000000 00000000                   1896+ZMCKOPSW DC    XL16'00'     160 R  Machine-Check Old PSW
000168  00000000 00000000
000170  00000000 00000000                   1897+ZIOOPSW  DC    XL16'00'     170 R  Input-Output Old PSW
000178  00000000 00000000
000180  00000000 00000000                   1898+UA8      DC    XL32'00'     180 R  z/Architecture unused area
000188  00000000 00000000
000190  00000000 00000000
000198  00000000 00000000
                                            1899+* z/Architecture NEW PROGRAM STATUS WORD AREAS
0001A0  00000000 00000000                   1900+ZRSTNPSW DC    XL16'00'     1A0 R  Restart New PSW
0001A8  00000000 00000000
0001B0  00000000 00000000                   1901+ZEXTNPSW DC    XL16'00'     1B0 R  External New PSW
0001B8  00000000 00000000
0001C0  00000000 00000000                   1902+ZSVCNPSW DC    XL16'00'     1C0 R  Supervisor-Call New PSW
0001C8  00000000 00000000
0001D0  00000000 00000000                   1903+ZPGMNPSW DC    XL16'00'     1D0 R  Program New PSW
0001D8  00000000 00000000
0001E0  00000000 00000000                   1904+ZMCKNPSW DC    XL16'00'     1E0 R  Machine-Check New PSW
0001E8  00000000 00000000
0001F0  00000000 00000000                   1905+ZIONPSW  DC    XL16'00'     1F0 R  Input/Output New PSW
0001F8  00000000 00000000
                            0011C0  000001  1906+ZSASDISP EQU   X'11C0'   Displacement to save areas defined by ASAZAREA macro
                            000200  000001  1907+ASEND    EQU   *                   End of absolute/real assigned storage areas
                            000200  000001  1908+ASLENGTH EQU   ASEND-ASBEGIN       Length of absolute/real assigned storage area
                                            1909+* LOGICAL ADDRESS USAGE
                            00031B  000001  1910+CPUID    EQU   *+X'11B'     31B L  System/370 CPU Identity used during DAS tracing
                                            1912+ASA      DSECT
000200                      000200  000200  1913+         ORG   ASA+X'200'
000200  00000000 00000000                   1914+LODPARMS DS    CL64     Hercules IPL parameters
000208  00000000 00000000
000210  00000000 00000000
000218  00000000 00000000
000220  00000000 00000000
000228  00000000 00000000
000230  00000000 00000000
000238  00000000 00000000
                                            1915+* Addresses reflect location of LOD1 record when placed in its ASA area
                                            1916+* 000240-00028F.  Fields identified with an asterisk (*) indicate that
                                            1917+* the boot loader supplies the information during execution.
                            000240  000001  1918+LOD1     EQU   *        Start of LOD1 record definition
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               07 Sep 2020 09:13:11  Page    49

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

000240  00000000                            1919+LOD1REC  DS    CL4      000240 - Record ID 'LOD1' in EBCDIC

000244  00                                  1921+LOD1DTYP DS    XL1      000244 - IPL Device Type related information
                            000001  000001  1922+LOD1OBJ  EQU   B'00000001'   Booted program is in an object deck
                            000002  000001  1923+LOD1LENF EQU   B'00000010'   Directed record header contains a length field
                            000004  000001  1924+LOD1CARD EQU   B'00000100'   IPL device is a card reader
                            000008  000001  1925+LOD1TAPE EQU   B'00001000'   IPL device is a tape drive
                            000010  000001  1926+LOD1FBA  EQU   B'00010000'   IPL device is a FBA DASD drive
                            000020  000001  1927+LOD1CKD  EQU   B'00100000'   IPL device is a CKD DASD drive
                            000040  000001  1928+LOD1ECKD EQU   B'01000000'   IPL device is a ECKD DASD drive

000245  00                                  1930+LOD1BLFL DS    XL1      000245 - Boot loader flags
                            000080  000001  1931+LOD1BLCA EQU   B'10000000'   Change architecture before loading booted program
                            000040  000001  1932+LOD1BL64 EQU   B'01000000'   Set 64-bit address mode before entering program
                            000020  000001  1933+LOD1BLTR EQU   B'00100000'   Set trap new PSW's before entering program
                            000010  000001  1934+LOD1BLF1 EQU   B'00010000'   Use Format-1 CCW's and 31 bit addressing mode

000246  0000                                1936+LOD1MDLN DS    HL2      000246 - Maximum directed record length in bytes

                                            1938+* After loading of a booted progrm, these two fields must match.
                                            1939+* Note: not used when loading an absolute object deck.
000248  00000000                            1940+LOD1BPLN DS    FL4      000248 - Length of booted program content on medium
00024C  00000000                            1941+LOD1BPLD DS    FL4    * 00024C - Length of loaded boot program
000250  00000000                            1942+LOD1ENTR DS    FL4      000250 - Booted program's entry address

000254  00                                  1944+LOD1CPU  DS    XL1    * 000254 - Boot loader's CPU running architecture
                            000000  000001  1945+LOD1CPNA EQU   X'00'         CPU architecture not available
                            000001  000001  1946+LOD1360  EQU   X'01'         S/360 in BC mode
                            000002  000001  1947+LOD1370B EQU   X'02'         S/370 in BC mode
                            000003  000001  1948+LOD1370E EQU   X'03'         S/370 in EC mode
                            000004  000001  1949+LOD1380  EQU   X'04'         S/380
                            000005  000001  1950+LOD1370X EQU   X'05'         370-XA through ESA/390
                            000006  000001  1951+LOE1E370 EQU   X'06'         ESA/370
                            000007  000001  1952+LOD1E390 EQU   X'07'         ESA/390
                            000008  000001  1953+LOD1S390 EQU   X'08'         ESA/390 on dual z/Arthitecture(R) system
                            000009  000001  1954+LOD1ESAZ EQU   X'09'         z/Architecture on a dual z/Architecture system
                            00000A  000001  1955+LOD1Z    EQU   X'0A'         z/Architecture only system
                            0000FF  000001  1956+LOD1CPIN EQU   X'FF'         Invalid CPU operating environment

000255  00                                  1958+LOD1IO   DS    XL1    * 000255 - Boot loader's I/O architecture and mode
                            000000  000001  1959+LOD1IONA EQU   B'00000000'   I/O architecture and mode not available
                            000010  000001  1960+LOD1IACH EQU   B'00010000'   I/O architecture is channel based
                            000020  000001  1961+LOD1IACS EQU   B'00100000'   I/O architecture is channel subsystem based
                            0000C0  000001  1962+LOD1IAIN EQU   B'11000000'   I/O architecture is invalid
                            000001  000001  1963+LOD1IM24 EQU   B'00000001'   I/O architecture uses CCW Format-0 CCW's
                            000002  000001  1964+LOD1IM31 EQU   B'00000010'   I/O architecture uses CCW Format-0 CCW's
                            000004  000001  1965+LOD1IM64 EQU   B'00000100'   I/O architecture uses CCW1's plus IDAW-2's.
                            000008  000001  1966+LOD1IMIN EQU   B'00001000'   I/O architecture mode is invalid
                            0000C8  000001  1967+LOD1IOIN EQU   LOD1IAIN+LOD1IMIN  I/O architecture or mode invalid
                            000011  000001  1968+LOD1I370 EQU   LOD1IACH+LOD1IM24  S/360 and S/370 I/O
                            000022  000001  1969+LOD1IESA EQU   LOD1IACS+LOD1IM31  370-XA through ESA/390 I/O
                            000024  000001  1970+LOD1IZ   EQU   LOD1IACS+LOD1IM64  z/Architecture I/O
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               07 Sep 2020 09:13:11  Page    50

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT


000256  00                                  1972+LOD1BLAM DS    XL1    * 000256 - Boot loader's addressing mode when booted
                                            1973+*                                program is entered
                            000000  000001  1974+LOD1AMAN EQU   X'00'         Addressing mode not available
                            000001  000001  1975+LOD1AM24 EQU   X'01'         Addressing mode is 24-bits
                            000002  000001  1976+LOD1AM31 EQU   X'02'         Addressing mode is 31-bits
                            000003  000001  1977+LOD1AM64 EQU   X'03'         Addressing mode is 64-bits
                            0000FF  000001  1978+LOD1AMIN EQU   X'FF'         Addressing mode is invalid

000257  00                                  1980+LOD1BLSV DS    XL1    * 000257 - Boot loader's services
                            000000  000001  1981+LOD1BLSN EQU   X'00'         Boot loader services are unavailable
                                            1982+* Meaning of these bits are defined by the boot loader. Not zero implies
                                            1983+* services are available and LOD1BLST is valid.  When zero, LOD1BLST is
                                            1984+* not available.

000258  00000000                            1986+LOD1FSEC DS    FL4      000258 - Directed record FBA DASD starting sector
00025C  0000                                1987+LOD1CCYL DS    HL2      00025C - Directed record CKD DASD starting cylinder
00025E  0000                                1988+LOD1CTRK DS    HL2      00025E - Directed record CKD DASD starting track
000260  00                                  1989+LOD1CREC DS    XL1      000260 - Directed record CKD DASD starting rec
000261  00                                  1990+LOD1CRTK DS    XL1      000261 - Number of directed records per track
000262  0000                                1991+LOD1CMCY DS    HL2      000262 - Maximum CKD DASD cylinder number
000264  0000                                1992+LOD1CMTR DS    HL2      000264 - Maximum CKD DASD track number
000266  0000                                1993+LOD1DEVN DS    HL2    * 000266 - Device Number of IPL device from CS
000268  00000000                            1994+LOC1DEVI DS    FL4    * 000268 - I/O command device ID (CUU / subchannel num)
00026C  00000000                            1995+LOD1IOA  DS    AL4(0)   00026C - Boot loader I/O area starting address
000270  00000000                            1996+LOD1BLST DS    AL4(0) * 000270 - Boot loader services address.
000274  00                                  1997+LOD1ARCH DS    XL1    * 000274 - Running architecture level at boot loader entry
000275  000000                              1998+LOD1RSV2 DS    XL3      000275 - RESERVED NOT IN USE
000278  00000000                            1999+LOD1RTN  DS    A(0)   * 000278 - Address returning to service caller

00027C  00000000 00000000                   2001+LOD1RSRV DS    5FL4     00027C - RESERVED NOT IN USE
000284  00000000 00000000
00028C  00000000
                            000050  000001  2002+LOD1LEN  EQU   *-LOD1   Length of LOD1 record
ASMA Ver. 0.2.0  BOOT LOADER                                                                        07 Sep 2020 09:13:11  Page    51

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                            2004          END
ASMA Ver. 0.2.0  BOOT LOADER                                                                        07 Sep 2020 09:13:11  Page    52

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

AARB0011            D    000528       8   269   268
AARI0011            H    000530       2   271   267
AARX0011            H    000534       2   273   265   270
AMERROR             I    000708       4   492   438   440
AP240010            3    000488       8   217   209
AP310010            3    000480       8   216   208
AP640010            U    000470      16   215   207
APDN0010            H    0004FA       2   255   218   219   227   242   245   251
APSP0010            F    0004B8       8   222   206   258
APSS0010            F    0004B0       8   221   205   257
APSZ0010            F    0004A0       8   220   204   256
ARCHBAD             I    000710       4   494   276   277   278
ARCHSOK             H    000548       2   280   275
ASA                 4    000000     656  1753  1913   171   567   667   712   818   871  1033  1270
ASAREGN             2    000000     512   133
ASASECT             J    000000     512   133   136   143   146   148
ASBEGIN             U    000000       1  1754  1759  1801  1837  1846  1864  1871  1877  1881  1885  1891  1908
ASEND               U    000200       1  1907  1908
ASLENGTH            U    000200       1  1908
BADDEVT             I    0006E8       4   484   188
BCEXTCOD            H    00001A       2  1771
BCIOCOD             H    00003A       2  1779
BCMCKCOD            H    000032       2  1777
BCPGMCOD            H    00002A       2  1775
BCSVCCOD            H    000022       2  1773
BLS                 H    000768       2   566   197   572
BLS3270             U    000078       1  1490
BLSACT              X    00000B       1  1511  1151  1171  1301
BLSATTN             U    000080       1  1505  1149
BLSBUSY             U    000080       1  1493  1091  1191  1196  1200  1205
BLSCALL             H    00079C       2   591   587
BLSCARD             U    000098       1  1486
BLSCH               X    000009       1  1507  1163
BLSCKD              U    000089       1  1484
BLSCON              U    000070       1  1489
BLSDEV              H    000000       2  1472   315   737   833   943
BLSERR              X    00000C       1  1515   743   766   771   949   972   977  1165
BLSFBA              U    000008       1  1483
BLSHDW              F    000004       4  1501   738   944  1083  1117
BLSIOEL             U    000020       1  1522   780  1331  1339
BLSIOT              4    000000      32  1471  1522   311   734   831   898   920  1078  1114  1162  1186  1235  1287
BLSMONE             H    0007AA       2   603   588
BLSNUM              U    000006       1   629   196
BLSPEOF             U    000080       1  1475   764   970  1182
BLSPR               U    000028       1  1488
BLSPROG             F    00001C       4  1521
BLSPUN              U    000020       1  1487
BLSR                H    0007A0       2   595   199   579   589
BLSRDSN             U    000000       1  1512  1171
BLSREAD             U    000004       1  1513  1151  1301
BLSRSV              U    0000F8       1  1480
BLSRSV2             X    00000D       3  1517
ASMA Ver. 0.2.0  BOOT LOADER                                                                        07 Sep 2020 09:13:11  Page    53

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

BLSSCLS             U    000038       1  1477
BLSSNS              X    00000A       1  1509
BLSSNSP             U    000001       1  1499
BLSSW               F    000010       4  1519  1128  1130  1132  1135
BLSTAPE             U    000090       1  1485
BLSTAT              U    000040       1  1496
BLSTATO             U    000020       1  1497  1152  1173  1288  1294
BLSTATS             U    000002       1  1498  1136  1142
BLSTATUS            X    000003       1  1492  1091  1136  1142  1152  1173  1191  1196  1200  1205  1288  1294
BLSTYP              X    000002       1  1474   739   764   769   898   945   970   975  1147  1182
BLSUE               U    000001       1  1506
BLSUNCH             X    000008       2  1503  1082  1135
BLSUNIT             X    000008       1  1504  1149  1169  1184  1236
BLSUNSOL            U    000040       1  1476   769   975  1147
CALLSRV             H    000782       2   581   577
CAW                 F    000048       4  1783
CAWADDR             R    000049       3  1786  1081
CAWKEY              X    000048       1  1784  1080
CAWSUSP             U    000008       1  1785
CC                  U    000040       1   162   506   507
CCW0                4    000000       8  1680  1686
CCW0ADDR            R    000001       3  1682
CCW0CNT             H    000006       2  1685
CCW0CODE            X    000000       1  1681
CCW0FLGS            X    000004       1  1683
CCW0L               U    000008       1  1686
CCWCC               U    000040       1  1690
CCWCD               U    000080       1  1689
CCWIDA              U    000004       1  1694
CCWPCI              U    000008       1  1693
CCWSKIP             U    000010       1  1692
CCWSLI              U    000020       1  1691
CCWSUSP             U    000002       1  1695
CHANID              F    0000A8       4  1838
CKSIZE              I    000682       6   431   424
CPUID               U    00031B       1  1910
CSW                 F    000040       8  1782   934  1130  1132
CSWATTN             U    000080       1  1718
CSWBUSY             U    000010       1  1721
CSWCCTL             U    000004       1  1733
CSWCCW              R    000001       3  1715  1132
CSWCDAT             U    000008       1  1732
CSWCE               U    000008       1  1722
CSWCHNG             U    000001       1  1735
CSWCNT              H    000006       2  1737
CSWCS               X    000005       1  1727
CSWCUE              U    000020       1  1720
CSWDCC0             U    000000       1  1711
CSWDCC1             U    000001       1  1712
CSWDCC3             U    000003       1  1713
CSWDCCM             U    000003       1  1710
CSWDE               U    000004       1  1723
ASMA Ver. 0.2.0  BOOT LOADER                                                                        07 Sep 2020 09:13:11  Page    54

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

CSWFLAG             X    000000       1  1705  1130
CSWFMT              4    000000       8  1704  1738  1130  1132
CSWFMTL             U    000008       1  1738
CSWICTL             U    000002       1  1734
CSWIL               U    000040       1  1729
CSWKEYM             U    0000F0       1  1706
CSWLOG              U    000004       1  1709
CSWPCI              U    000080       1  1728
CSWPRGM             U    000020       1  1730
CSWPROT             U    000010       1  1731
CSWSM               U    000040       1  1719
CSWSUSP             U    000008       1  1708
CSWUC               U    000002       1  1724
CSWUS               X    000004       1  1717
CSWUX               U    000001       1  1725
CUMERROR            I    000700       4   490   432
DEFN_EXT            U    000063       1   157   506
DESTRT              I    0006F8       4   488
DEVBUSY             I    0006D0       4   476
DEVCSW              I    0006D8       4   478   385
DEVNOAVL            I    0006C8       4   474   386
DEVUNKN             I    0006E0       4   480
DIE                 3    000760       8   541   474   475   476   477   478   479   480   481   484   485   486   487   488   489
                                                490   491   492   493   494   495
DMEMORY             4    000000     728  1356   289   375   670   715   729   821   874  1036  1273
DONE                3    000758       8   539
ENADADD             H    0008FA       2   909   894
ENADERR             H    00092C       2   933   926
ENADEV              U    000003       1   621   868
ENADGOOD            H    000942       2   942   924
ENADNOAV            H    00093A       2   938   931
ENADOK              H    0008EE       2   904   899
ENADRTN             I    000974       4   991   902   907   916   936   940
ENADSAVE            F    000120       4  1369   874
ENADSSPB            H    00096C       2   985
ENADTEST            H    000914       2   918   914
ENAQIOT             Y    00097E       2   998   888   890   897
ENDLSEC             U    000744       4   521   359
EOBL                D    000BD8       8  1349   289   375   670   715   729   821   874  1036  1273  1324
EOBLA               A    000BBC       4  1324
ERRU0045            I    000838       4   769   765
ERRU0053            I    000960       4   975   971
ERRX0045            H    000844       2   777   770
ERRX0053            H    00096C       2   983   976
EXCP                U    000004       1   624   462  1030
EXCP00RC            H    000AF6       2  1190  1159  1183
EXCP04              Y    0006B8       2   462   379
EXCP04RC            H    000B00       2  1195  1185
EXCP08RC            H    000B0C       2  1199  1089  1164  1167  1174
EXCP12RC            H    000B18       2  1204  1087  1088
EXCP16RC            H    000B24       2  1209  1053  1055  1057  1059  1061  1063  1075
EXCPANAL            H    000A7E       2  1141
ASMA Ver. 0.2.0  BOOT LOADER                                                                        07 Sep 2020 09:13:11  Page    55

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

EXCPCONT            3    000B40       8  1228  1097
EXCPDERR            I    000B56       4  1236  1166  1180
EXCPDONE            U    000A26       1  1099  1228
EXCPDOWT            H    000A1C       2  1096  1073  1123  1155  1181
EXCPFIND            I    000A44       4  1113  1104
EXCPFNDS            I    000A5E       4  1124  1118
EXCPMVST            H    000A62       2  1126  1107
EXCPONE             H    000B54       2  1231
EXCPORB             X    0006BC      12   465   310
EXCPQIOT            H    000A48       2  1116  1119
EXCPRCAL            I    000B28       4  1220  1193  1198  1202  1207
EXCPSAVE            F    000168       4  1371  1036
EXCPSOL             H    000AAE       2  1161  1148  1150
EXCPSOLE            H    000ADA       2  1176  1170
EXCPTRAP            3    000B48       8  1229  1100
EXCPWAIT            3    000B38       8  1227  1098
EXCPZERO            F    000B50       4  1230  1074  1082  1128
EXTCPUAD            H    000084       2  1803
EXTENT              X    000738       4   517   522   506
EXTENTL             U    000010       1   522   506
EXTICODE            H    000086       2  1804
EXTIPARM            F    000080       4  1802
EXTNPSW             F    000058       8  1792
EXTOPSW             F    000018       8  1764  1770
FBACCW1             W    000720       8   506   471
FBACCW2             W    000728       8   507
FBACCW3             W    000730       8   508   354   363   365   367   369   371
FRSTLSEC            U    000740       4   519
FRSTPSEC            U    00073C       4   518   372   426   427
HWM                 U    0002D8       1  1385   375
IMAGE               1    000000    2520     0
INIT01              Y    0006A8       2   450   300   309
INTMASK             X    00086C       4   798
INTPRI              U    000001       1  1344  1105
INTSEC              U    000002       1  1345  1124
INTSRC              X    000BD4       1  1343  1105  1122  1124
IOELADDR            F    0000AC       4  1839
IOIA0043            H    000804       2   728
IOICODE             H    0000BA       2  1844   178   340   736  1102  1103  1117
IOIID               F    0000C0       4  1849
IOINIT              U    000001       1   615   450   709
IOINRTN             I    000862       4   790   785
IOINRTN0            I    000860       2   786   783
IOINRTN4            I    000858       4   784
IOINSAVE            F    000090       4  1365   715
IOIPARM             F    0000BC       4  1848
IONPSW              F    000078       8  1796  1097  1100
IOOPSW              F    000038       8  1768  1778  1102
IOSSID              F    0000B8       4  1847
IOTBL               F    0001F8       4  1381   729
IOTBLBA             A    000BC8       4  1338   730   830  1052  1113  1293
IOTBLE              U    0002D8       1  1383  1385
ASMA Ver. 0.2.0  BOOT LOADER                                                                        07 Sep 2020 09:13:11  Page    56

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

IOTBLEA             A    000BD0       4  1340   781   910   988  1054
IOTBLI              A    000BCC       4  1339   912
IOTDEVS             U    000008       1  1382  1331
IOTMAX              A    000BC4       4  1331   731   733   913
IPLCCW1             F    000008       8  1756
IPLCCW2             F    000010       8  1757
IPLDEV              X    00071C       2   501   340
IPLDEVTA            A    000BC0       4  1326
IPLFND              I    000594       6   340   322
IPLPSW              F    000000       8  1755
IS240010            H    0004E6       2   248   217
IS310010            H    0004C8       2   229   216
IS640010            H    0004C0       2   224   215
LCHANLOG            F    0000B0       4  1840
LOADER              2    000400    2008   168
LOC1DEVI            U    000268       4  1994
LOCATE              X    000748       1   526   530   507
LOCATEL             U    000008       1   530   507
LOCSECS             U    00074A       2   528   356
LOC_DATA            U    000043       1   158   507
LOD1                U    000240       1  1918  2002
LOD1360             U    000001       1  1946
LOD1370B            U    000002       1  1947
LOD1370E            U    000003       1  1948
LOD1370X            U    000005       1  1950
LOD1380             U    000004       1  1949
LOD1AM24            U    000001       1  1975
LOD1AM31            U    000002       1  1976
LOD1AM64            U    000003       1  1977
LOD1AMAN            U    000000       1  1974
LOD1AMIN            U    0000FF       1  1978
LOD1ARCH            X    000274       1  1997   259   264   266
LOD1BL64            U    000040       1  1932
LOD1BLAM            X    000256       1  1972   194
LOD1BLCA            U    000080       1  1931
LOD1BLF1            U    000010       1  1934
LOD1BLFL            X    000245       1  1930
LOD1BLSN            U    000000       1  1981
LOD1BLST            R    000270       4  1996   198   292   301   319   380   891
LOD1BLSV            X    000257       1  1980   196   576
LOD1BLTR            U    000020       1  1933
LOD1BPLD            U    00024C       4  1941   419   420   431
LOD1BPLN            U    000248       4  1940   431
LOD1CARD            U    000004       1  1924
LOD1CCYL            U    00025C       2  1987
LOD1CKD             U    000020       1  1927
LOD1CMCY            U    000262       2  1991
LOD1CMTR            U    000264       2  1992
LOD1CPIN            U    0000FF       1  1956
LOD1CPNA            U    000000       1  1945
LOD1CPU             X    000254       1  1944   195
LOD1CREC            X    000260       1  1989
ASMA Ver. 0.2.0  BOOT LOADER                                                                        07 Sep 2020 09:13:11  Page    57

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

LOD1CRTK            X    000261       1  1990
LOD1CTRK            U    00025E       2  1988
LOD1DEVN            U    000266       2  1993
LOD1DTYP            X    000244       1  1921   187
LOD1E390            U    000007       1  1952
LOD1ECKD            U    000040       1  1928
LOD1ENTR            U    000250       4  1942   437   439   441
LOD1ESAZ            U    000009       1  1954
LOD1FBA             U    000010       1  1926   187
LOD1FSEC            U    000258       4  1986   372
LOD1I370            U    000011       1  1968
LOD1IACH            U    000010       1  1960  1968
LOD1IACS            U    000020       1  1961  1969  1970
LOD1IAIN            U    0000C0       1  1962  1967
LOD1IESA            U    000022       1  1969
LOD1IM24            U    000001       1  1963  1968
LOD1IM31            U    000002       1  1964  1969
LOD1IM64            U    000004       1  1965  1970
LOD1IMIN            U    000008       1  1966  1967
LOD1IO              X    000255       1  1958   193
LOD1IOA             R    00026C       4  1995   361
LOD1IOIN            U    0000C8       1  1967
LOD1IONA            U    000000       1  1959
LOD1IZ              U    000024       1  1970
LOD1LEN             U    000050       1  2002
LOD1LENF            U    000002       1  1923   187
LOD1MDLN            U    000246       2  1936   349
LOD1OBJ             U    000001       1  1922
LOD1REC             C    000240       4  1919
LOD1RSRV            U    00027C       4  2001
LOD1RSV2            X    000275       3  1998
LOD1RTN             A    000278       4  1999   200   686   792   846   993  1222  1313
LOD1S390            U    000008       1  1953
LOD1TAPE            U    000008       1  1925
LOD1Z               U    00000A       1  1955
LODPARMS            C    000200      64  1914   172
LODSECT             J    000400    2008   168
LODSTART            I    000400       4   172   147
LOE1E370            U    000006       1  1951
MCKLOG              F    000100       4  1872
MCKNPSW             F    000070       8  1795
MCKOPSW             F    000030       8  1767  1776
MEASUREB            X    0000B9       1  1843
MKARCHMD            X    0000A3       1  1831
MKARS               F    000120       4  1870
MKCLKCMP            F    0000E0       8  1856
MKCPUTIM            F    0000D8       8  1855
MKCRS               F    0001C0       4  1875
MKDMGCOD            F    0000F4       4  1859
MKFAILA             F    0000F8       4  1861
MKFPRS              D    000160       8  1873
MKICODE             F    0000E8       4  1857
ASMA Ver. 0.2.0  BOOT LOADER                                                                        07 Sep 2020 09:13:11  Page    58

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

MKLOGOUT            F    000100       4  1863
MKMODEL             F    0000FC       4  1862
MKXSAA              F    0000D4       4  1854
MONCLS              H    000094       2  1819
MONCODE             F    00009C       4  1826
MONNUMBR            X    000095       1  1821
MOVEREC             H    00061A       2   390   383
MPGACCID            X    0000A2       1  1829
NKGRS               F    000180       4  1874
NOOP                U    000000       1   612   446   664
NOOPSAVE            F    000048       4  1363   670
NOP                 U    000003       1   156
ONE                 F    000718       4   498
ORB                 4    000000      32  1562  1592  1600
ORB1_0              X    000004       1  1565
ORB1_8              X    000005       1  1572
ORBA                U    000010       1  1576
ORBB                U    000004       1  1578
ORBC                U    000004       1  1568
ORBCCW              A    000008       4  1590
ORBCSS              X    00000C       1  1594
ORBCU               X    00000E       1  1597
ORBD                U    000040       1  1585
ORBF                U    000080       1  1573
ORBH                U    000002       1  1579
ORBI                U    000020       1  1575
ORBKEYM             U    0000F0       1  1566
ORBL                U    000080       1  1583
ORBLEN              U    00000C       1  1592
ORBLPM              X    000006       1  1581
ORBM                U    000002       1  1569
ORBP                U    000040       1  1574
ORBPARM             F    000000       4  1563
ORBPGM              X    00000E       1  1596
ORBRSV25            U    00007E       1  1587
ORBRSV26            U    00003E       1  1586
ORBRSV3             U    00007F       1  1584
ORBRSV4             U    000080       1  1591
ORBRSV5             X    00000D       1  1595
ORBRSV6             X    00000F       1  1598
ORBRSV7             X    000010      16  1599
ORBS                U    000008       1  1567
ORBT                U    000001       1  1580
ORBU                U    000008       1  1577
ORBX                U    000001       1  1588
ORBXLEN             U    000020       1  1600
ORBY                U    000001       1  1570
ORRB1_24            X    000007       1  1582
OVRWRITE            I    0006F0       4   486   393
PCFETO              A    0000C4       4  1850
PDEVENDM            U    00000C       1  1241  1069
PDEVENDS            X    000B5A       1  1240  1068  1069  1179
ASMA Ver. 0.2.0  BOOT LOADER                                                                        07 Sep 2020 09:13:11  Page    59

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

PENDSAVE            F    0001B0       4  1373  1273
PERACCID            X    0000A1       1  1828
PERADDR             F    000098       4  1825
PERCODE             X    000096       1  1822
PERCODMK            U    0000F0       1  1823
PGMACCID            X    0000A0       1  1827
PGMDXC              F    000090       4  1817
PGMICODE            H    00008E       2  1816
PGMIID              F    00008C       4  1812
PGMIILC             X    00008D       1  1814
PGMIILCM            U    00000C       1  1815
PGMNPSW             F    000068       8  1794
PGMOPSW             F    000028       8  1766  1774
PGMRS               3    000750       8   534   183   192
PGMTRX              F    000090       4  1818
PNDDEV              I    000BAE       4  1307  1304
PNDING              U    000005       1   627  1267
PNDINGD             H    000B9A       2  1300  1289  1295
PNDLOOP             I    000B8A       4  1294  1296
PNDRTN              I    000BB2       4  1311  1290  1298
PNDSNS              I    000BAA       4  1305  1302
PNDSRCH             H    000B86       2  1292  1286
QIOFOUND            H    00089C       2   839   834
QIORETRN            I    0008A0       4   844
QIOT                U    000002       1   618   454   815   998
QIOTLOOP            H    000888       2   832   835
QIOTSAVE            F    0000D8       4  1367   821
QUERY02             Y    0006B0       2   454   315   318
READ                U    000042       1   159   508
READLOOP            H    0005F6       2   378   428
RSTNPSW             F    000000       8  1760   183   192
RSTOPSW             F    000008       8  1761
SAVEA               4    000000      72  1529  1548   569   597   669   673   677   683   714   718   722   789   820   824   828
                                                843   873   877   881   990  1035  1039  1043  1219  1272  1276  1280  1310
SAVEAREA            F    000000       4  1361   289
SAVEBCK             A    000004       4  1531   674   684   719   790   825   844   878   991  1040  1220  1277  1311
SAVEFWD             A    000008       4  1532   671   716   822   875  1037  1274
SAVELEN             U    000048       1  1548
SAVER0              F    000014       4  1535
SAVER1              F    000018       4  1536
SAVER10             F    00003C       4  1545
SAVER11             F    000040       4  1546
SAVER12             F    000044       4  1547
SAVER14             A    00000C       4  1533   570   599
SAVER15             A    000010       4  1534   598
SAVER2              F    00001C       4  1537
SAVER3              F    000020       4  1538
SAVER4              F    000024       4  1539
SAVER5              F    000028       4  1540
SAVER6              F    00002C       4  1541
SAVER7              F    000030       4  1542
SAVER8              F    000034       4  1543
ASMA Ver. 0.2.0  BOOT LOADER                                                                        07 Sep 2020 09:13:11  Page    60

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

SAVER9              F    000038       4  1544
SAVERSV             F    000000       4  1530
SCANOUT             X    000080       1  1798  1799
SCANOUTL            U    000000       1  1799
SCSW                4    000000      12  1609  1671  1130  1132  1135
SCSW0CC             U    000004       1  1625
SCSW1               X    000002       1  1629
SCSW2               X    000003       1  1638
SCSWACP             U    000001       1  1637
SCSWADA             U    000040       1  1640
SCSWAHP             U    000002       1  1636
SCSWALKC            U    000010       1  1623
SCSWARP             U    000008       1  1634
SCSWASA             U    000080       1  1639
SCSWASP             U    000004       1  1635
SCSWASUS            U    000020       1  1641
SCSWATTN            U    000080       1  1651
SCSWBUSY            U    000010       1  1654
SCSWCCTL            U    000004       1  1666
SCSWCCW             A    000004       4  1648  1132
SCSWCCWF            U    000080       1  1620
SCSWCCWP            U    000040       1  1621
SCSWCDAT            U    000008       1  1665
SCSWCE              U    000008       1  1655
SCSWCHNG            U    000001       1  1668
SCSWCNT             H    00000A       2  1670
SCSWCS              X    000009       1  1660
SCSWCTLS            X    000001       1  1619
SCSWCUE             U    000020       1  1653
SCSWDCC0            U    000000       1  1615
SCSWDCC1            U    000001       1  1616
SCSWDCC3            U    000003       1  1617
SCSWDCCM            U    000003       1  1614
SCSWDE              U    000004       1  1656
SCSWECWC            U    000002       1  1626
SCSWESWF            U    000004       1  1613
SCSWFC              U    000010       1  1633
SCSWFH              U    000020       1  1632
SCSWFLAG            X    000000       1  1610  1130
SCSWFM              U    000070       1  1630
SCSWFS              U    000040       1  1631
SCSWICTL            U    000002       1  1667
SCSWIL              U    000040       1  1662
SCSWISIC            U    000020       1  1622
SCSWKEYM            U    0000F0       1  1611
SCSWL               U    00000C       1  1671
SCSWPCI             U    000080       1  1661
SCSWPNOP            U    000001       1  1627
SCSWPRGM            U    000020       1  1663
SCSWPROT            U    000010       1  1664
SCSWSAS             U    000010       1  1642
SCSWSINT            U    000008       1  1643
ASMA Ver. 0.2.0  BOOT LOADER                                                                        07 Sep 2020 09:13:11  Page    61

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

SCSWSM              U    000040       1  1652
SCSWSPEN            U    000001       1  1646
SCSWSPRI            U    000004       1  1644
SCSWSSEC            U    000002       1  1645
SCSWSSIC            U    000008       1  1624
SCSWSUSC            U    000008       1  1612
SCSWUC              U    000002       1  1657  1169
SCSWUS              X    000008       1  1650  1135
SCSWUX              U    000001       1  1658  1184
SERVENAD            H    0008B0       2   869   620   870
SERVEXCP            H    00098C       2  1031   623  1032
SERVIOIN            H    0007F4       2   710   614   711
SERVNOOP            H    0007C8       2   665   611   666
SERVPEND            H    000B60       2  1268   626  1269
SERVQIOT            H    000874       2   816   617   817
SERVTBL             A    0007AC       4   611   583
SPB                 4    000000      16  1391   309   568   668   713   726   819   872   884  1034  1046  1271
SPBCCW0             U    000001       1  1403
SPBCCW1             U    000002       1  1404
SPBCCWF             X    000002       1  1402
SPBCHST             X    000007       1  1423
SPBDCLS             X    000004       1  1416   898   945
SPBDEVST            X    000006       1  1422   934
SPBE                U    000004       1  1394  1410  1415  1417  1419  1424  1464
SPBEATN             U    000080       1  1443
SPBEBY1             U    000080       1  1433  1443  1072
SPBECTL             X    000002       1  1432  1068  1072
SPBENRM             U    00000C       1  1442
SPBEORB             F    000004       4  1449  1450
SPBEORB1            X    000009       1  1455  1060
SPBEORB2            X    00000B       1  1457  1062
SPBEORBC            X    00000C       4  1458
SPBEORBK            X    000008       1  1452  1058  1080
SPBEORBL            X    00000A       1  1456
SPBEORBM            U    0000F0       1  1453
SPBEORBP            X    00000D       3  1460  1074  1081
SPBEORBR            U    00000F       1  1454  1058
SPBEORBT            F    000004       4  1451  1052  1054  1056  1077
SPBEWCO             U    000008       1  1439
SPBEWDC             U    00000C       1  1438  1442   462
SPBEWDO             U    000004       1  1440
SPBEWNO             U    000000       1  1441
SPBEWTM             U    00000C       1  1436
SPBID               H    000000       2  1392   575   576
SPBIOTA             F    000004       4  1397   309   778   840   897   905   986  1284  1307
SPBPEND             X    000003       1  1445  1153  1172
SPBPENDG            U    000001       1  1446  1153  1172
SPBPENDN            U    000000       1  1447
SPBSI               H    000002       2  1393  1401  1431   678   680   739   782   833   888   921
SSARCHMD            X    0000A3       1  1830
SSARS               F    000120       4  1886
SSCLKCMP            F    0000E0       8  1880
ASMA Ver. 0.2.0  BOOT LOADER                                                                        07 Sep 2020 09:13:11  Page    62

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

SSCPUTIM            F    0000D8       8  1879
SSCRS               F    0001C0       4  1889
SSFPRS              D    000160       8  1887
SSGRS               F    000180       4  1888
SSMODEL             F    00010C       4  1884
SSPREFIX            F    000108       4  1883
SSPSW               F    000100       8  1882
SSXSAA              A    0000D4       4  1878
STBC0010            3    000498       8   219   253
STFLDATA            F    0000C8       4  1851
SVCICODE            H    00008A       2  1810
SVCIID              F    000088       4  1806
SVCIILC             X    000089       1  1808
SVCIILCM            U    00000C       1  1809
SVCNPSW             F    000060       8  1793
SVCOPSW             F    000020       8  1765  1772
TEST00              Y    0006A4       2   446   291
TIMER               F    000050       4  1789
TTDES               F    000054       4  1790
UA0                 F    000010       8  1762
UA1                 F    00004C       4  1787
UA2                 F    0000A4       4  1832
UA3                 F    0000B4       4  1841
UA4                 X    0000B8       1  1842
UA5                 X    0000CC       8  1852
UA6                 X    0000EC       8  1858
UA7                 F    000118       8  1869
UA8                 X    000180      32  1898
VMVC0022            I    000638       2   403   409
VMVE0022            H    000654       2   412   404
VMVM0022            I    00065E       6   416   414
VMVX0022            H    000664       2   417   410   415
WH310010            3    000490       8   218   231
ZBRKADDR            A    000110       8  1868
ZEMONCNT            F    00010C       4  1867
ZEMONCTR            A    000100       8  1865
ZEMONSIZ            F    000108       4  1866
ZEXTNPSW            X    0001B0      16  1901
ZEXTOPSW            X    000130      16  1893
ZIONPSW             X    0001F0      16  1905
ZIOOPSW             X    000170      16  1897
ZMCKNPSW            X    0001E0      16  1904
ZMCKOPSW            X    000160      16  1896
ZMKFAILA            F    0000F8       8  1860
ZMONCODE            F    0000B0       8  1835
ZPGMNPSW            X    0001D0      16  1903
ZPGMOPSW            X    000150      16  1895
ZPGMTRX             F    0000A8       8  1834
ZRSTNPSW            X    0001A0      16  1900
ZRSTOPSW            X    000120      16  1892
ZSASDISP            U    0011C0       1  1906
ZSVCNPSW            X    0001C0      16  1902
ASMA Ver. 0.2.0  BOOT LOADER                                                                        07 Sep 2020 09:13:11  Page    63

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

ZSVCOPSW            X    000140      16  1894
ASMA Ver. 0.2.0  BOOT LOADER                                                                        07 Sep 2020 09:13:11  Page    64

 MACRO     DEFN  REFERENCES

AARCH       262
APROB       203
ARCHIND      85
ARCHLVL      84
ASAIPL      144
ASALOAD     132
ASAREA     1752
BLASALD     131
BLCOMMON   1322
BLINIT      170
BLMEM      1352
BLSASA     1751
BLSCALL     290    299    317    377    889
BLSERR      742    948
BLSIODS    1554
BLSIOT     1467
BLSORB      463
BLSPB      1387
BLSTABLE    609
BOOTNTR     436
DSECTS     1560   1607   1678   1702
DWAIT       533    538    540
DWAITEND    537
IOFMT      1561   1608   1679   1703
IOTBL      1379
LOADHL      348    394
LOD1       1911
LTEST       584   1283
ORB         464
SAVEAREA   1360   1362   1364   1366   1368   1370   1372   1528
SERVENAD    865
SERVEND     628
SERVEXCP   1027
SERVICE     662    707    813    866   1028   1265
SERVID      610    613    616    619    622    625
SERVIOIN    706
SERVNOOP    661
SERVPEND   1264
SERVQIOT    812
SERVRTN     682    788    842    989   1218   1309
SERVS       565
STCCWADR    362
STCCWCNT    353
STLOD1      191
TRAP64      134    137
VMOVE       400
ZEROH       350    396
ASMA Ver. 0.2.0  BOOT LOADER                                                                        07 Sep 2020 09:13:11  Page    65

   DESC     SYMBOL  SIZE    POS      ADDR

Entry: 0

Image      IMAGE    2520  000-9D7  000-9D7
  Region   ASAREGN   512  000-1FF  000-1FF
    CSECT  ASASECT   512  000-1FF  000-1FF
  Region   LOADER   2008  200-9D7  400-BD7
    CSECT  LODSECT  2008  200-9D7  400-BD7


 ADDR    POS                                OBJECT CONTENT                                         CHARACTER CONTENT


Region: ASAREGN

000000   000   00000000 00000400 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
000020   020   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
000040   040   00000000 00000000 00000000 00000000  00000000 00000000 00020000 00000018   |................ ................|
000060   060   00020000 00000020 00020000 00000028  00020000 00000030 00020000 00000038   |................ ................|
000080   080   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
0000A0   0A0   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
0000C0   0C0   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
0000E0   0E0   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
000100   100   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
000120   120   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
000140   140   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
000160   160   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
000180   180   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
0001A0   1A0   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
0001C0   1C0   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
0001E0   1E0   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|

Region: LOADER

000400   200   900F0200 05C089C0 000888C0 0008D201  00BA0002 D2070000 C34A9512 02444770   |......i...h...K. ....K...C¢n.....|
000420   220   C2E2D207 0000C34A 92110255 92010256  92010254 92060257 4100C362 50000270   |BSK...C¢k...k... k...k.....C.&...|
000440   240   4100C39A 50000278 D20FC09A 01D0D207  C0AA0060 D207C0B2 0068D20F 01D0C06A   |..C.&...K.....K. ...-K.....K....¦|
000460   260   D2070060 C07AD207 0068C082 1B660A00  00000001 80000000 00000000 000004C0   |K..-.:K....b.... ................|
000480   280   00080000 800004C8 00080000 000004E6  00080000 800004FA 00000000 000004FA   |.......H.......W ................|
0004A0   2A0   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
0004C0   2C0   47690009 47F0C0F4 D2070068 C08A4160  0007B2B1 00009140 00C84780 C0F44160   |.....0.4K......- ......j .H...4.-|
0004E0   2E0   000847F0 C0F44160 00039108 00294710  C0F44160 00028200 C092D20F 01D0C09A   |...0.4.-..j..... .4.-..b..kK.....|
000500   300   D2070060 C0AAD207 0068C0B2 42600274  1F669502 02744780 C12E9503 02744770   |K..-..K......-.. ..n.....A.n.....|
000520   320   C12A8200 C1220000 00000000 00000534  4160000C 47F6C132 47F0C142 47F0C30A   |A.b.A........... .-...6A..0A..0C.|
000540   340   47F0C30A 47F0C30A 41D0C7D2 4110C29E  58F00270 05EF12FF 4780C158 00004110   |.0C..0C...GK..B. .0........A.....|
000560   360   C2A258F0 027005EF 12FF4780 C16A0000  5860C2A6 5060C2B6 D201C2AC 60004110   |Bs.0........A¦.. .-Bw&-B.K.B.-...|
000580   380   C2AA58F0 027005EF 47FFC186 47F0C18E  00000004 D201C316 00BA1B22 18921B62   |B..0......Af.0A. ....K.C......k..|
0005A0   3A0   48600246 89600010 88600010 4060C330  88600009 4060C344 18560660 5060C33E   |.-..i-..h-.. -C. h-.. -C....-&-C.|
0005C0   3C0   5840026C 4240C32D 88400008 4240C32C  88400008 4240C32B 89400008 4340C32C   |. .%. C.h ... C. h ... C.i ... C.|
0005E0   3E0   89400008 4340C32D D203C336 02584184  00064130 CAAA4110 C2B258F0 027005EF   |i ... C.K.C....d ........B..0....|
000600   400   47FFC1FE 47F0C214 00000004 47F0C2D2  47F0C2C2 00000010 000058A4 0000153A   |..A..0B......0BK .0BB.......u....|
000620   420   4720C2EA 48940004 89900010 88900010  18691B99 41900100 19B947D0 C24ED2FF   |..B..m..i...h... ...r........B+K.|
000640   440   A0008000 1EA91E89 1BB94720 C2324780  C25E0000 06B044B0 C25847F0 C25ED200   |.....z.i....B... B;......B..0B;K.|
ASMA Ver. 0.2.0  BOOT LOADER                                                                        07 Sep 2020 09:13:11  Page    66

 ADDR    POS                                OBJECT CONTENT                                         CHARACTER CONTENT

000660   460   A0008000 5E60024C 5060024C 91804000  4710C27C 18655E60 C3365060 C33647F0   |....;-.<&-.<j. . ..B@..;-C.&-C..0|
000680   480   C1F0D503 0248024C 4770C2FA 91800250  4710C302 91010253 4710C302 58F00250   |A0N....<..B.j..& ..C.j.....C..0.&|
0006A0   4A0   07FF0000 00000000 00010000 00000000  00020000 00000000 00040C00 00000000   |................ ................|
0006C0   4C0   0000FF00 00000720 9204C361 8200C35A  9208C361 8200C35A 920CC361 8200C35A   |........k.C/b.C! k.C/b.C!k.C/b.C!|
0006E0   4E0   9210C361 8200C35A 9218C361 8200C35A  921CC361 8200C35A 9220C361 8200C35A   |k.C/b.C!k.C/b.C! k.C/b.C!k.C/b.C!|
000700   500   9224C361 8200C35A 9228C361 8200C35A  922CC361 8200C35A 00000001 00000000   |k.C/b.C!k.C/b.C! k.C/b.C!........|
000720   520   63000738 40000010 43000748 40000008  42000000 00000000 40000000 00000000   |.... ....... ... ........ .......|
000740   540   00000000 00000000 06000000 00000000  00020000 00010008 00020000 00000000   |................ ................|
000760   560   00020000 00050000 90ECD00C 18CF4820  1000D500 10010257 4740C01A 11F247F0   |................ ..N...... ...2.0|
000780   580   C0388920 00024122 C0445822 00001222  4770C034 48F0C042 47F0C038 18C207FC   |..i............. .....0...0...B..|
0007A0   5A0   5000D010 98ECD00C 07FEFFFF 000007C8  000007F4 00000874 000008B0 0000098C   |&...q..........H ...4............|
0007C0   5C0   00000B60 C2D3E200 4120C458 5020D008  50D02004 18D248B0 100241B0 B00140B0   |...-BLS...D.&... &....K........ .|
0007E0   5E0   10021B00 58D0D004 58F00278 07FF0000  C2D3E201 4120C474 5020D008 50D02004   |.........0...... BLS...D.&...&...|
000800   600   18D21841 4160C5DC 5060C3D4 5850C3D0  1E565050 C3D04850 00BA4050 60005050   |.K...-E.&-CM.&C. ..&&C..&.. &-.&&|
000820   620   6004D200 60024002 92F1600C 91806002  47E0C044 94FE600C 91406002 47E0C050   |-.K.-. .k1-.j.-. ....m.-.j -....&|
000840   640   947F600C 50604004 4170601F 5070C3DC  92014002 47F0C06C 41000004 47F0C06E   |m"-.&- ...-.&.C. k. ..0.%.....0.>|
000860   660   1B0058D0 D00458F0 027807FF FFFFFFFF  C2D3E202 4120C43C 5020D008 50D02004   |.......0........ BLS...D.&...&...|
000880   680   18D21B00 9857C354 D5011002 50004780  C0288756 C0141850 41000004 50501004   |.K..q.C.N...&... ..g....&....&&..|
0008A0   6A0   58D0D004 58F00278 07FF0000 C2D3E203  4120C448 5020D008 50D02004 18D21841   |.....0......BLS. ..D.&...&....K..|
0008C0   6C0   1B00D201 C0D04002 4110C0CE 58F00270  05EF12FF 4770C04A 5850C0D2 D5004004   |..K... ......0.. .......¢.&.KN. .|
0008E0   6E0   50024780 C03E4100 001447F0 C0C45050  40044100 000447F0 C0C45820 C3201832   |&..........0.D&&  ......0.D..C...|
000900   700   5E30C31C 5530C314 4740C064 41000010  47F0C0C4 41202001 48104002 9D001000   |;.C...C.. ...... .0.D...... .....|
000920   720   4780C092 4740C07C 47F0C08A D2014006  00444100 000847F0 C0C44100 000C47F0   |...k. .@.0..K. . .......0.D.....0|
000940   740   C0C44010 20005010 2004D200 20024004  92F1200C 91802002 47E0C0B0 94FE200C   |.D ...&...K... . k1..j.......m...|
000960   760   91402002 47E0C0BC 947F200C 50204004  5030C320 58D0D004 58F00278 07FF0002   |j ......m"..&. . &.C......0......|
000980   780   00000000 00000000 C2D3E204 4120C3B4  5020D008 50D02004 18D21841 1F00D503   |........BLS...C. &...&....K....N.|
0009A0   7A0   4004C23C 4740C198 D5034004 C2444720  C1989103 40074770 C198910F 40084770   | .B.. AqN. .B... Aqj. ...Aqj. ...|
0009C0   7C0   C1989500 40094770 C1989500 400B4770  C198D200 C1CE4002 940CC1CE 91804002   |Aqn. ...Aqn. ... AqK.A. .m.A.j. .|
0009E0   7E0   4710C090 D502400D C1C44780 C1985850  4004D200 00484008 D2020049 400DD201   |....N. .AD..Aq.&  .K... .K... .K.|
000A00   800   5008C1C4 58105004 9C001000 4740C18C  4720C18C 4710C180 92805003 D2070078   |&.AD..&...... A. ..A...A.k.&.K...|
000A20   820   C1B48200 C1ACD207 0078C1BC D20100BA  003A4910 00BA4770 C0B89201 C2481875   |A.b.A.K...A.K... ..........k.B...|
000A40   840   47F0C0D6 9879C23C D50100BA 70064780  C0D28778 C0BC9200 C24847F0 C0909202   |.0.Oq.B.N....... .Kg...k.B..0..k.|
000A60   860   C248D203 7011C1C4 D2007010 0040D206  70150041 D6017008 70189602 70039102   |B.K...ADK.... K. ....O.....o...j.|
000A80   880   70034710 C0FC0000 91407002 47E0C122  91807008 47E0C122 9204700B 96207003   |........j ....A. j.....A.k...o...|
000AA0   8A0   92014003 15574770 C09047F0 C16A9500  50094770 C1804330 500C4430 C1CA4770   |k. ........0A¦n. &...A...&...A...|
000AC0   8C0   C1809102 500847E0 C14E9200 500B9201  40039620 500347F0 C1804330 C1CE4430   |A.j.&...A+k.&.k.  .o.&..0A...A...|
000AE0   8E0   C1CA47E0 C0909180 500247E0 C16A9101  50084710 C174947F 50031F00 47F0C19C   |A.....j.&...A¦j. &...A.m"&....0A.|
000B00   900   947F5003 41000004 47F0C19C 947F5003  41000008 47F0C19C 947F5003 4100000C   |m"&......0A.m"&. .....0A.m"&.....|
000B20   920   47F0C19C 41000010 58D0D004 58F00278  07FF0000 00000000 FE020000 00000000   |.0A..........0.. ................|
000B40   940   00000000 00000A26 00020000 00000038  00000000 00019100 50080000 C2D3E205   |................ ......j.&...BLS.|
000B60   960   4120C228 5020D008 50D02004 18D21B00  58501004 12554780 C0269120 50034710   |..B.&...&....K.. .&........j.&...|
000B80   980   C03A47F0 C0529857 C0689120 50034710  C03A8756 C02A47F0 C0529504 500B4780   |...0..q...j.&... ..g....0..n.&...|
000BA0   9A0   C04A4100 000447F0 C04E4100 00085050  100458D0 D00458F0 027807FF 00000BD8   |.¢.....0.+....&& .......0.......Q|
000BC0   9C0   00000000 00000100 00000000 00000020  00000000 00000000                     |................ ........        |
ASMA Ver. 0.2.0  BOOT LOADER                                                                        07 Sep 2020 09:13:11  Page    67

   STMT                       FILE NAME

1     /home/harold/SATKREPO/SATK/srcasm/loader/fbalodr.asm
2     /home/harold/SATKREPO/SATK/srcasm/loader/bls.asm


** NO ERRORS FOUND **

[124] MNOTE *,ARCHLVL - ARCHITECTURE LEVEL SET - 1
