ASMA Ver. 0.2.0                                                                                     08 Sep 2020 07:32:45  Page     1

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                             1 * Copyright (C) 2020 Harold Grovesteen
                                                                             2 *
                                                                             3 * This file is part of SATK.
                                                                             4 *
                                                                             5 *     SATK is free software: you can redistribute it and/or modify
                                                                             6 *     it under the terms of the GNU General Public License as published by
                                                                             7 *     the Free Software Foundation, either version 3 of the License, or
                                                                             8 *     (at your option) any later version.
                                                                             9 *
                                                                            10 *     SATK is distributed in the hope that it will be useful,
                                                                            11 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
                                                                            12 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                            13 *     GNU General Public License for more details.
                                                                            14 *
                                                                            15 *     You should have received a copy of the GNU General Public License
                                                                            16 *     along with SATK.  If not, see <http://www.gnu.org/licenses/>.
                                                                            17 *
ASMA Ver. 0.2.0  FBA BOOT LOADER                                                                    08 Sep 2020 07:32:45  Page     2

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                            19 * Program Description:
                                                                            20 *
                                                                            21 * LOADER is a generic boot loader program.  It requires input/output commands to
                                                                            22 * the IPL device to load the booted program.  This boot loader is executed by
                                                                            23 * means of an IPL from a FBA DASD volume.  Control is passed to the booted
                                                                            24 * program by means of a branch instruction.
                                                                            25 *
                                                                            26 * Various boot loader services are provided for use by the loader itself and
                                                                            27 * the booted program.
                                                                            28 *
                                                                            29 * Target Architecture: S/360, S/370, ESA/390, or z/Arch
                                                                            30 *
                                                                            31 * Devices Used:
                                                                            32 *   110 - FBA IPL volume containing the booted program
                                                                            33 *
                                                                            34 * Program Register Usage:
                                                                            35 *
                                                                            36 *   R0   Base register for access to the ASA.  Required by DSECT usage
                                                                            37 *        This is purely an assembler artifact.  R0 available for other uses
                                                                            38 *   R1   Device Channel and Unit Addresses for I/O instructions
                                                                            39 *   R2   Cumulative size of loaded program
                                                                            40 *   R3   Boot loader high water mark (can not write below it)
                                                                            41 *   R4   FBA I/O Area address (where a directed record is read)
                                                                            42 *   R5   Number of FBA sectors read for each directed record
                                                                            43 *   R6   Work register
                                                                            44 *   R8   Source address of directed record's content    ---+
                                                                            45 *   R9   Length of a directed record's program content     |-- MVCL
                                                                            46 *   R10  Destination address of directed record's content  |
                                                                            47 *   R11  Length of a directed record's program content  ---+
                                                                            48 *   R12  The program base register
                                                                            49 *   R13  available
                                                                            50 *   R14  available
                                                                            51 *   R15  Booted program's entry address
                                                                            52 *
                                                                            53 * Disabled Wait State PSW's address field values used by the program:
                                                                            54 *    X'000000' - Successful execution of the program
                                                                            55 *    X'000008' - Unexpected Restart interruption occurred. Old Restart PSW at
                                                                            56 *                address X'8'
                                                                            57 *    X'000018' - Unexpected External interruption occurred.  Old External PSW at
                                                                            58 *                address X'18'
                                                                            59 *    X'000020' - Unexpected Supervisor interruption occurred.  Old Supervisor
                                                                            60 *                PSW at address X'20'
                                                                            61 *    X'000028' - Unexpected Program interruption occurred. Old Program PSW at
                                                                            62 *                address X'28'
                                                                            63 *    X'000030' - Unexpected Machine Check interruption occurred.  Old Machine
                                                                            64 *                Check PSW at address X'30'
                                                                            65 *    X'000038' - Unexpected Input/Output interruption occurred.  Old
                                                                            66 *                Input/Output PSW at address X'38'
                                                                            67 *    X'050004' - IPL Device or channel not operational
                                                                            68 *    X'050008' - IPL Device or channel busy
                                                                            69 *    X'05000C' - IPL Device or channel had a problem. See SCSW in IOT entry
                                                                            70 *    X'050010' - Unexpected interruption from some other device. See ASA X'BA'
ASMA Ver. 0.2.0  FBA BOOT LOADER                                                                    08 Sep 2020 07:32:45  Page     3

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                            71 *    X'050014' - NOT USED
                                                                            72 *    X'050018' - IPL device not supported by this boot loader
                                                                            73 *    X'05001C' - Directed record overwriting boot loader
                                                                            74 *    X'050020' - Destructive overlap detected by MVCL while loading record
                                                                            75 *    X'050024' - Cumulative booted program sizes do not match in LOD1
                                                                            76 *    X'050028' - Can not change addressing mode for booted program
                                                                            77 *    X'05002C' - Incompatbile run-time and assembly-time architectures
ASMA Ver. 0.2.0  FBA BOOT LOADER - ARCHITECTURE LEVEL SET AND LOAD ASA CONTENT                      08 Sep 2020 07:32:45  Page     4

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                            79 * See all object data and macro generated model statements in the listing
                                                                            80          PRINT DATA,GEN

                                                                            82 * Inform the SATK macros of the architecture being targeted.  Inferred from
                                                                            83 * the ASMA -t command-line argument.
                                                                            84          ARCHLVL
                                                                            86+$AL      OPSYN AL
                                                                            87+$ALR     OPSYN ALR
                                                                            88+$B       OPSYN B
                                                                            89+$BAS     OPSYN BAS
                                                                            90+$BASR    OPSYN BASR
                                                                            91+$BC      OPSYN BC
                                                                            92+$BCTR    OPSYN BCTR
                                                                            93+$BE      OPSYN BE
                                                                            94+$BH      OPSYN BH
                                                                            95+$BL      OPSYN BL
                                                                            96+$BM      OPSYN BM
                                                                            97+$BNE     OPSYN BNE
                                                                            98+$BNH     OPSYN BNH
                                                                            99+$BNL     OPSYN BNL
                                                                           100+$BNM     OPSYN BNM
                                                                           101+$BNO     OPSYN BNO
                                                                           102+$BNP     OPSYN BNP
                                                                           103+$BNZ     OPSYN BNZ
                                                                           104+$BO      OPSYN BO
                                                                           105+$BP      OPSYN BP
                                                                           106+$BXLE    OPSYN BXLE
                                                                           107+$BZ      OPSYN BZ
                                                                           108+$CH      OPSYN CH
                                                                           109+$CLR     OPSYN CLR
                                                                           110+$L       OPSYN L
                                                                           111+$LH      OPSYN LH
                                                                           112+$LM      OPSYN LM
                                                                           113+$LNR     OPSYN LNR
                                                                           114+$LPSW    OPSYN LPSW
                                                                           115+$LR      OPSYN LR
                                                                           116+$LTR     OPSYN LTR
                                                                           117+$NR      OPSYN NR
                                                                           118+$SL      OPSYN SL
                                                                           119+$SLR     OPSYN SLR
                                                                           120+$SR      OPSYN SR
                                                                           121+$ST      OPSYN ST
                                                                           122+$STM     OPSYN STM
                                                                           123+$X       OPSYN X
                                                                           124+$AHI     OPSYN AHI
                                                                           125+$B       OPSYN J
                                                                           126+$BC      OPSYN BRC
                                                                           127+$BE      OPSYN JE
                                                                           128+$BH      OPSYN JH
                                                                           129+$BL      OPSYN JL
                                                                           130+$BM      OPSYN JM
                                                                           131+$BNE     OPSYN JNE
ASMA Ver. 0.2.0  FBA BOOT LOADER - ARCHITECTURE LEVEL SET AND LOAD ASA CONTENT                      08 Sep 2020 07:32:45  Page     5

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           132+$BNH     OPSYN JNH
                                                                           133+$BNL     OPSYN JNL
                                                                           134+$BNM     OPSYN JNM
                                                                           135+$BNO     OPSYN JNO
                                                                           136+$BNP     OPSYN JNP
                                                                           137+$BNZ     OPSYN JNZ
                                                                           138+$BO      OPSYN JO
                                                                           139+$BP      OPSYN JP
                                                                           140+$BXLE    OPSYN JXLE
                                                                           141+$BZ      OPSYN JZ
                                                                           142+$CHI     OPSYN CHI
                                                                           143+$LHI     OPSYN LHI
                                                                           144+$AHI     OPSYN AGHI
                                                                           145+$AL      OPSYN ALG
                                                                           146+$ALR     OPSYN ALGR
                                                                           147+$BCTR    OPSYN BCTGR
                                                                           148+$BXLE    OPSYN JXLEG
                                                                           149+$CH      OPSYN CGH
                                                                           150+$CHI     OPSYN CGHI
                                                                           151+$CLR     OPSYN CLGR
                                                                           152+$L       OPSYN LG
                                                                           153+$LH      OPSYN LGH
                                                                           154+$LHI     OPSYN LGHI
                                                                           155+$LM      OPSYN LMG
                                                                           156+$LNR     OPSYN LNGR
                                                                           157+$LPSW    OPSYN LPSWE
                                                                           158+$LR      OPSYN LGR
                                                                           159+$LTR     OPSYN LTGR
                                                                           160+$NR      OPSYN NGR
                                                                           161+$SL      OPSYN SLG
                                                                           162+$SLR     OPSYN SLGR
                                                                           163+$SR      OPSYN SGR
                                                                           164+$ST      OPSYN STG
                                                                           165+$STM     OPSYN STMG
                                                                           166+$X       OPSYN XG
                                                                           167+         MNOTE *,'ARCHLVL - ARCHITECTURE LEVEL SET - 9'
                  ** [167] MNOTE *,ARCHLVL - ARCHITECTURE LEVEL SET - 9


                                                                           169 * Ensure interrupt traps are loaded by iplasma.py before program execution
                                                                           170 * begins.  This macro will create the memory region that will also contain
                                                                           171 * the IPL PSW.  The region name defaults to ASAREGN.  iplasma.py knows how
                                                                           172 * to deal with ASA creation.

                                                                           174 ASASECT  BLASALD
                                      0000000000000000  00000000000001FF   176+ASASECT  START 0,ASAREGN
0000000000000000  000A0000 00000008                                        178+         PSWE390 0,0,2,0,X'008'    64-bit Restart ISR Trap New PSW
0000000000000008                      0000000000000008  0000000000000058   179+         ORG   ASASECT+X'058'
0000000000000058  000A0000 00000018                                        181+         PSWE390 0,0,2,0,X'018'    64-bit External ISR Trap New PSW
0000000000000060  000A0000 00000020                                        182+         PSWE390 0,0,2,0,X'020'    64-bit Supervisor Call ISR Trap New PSW
0000000000000068  000A0000 00000028                                        183+         PSWE390 0,0,2,0,X'028'    64-bit Program ISR Trap New PSW
0000000000000070  000A0000 00000030                                        184+         PSWE390 0,0,2,0,X'030'    64-bit Machine Check Trap New PSW
ASMA Ver. 0.2.0  FBA BOOT LOADER - ARCHITECTURE LEVEL SET AND LOAD ASA CONTENT                      08 Sep 2020 07:32:45  Page     6

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000078  000A0000 00000038                                        185+         PSWE390 0,0,2,0,X'038'    64-bit Input/Output Trap New PSW
0000000000000080                      0000000000000080  00000000000001A0   186+         ORG   ASASECT+X'1A0'
00000000000001A0  00020000 00000000                                        188+         PSWZ  0,0,2,0,X'120'     Restart ISR Trap New PSW
00000000000001A8  00000000 00000120
00000000000001B0  00020000 00000000                                        189+         PSWZ  0,0,2,0,X'130'     External ISR Trap New PSW
00000000000001B8  00000000 00000130
00000000000001C0  00020000 00000000                                        190+         PSWZ  0,0,2,0,X'140'     Supervisor Call ISR Trap New PSW
00000000000001C8  00000000 00000140
00000000000001D0  00020000 00000000                                        191+         PSWZ  0,0,2,0,X'150'     Program ISR Trap New PSW
00000000000001D8  00000000 00000150
00000000000001E0  00020000 00000000                                        192+         PSWZ  0,0,2,0,X'160'     Machine Check Trap New PSW
00000000000001E8  00000000 00000160
00000000000001F0  00020000 00000000                                        193+         PSWZ  0,0,2,0,X'170'     Input/Output Trap New PSW
00000000000001F8  00000000 00000170
                                                                           194          ASAIPL IA=LODSTART    Define the bare-metal program's IPL PSW
                                      0000000000000000  00000000000001FF   195+ASASECT  CSECT
0000000000000200                      0000000000000200  0000000000000000   196+         ORG   ASASECT
0000000000000000  00080000 00000400                                        197+         PSWE390 0,0,0,0,LODSTART,24
0000000000000008                      0000000000000008  0000000000000200   198+         ORG   ASASECT+512      Reset CSECT to end of assigned storage area
                                      0000000000000000  00000000000001FF   199+ASASECT  CSECT



                                                                           201 *
                                                                           202 *  Commonly used FBA Values
                                                                           203 *

                                                                           205 * CCW Commands
                                      0000000000000003  0000000000000001   206 NOP      EQU   X'03'     No operation CCW Command
                                      0000000000000063  0000000000000001   207 DEFN_EXT EQU   X'63'     Define Extent CCW Command
                                      0000000000000043  0000000000000001   208 LOC_DATA EQU   X'43'     Locate CCW Command (within a defined extent)
                                      0000000000000042  0000000000000001   209 READ     EQU   X'42'     Read located data CCW Command

                                                                           211 * CCW Flags
                                      0000000000000040  0000000000000001   212 CC       EQU   X'40'     CCW Command chaining
ASMA Ver. 0.2.0  FBA BOOT LOADER - INITIALIZATION                                                   08 Sep 2020 07:32:45  Page     7

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           214 *
                                                                           215 * FBA Boot Loader Program
                                                                           216 *

                                      0000000000000400  0000000000000C67   218 LODSECT  START X'400',LOADER   Start a second region for the loader itself
                                                                           219 * This results in LOADER.bin being created in the list directed IPL directory
                                                                           220          BLINIT DTYPE=LOD1LENF+LOD1FBA
0000000000000400                      0000000000000000                     221+         USING ASA,0           Give me instruction access to the ASA and LOD1
0000000000000400  900F 0200                             0000000000000200   222+LODSTART STM   0,15,LODPARMS   Preserve Hercules IPL parameters, if any.
                                                                           223+* This must happen before any register is altered!
0000000000000404  0DC0                                                     224+         BASR  12,0            Establish my base register
0000000000000406                      0000000000000406                     225+         USING *,12            Tell the assembler
                                                                           226+* Ensure program is not re-entered by a Hercules console initiated restart.
                                                                           227+* Address 0 changed from its absolute storage role (IPL PSW) to its real
                                                                           228+* storage role (Restart New PSW) after the IPL.
                                                                           229+* Change from the IPL PSW at address 0 to a Restart New PSW trap
0000000000000406  D207 0000 C31A      0000000000000000  0000000000000720   230+         MVC   RSTNPSW,PGMRS

                                                                           232+* Check that the IPL device created by IPLASMA can be processed by this
                                                                           233+* Boot loader.
                                                                           234+         CLI   LOD1DTYP,LOD1LENF+LOD1FBA \
000000000000040C  9512 0244                             0000000000000244      +                                  Can I handle the IPL device type?
0000000000000410  4770 C2B2                             00000000000006B8   235+         BNE   BADDEVT            ..No, end with 018 error code



                                                                           237+* Store data in LOD1 record
0000000000000414  9222 0255                             0000000000000255   239+         MVI   LOD1IO,X'22'           Set I/O arch. and mode in use
0000000000000418  9203 0256                             0000000000000256   240+         MVI   LOD1BLAM,X'03'         Set booted program entry AM as 64
000000000000041C  9209 0254                             0000000000000254   241+         MVI   LOD1CPU,9              Set assembled CPU architecture
0000000000000420  9206 0257                             0000000000000257   242+         MVI   LOD1BLSV,BLSNUM        Set start of unsupported services
0000000000000424  4100 C332                             0000000000000738   243+         LA    0,BLS                  Locate services entry point
0000000000000428  5000 0270                             0000000000000270   244+         ST    0,LOD1BLST             Store it in LOD1
000000000000042C  4100 C372                             0000000000000778   245+         LA    0,BLSR                 Locate the service return
0000000000000430  5000 0278                             0000000000000278   246+         ST    0,LOD1RTN              Save it in LOD1 reserved area



                                                                           248+* Determine the running architecture of the CPU
0000000000000434  D20F C08A 01D0      0000000000000490  00000000000001D0   250+         MVC   APSZ0011(16),X'1D0'      Save current 128-bit SVC PSW
000000000000043A  D207 C09A 0060      00000000000004A0  0000000000000060   251+         MVC   APSS0011(8),X'060'       Save current 64-bit SVC PSW
0000000000000440  D207 C0A2 0068      00000000000004A8  0000000000000068   252+         MVC   APSP0011(8),X'068'       Save current 64-bit PGM PSW
0000000000000446  D20F 01D0 C05A      00000000000001D0  0000000000000460   253+         MVC   X'1D0'(16,0),AP640011    Set up 128-bit SVC New PSW
000000000000044C  D207 0060 C06A      0000000000000060  0000000000000470   254+         MVC   X'060'(8,0),AP310011     Set up 64-bit SVC New PSW
0000000000000452  D207 0068 C072      0000000000000068  0000000000000478   255+         MVC   X'068'(8,0),AP240011     Set up 64-bit PGM New PSW
0000000000000458  1B66                                                     256+         SR    6,6                      Make sure result register is zero
000000000000045A  0A00                                                     257+         SVC   0   NOW DO THE PROBE
                                                                           258+* Control never falls through here.  An interruption takes control elsewhere.

                                                                           260+* Data used by APROB
0000000000000460  00000001 80000000                                        261+AP640011 PSWZ  0,0,0,0,IS640011,64           64-bit architecture detected
0000000000000468  00000000 000004B0
ASMA Ver. 0.2.0  FBA BOOT LOADER - INITIALIZATION                                                   08 Sep 2020 07:32:45  Page     8

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000470  00080000 800004B8                                        262+AP310011 PSW380 0,0,0,0,IS310011,31          31-bit architecture detected
0000000000000478  00080000 000004D6                                        263+AP240011 PSWEC 0,0,0,0,IS240011,24           24-bit architecture detected
0000000000000480  00080000 800004EA                                        264+WH310011 PSW380 0,0,0,0,APDN0011,31          31-bit tests complete
0000000000000488  00000000 000004EA                                        265+STBC0011 PSWBC 0,0,0,0,APDN0011,24           Restores BC-mode for S/370 when detected
0000000000000490  00000000 00000000                                        266+APSZ0011 DC    FD'0,0'                       128-bit SVC PSW save area
0000000000000498  00000000 00000000
00000000000004A0  00000000 00000000                                        267+APSS0011 DC    FD'0'                         64-bit SVC PSW save area
00000000000004A8  00000000 00000000                                        268+APSP0011 DC    FD'0'                         64-bit PGM PSW save area

00000000000004B0                                                           270+IS640011 DS    0H    64-bit architecture found
                                                                           271+*        LGHI  &REG,9  Use of LGHI ensures all high-order bits in 64-bit reg. are 0
00000000000004B0  47690009                                                 272+         DC    AL1(X'47',6*16+9),HL2'9'
00000000000004B4  47F0 C0E4                             00000000000004EA   273+         B     APDN0011      64-bit tests are done

00000000000004B8                                                           275+IS310011 DS    0H    31-bit architecture found
                                                                           276+* Detect which 31-bit architecture
00000000000004B8  D207 0068 C07A      0000000000000068  0000000000000480   277+         MVC   X'068'(8,0),WH310011        Set up 31-bit trap PSW
                                                                           278+* A failure on the test instruction causes immediate end to any testing
                                                                           279+* Therefore, the level detected by the failure is set before the test instruction
                                                                           280+* is executed.
                                                                           281+* Level 7 - Detect native ESA/390
00000000000004BE  4160 0007                             0000000000000007   282+         LA    6,7              Set level to 7 (native ESA/390)
                                                                           283+*        STFL  0(0)             STORE FACILITY LIST
00000000000004C2  B2B10000                                                 284+         DC    X'B2B10000'
                                                                           285+* An operation exception definitely implies native ESA/390
                                                                           286+* Depending upon the platform STFL might actually work.  Test the STFL bits then.
00000000000004C6  9140 00C8                             00000000000000C8   287+         TM    200,X'40'        Is z/Architecture installed?
00000000000004CA  4780 C0E4                             00000000000004EA   288+         BZ    APDN0011         ..No, this is a native ESA/390 environment
                                                                           289+*                               ..Yes, ESA/390 on z was detected
00000000000004CE  4160 0008                             0000000000000008   290+         LA    6,8              Set level to 8 (ESA/390 on z)
00000000000004D2  47F0 C0E4                             00000000000004EA   291+         B     APDN0011         31-bit tests are done

                                                                           293+* Detect which 24-bit architecture mode is actually running
00000000000004D6                                                           294+IS240011 DS    0H    24-bit architecture found
00000000000004D6  4160 0003                             0000000000000003   295+         LA    6,3              Set level to 3 (assume S/370-EC mode)
00000000000004DA  9108 0029                             0000000000000029   296+         TM    X'29',X'08'      Is EC-mode enabled in old-PSW?
00000000000004DE  4710 C0E4                             00000000000004EA   297+         BO    APDN0011         ..Yes, already in EC-mode, so done
00000000000004E2  4160 0002                             0000000000000002   298+         LA    6,2              ..No, set level to 2 (S/370-BC mode)
00000000000004E6  8200 C082                             0000000000000488   299+         LPSW  STBC0011         Restore BC-mode operation

00000000000004EA                                                           301+APDN0011 DS    0H   Level found, restore previous new PSW's
00000000000004EA  D20F 01D0 C08A      00000000000001D0  0000000000000490   302+         MVC   X'1D0'(16,0),APSZ0011      Restore previous 128-bit SVC PSW
00000000000004F0  D207 0060 C09A      0000000000000060  00000000000004A0   303+         MVC   X'060'(8,0),APSS0011       Restore previous 64-bit SVC PSW
00000000000004F6  D207 0068 C0A2      0000000000000068  00000000000004A8   304+         MVC   X'068'(8,0),APSP0011       Restore previous 64-bit PGM PSW
00000000000004FC  4260 0274                             0000000000000274   305+         STC   6,LOD1ARCH      Save the running CPU architecture



                                                                           307+* Ensure the running architecture can execute the assembled architecture.
0000000000000500  1F66                                                     309+         SLR   6,6                      Clear the return code
0000000000000502  9509 0274                             0000000000000274   310+         CLI   LOD1ARCH,9            Is running architecture z?
0000000000000506  4780 C118                             000000000000051E   311+         BE    AARX0012              ..Yes, architectures are compatible
ASMA Ver. 0.2.0  FBA BOOT LOADER - INITIALIZATION                                                   08 Sep 2020 07:32:45  Page     9

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

000000000000050A  9508 0274                             0000000000000274   312+         CLI   LOD1ARCH,8            Is running architectre ESA/390 on z?
000000000000050E  4770 C114                             000000000000051A   313+         BNE   AARI0012              ..No, not compatible
0000000000000512  4160 0004                             0000000000000004   314+         LA    6,4                   ..Yes, upgrade architecture
0000000000000516  47F0 C118                             000000000000051E   315+         B     AARX0012              Bypass setting RC to 12
000000000000051A                                                           316+AARI0012 DS    0H
000000000000051A  4160 000C                             000000000000000C   317+         LA    6,12                  Set incompatible architectures return code
000000000000051E                                                           318+AARX0012 DS    0H
000000000000051E  47F6 C11C                             0000000000000522   319+         B     *+4(6)          Use the return code to decide action
0000000000000522  47F0 C14C                             0000000000000552   320+         B     ARCHSOK         ..0, architectures compatible, nothing to do
0000000000000526  47F0 C12C                             0000000000000532   321+         B     SETZ            ..4, change to z architecture
000000000000052A  47F0 C2DA                             00000000000006E0   322+         B     ARCHBAD         ..8, no support to downgrade to ESA/390 on z
000000000000052E  47F0 C2DA                             00000000000006E0   323+         B     ARCHBAD         .12, bad combination, can not run

0000000000000532                                                           325+SETZ     DS    0H
0000000000000532  1B55                                                     327+         SR    4+1,4+1             Establish change to z/Architecture parameter.
0000000000000534  4150 0001                             0000000000000001   328+         LA    4+1,1               Set to z/Architecture
0000000000000538  B212 C146                             000000000000054C   330+         STAP  CPU0014              Save this CPU's address
000000000000053C  4860 C146                             000000000000054C   331+         LH    6,CPU0014            Establish the CPU's address
0000000000000540  AE46 0012                             0000000000000012   332+         SIGP  4,6,X'12'            SIGNAL the processor
0000000000000544  4770 C2DA                             00000000000006E0   333+         BC    B'0111',ARCHBAD            SIGNAL PROCESSOR failed
0000000000000548  47F0 C148                             000000000000054E   334+         B     CPU0014+2            Continue execution
000000000000054C  0000                                                     335+CPU0014  DC    H'0'
000000000000054E  9209 0274                             0000000000000274   336+         MVI   LOD1ARCH,9         Set new running architecture

0000000000000552                                                           338+ARCHSOK  DS    0H
0000000000000552  010D                                                     339+         SAM31 Boot                    loader runs in 31-bit address mode



                                                                           341+* At this point the boot loader's system environment has been validated and,
                                                                           342+* if need be, adjusted for compatibility with the assembled architecture.  The
                                                                           343+* loader is now running in its anticipated environment.  Anticipated, that is,
                                                                           344+* by the loader's _assembled_ target architecture.
ASMA Ver. 0.2.0  FBA BOOT LOADER - PROCESSING                                                       08 Sep 2020 07:32:45  Page    10

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           346 * Test the service call framework
0000000000000554  41D0 C862                             0000000000000C68   347          LA    13,EOBL+(SAVEAREA-DMEMORY)   Point to my save area
                                                                           348          BLSCALL SPB=TEST00
0000000000000558  4110 C26E                             0000000000000674   349+         LA    1,TEST00
000000000000055C  E3F0 0270 0017                        0000000000000270   350+         LLGT  15,LOD1BLST
0000000000000562  0DEF                                                     351+         $BASR 14,15
0000000000000564  B902 00FF                                                352          $LTR  15,15
0000000000000568  A784 0003                             000000000000056E   353          $BZ   *+6            CC==0, success
000000000000056C  0000                                                     354          DC    HL2'0'         Otherwise, die here



                                                                           356 * Initialize the I/O system and the I/O Table with the IPL device
                                                                           357          BLSCALL SPB=INIT01
000000000000056E  4110 C272                             0000000000000678   358+         LA    1,INIT01
0000000000000572  E3F0 0270 0017                        0000000000000270   359+         LLGT  15,LOD1BLST
0000000000000578  0DEF                                                     360+         $BASR 14,15
000000000000057A  B902 00FF                                                361          $LTR  15,15
000000000000057E  A784 0003                             0000000000000584   362          $BZ   *+6            RC==0, success
0000000000000582  0000                                                     363          DC    HL2'0'         Otherwise, die here

                                                                           365 * Remember where the IPL Device is in the I/O Table.  Need it during use of
                                                                           366 * EXCP service.  So set it in the ORB.
0000000000000584  5860 C276                             000000000000067C   367          L     6,INIT01+(SPBIOTA-SPB)
0000000000000588  5060 C286                             000000000000068C   368          ST    6,EXCPORB
000000000000058C                      0000000000000000                     369          USING BLSIOT,6



                                                                           371 * Test the QIOT service
                                                                           372 * Look for the IPL device whatever its device number is
000000000000058C  D201 C27C 6000      0000000000000682  0000000000000000   373          MVC     QUERY02+2(2),BLSDEV
0000000000000592                                                           374          DROP    6
                                                                           375          BLSCALL SPB=QUERY02
0000000000000592  4110 C27A                             0000000000000680   376+         LA    1,QUERY02
0000000000000596  E3F0 0270 0017                        0000000000000270   377+         LLGT  15,LOD1BLST
000000000000059C  0DEF                                                     378+         $BASR 14,15
000000000000059E  47FF C19C                             00000000000005A2   379          B        *+4(15)     Use branch table to process return code
00000000000005A2  A7F4 0004                             00000000000005AA   380          $B       IPLFND      RC==0, found IPL device in I/O Table
00000000000005A6  00000004                                                 381          DC       FL4'4'      RC==4, did not find the IPL device. Die here



                                                                           383 * Test the ENADEV service
                                                                           384 * This is commented out because the only device used by the boot loader is
                                                                           385 * the IPL device and it is enabled by the hardware during the IPL function.
                                                                           386 * For this reason, the I/O Table address is supplied by the INITIO service.
                                                                           387 * The boot loader does not need this service, but the booted program may.
                                                                           388 *         BLSCALL SPB=ENADEV03
                                                                           389 *         B     *+4(15)        Use branch table to process return code
                                                                           390 *         DC    F'0'           RC==0, entry added                    TESTED
                                                                           391 *         $B    IPLFND         RC==4, duplicate entry                TESTED
ASMA Ver. 0.2.0  FBA BOOT LOADER - PROCESSING                                                       08 Sep 2020 07:32:45  Page    11

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           392 *         DC    F'8'           RC==8, error state                    TESTED
                                                                           393 *         DC    F'12'          RC==12, device not operational        TESTED
                                                                           394 *         DC    F'16'          RC==16, I/O Table full                TESTED
                                                                           395 *         DC    F'20'          RC==20, device entry class mismatch   TESTED

                                                                           397 * Prepare for use of the IPL device by the boot loader
00000000000005AA  D201 C2E6 00BA      00000000000006EC  00000000000000BA   398 IPLFND   MVC   IPLDEV,IOICODE    Save the address of the IPL device
                                                                           399 * The IPL device must be available for use because we successfully got here.
                                                                           400 * Prepare the channel program for use of the IPL device by the boot loader

                                                                           402 * Initialize the static portions of the I/O related data
00000000000005B0  1B22                                                     403          SR    2,2          Clear cumulative size of loaded program to zero
00000000000005B2  1892                                                     404          LR    9,2          Clear size of data being moved from record
00000000000005B4  1B62                                                     405          SR    6,2          Clear work register
                                                                           406          LOADHL 6,LOD1MDLN  Fetch from LOD1 the maximum directed record length
00000000000005B6  BF63 0246                             0000000000000246   407+         ICM   6,B'0011',LOD1MDLN   Load halfword without sign extention
                                                                           408          STCCWCNT 6,FBACCW3 CCW - Update count field in CCW
00000000000005BA  4060 C2FC                             0000000000000702   409+         STH   6,FBACCW3+2      Store count into a Format 1 CCW
00000000000005BE  8860 0009                             0000000000000009   410          SRL   6,9(0)             Convert bytes into sectors.
00000000000005C2  4060 C314                             000000000000071A   411          STH   6,LOCSECS    LOC - Will always read the same number of sectors
00000000000005C6  1856                                                     412          LR    5,6                Save the number of sectors (updates extent)
00000000000005C8  0660                                                     413          BCTR  6,0                And the logical end of the extent is constant
00000000000005CA  5060 C30E                             0000000000000714   414          ST    6,ENDLSEC    EXT - Set it in the FBA extent data
                                                                           415 * R6 is now available for other uses
00000000000005CE  5840 026C                             000000000000026C   416          L     4,LOD1IOA          Fetch where directed records are read
                                                                           417          STCCWADR 4,FBACCW3          CCW - Update the CCW for reading
00000000000005D2  5040 C2FE                             0000000000000704   418+         ST    4,FBACCW3+4            Store address into a Format 1 CCW
00000000000005D6  947F C2FE                             0000000000000704   419+         NI    FBACCW3+4,X'7F'        Make sure high-order bit is 0
00000000000005DA  D203 C306 0258      000000000000070C  0000000000000258   420          MVC   FRSTPSEC,LOD1FSEC     EXT - Set starting sector of first record
                                                                           421 * Initialize the static portions of record loading
00000000000005E0  4184 0006                             0000000000000006   422          LA    8,6(4)       Locate start of directed record's content
00000000000005E4  4130 CE32                             0000000000001238   423          LA    3,EOBL+(HWM-DMEMORY)   Directed records may not overwrite me!

                                                                           425 READLOOP BLSCALL SPB=EXCP04
00000000000005E8                                                           426+READLOOP DS    0H
00000000000005E8  4110 C282                             0000000000000688   427+         LA    1,EXCP04
00000000000005EC  E3F0 0270 0017                        0000000000000270   428+         LLGT  15,LOD1BLST
00000000000005F2  0DEF                                                     429+         $BASR 14,15
00000000000005F4  47FF C1F2                             00000000000005F8   430          B     *+4(15)           Use the branch table to analyze return code
00000000000005F8  A7F4 000B                             000000000000060E   431          $B    MOVEREC           ..Success, move the directed record
00000000000005FC  00000004                                                 432          DC    FL4'4'            ..Physical EOF should not occur for FBA device
0000000000000600  A7F4 0054                             00000000000006A8   433          $B    DEVCSW            ..Error state
0000000000000604  A7F4 004A                             0000000000000698   434          $B    DEVNOAVL          ..Device busy, not avalable or invalid
0000000000000608  00000010                                                 435          DC    FL4'16'           ..Die here if ORB is invalid
000000000000060C  0000                                                     436          DC    HL2'0'            Die here if unexpected return code



000000000000060E                                                           438 MOVEREC  DS    0H    Move the directed record to its residence address
000000000000060E  58A4 0000                             0000000000000000   439          L     10,0(4)           Destination address of record's content
0000000000000612  153A                                                     440          CLR   3,10              Will data from record overwrite boot loader?
0000000000000614  4720 C2BA                             00000000000006C0   441          BH    OVRWRITE          ..Yes, HWM higher than load address, quit now!
ASMA Ver. 0.2.0  FBA BOOT LOADER - PROCESSING                                                       08 Sep 2020 07:32:45  Page    12

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           442          LOADHL 9,4(4)           Size of record being loaded
0000000000000618  BF93 4004                             0000000000000004   443+         ICM   9,B'0011',4(4)       Load halfword without sign extention
000000000000061C  1869                                                     444          LR    6,9               Increment for cumulative program loaded
                                                                           445          VMOVE 10,8,DSTRCT=DESTRT
000000000000061E  18B9                                                     446+         LR    10+1,8+1          Same size to the receiving location
0000000000000620  0EA8                                                     447+         MVCL  10,8              Move directed record
0000000000000622  A714 0053                             00000000000006C8   448+         $BC   B'0001',DESTRT    Destructive overlap detected (CC=3), quit

0000000000000626  5E60 024C                             000000000000024C   450          AL    6,LOD1BPLD        Increment loaded program size
000000000000062A  5060 024C                             000000000000024C   451          ST    6,LOD1BPLD        Update the cumulative program size in LOD1

                                                                           453 * Determine if last record has been loaded
000000000000062E  9180 4000                             0000000000000000   454          TM    0(4),X'80'        Bit 0 of destination address one?
0000000000000632  4710 C23E                             0000000000000644   455          BO    CKSIZE            ..Yes, check if correct amount loaded
0000000000000636  1865                                                     456          LR    6,5               Fetch the number of sectors read
0000000000000638  5E60 C306                             000000000000070C   457          AL    6,FRSTPSEC        Update starting sector for the next extent
000000000000063C  5060 C306                             000000000000070C   458          ST    6,FRSTPSEC  EXT - Update the FBA extent with new starting sector
0000000000000640  47F0 C1E2                             00000000000005E8   459          B     READLOOP          Read the next record.

                                                                           461 * Total bytes loaded should match what LOD1 says is the booted program size
0000000000000644  D503 0248 024C      0000000000000248  000000000000024C   462 CKSIZE   CLC   LOD1BPLN,LOD1BPLD  Do the cumulative sizes match in LOD1?
000000000000064A  4770 C2CA                             00000000000006D0   463          BNE   CUMERROR           ..No, something went wrong, quit



                                                                           465 * Enter the boot loaded program...

                                                                           467          BOOTNTR
000000000000064E  E3F0 0250 0017                        0000000000000250   468+         LLGT  15,LOD1ENTR        Fetch the entry address from LOD1
                                                                           469+*                                 Clears bit 32, AM 31 flag, in the address
0000000000000654  A5F7 FFFE                                                470+         NILL  15,X'FFFE'         Clear bit 63, AM 64 flag, in the address
0000000000000658  9180 0250                             0000000000000250   471+         TM    LOD1ENTR,X'80'     Is AM 31 requested?
000000000000065C  A714 0008                             000000000000066C   472+         $BO   SETAM31            ..Yes, set AM to 31
0000000000000660  9101 0253                             0000000000000253   473+         TM    LOD1ENTR+3,X'01'   Is AM 64 requensted?
0000000000000664  A714 0006                             0000000000000670   474+         $BO   SETAM64            ..Yes, set AM to 64
0000000000000668  010C                                                     475+         SAM24 ..No,                    so setting AM to 24
000000000000066A  07FF                                                     476+         BR    15                 Enter the booted program with AM 24

000000000000066C  010D                                                     478+SETAM31  SAM31 Set                    AM to 31
000000000000066E  07FF                                                     479+         BR    15                 Enter the booted program with AM 31

0000000000000670  010E                                                     481+SETAM64  SAM64 Set                    AM to 64
0000000000000672  07FF                                                     482+         BR    15                 Enter the booted program with AM 64



                                                                           484 * Service NOOP SPB
0000000000000674                                                           485          DS    0F
0000000000000674  00000000                                                 486 TEST00   DC    Y(NOOP),H'0'         Tests service functionality

                                                                           488 * Service IOINIT SPB
0000000000000678                                                           489          DS    0F
ASMA Ver. 0.2.0  FBA BOOT LOADER - PROCESSING                                                       08 Sep 2020 07:32:45  Page    13

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000678  00010000 00000000                                        490 INIT01   DC    Y(IOINIT),H'0',F'0'  Perform I/O initialization

                                                                           492 * Service QIOT SPB
0000000000000680                                                           493          DS    0F
0000000000000680  00020000 00000000                                        494 QUERY02  DC    Y(QIOT),H'0',F'0'    Locate the IPL device in the device table

                                                                           496 * Service ENADEV SPB
                                                                           497 *         DS    0F      This SPB is used for testing ENADEV service
                                                                           498 *ENADEV03 DC    Y(ENADEV),X'0110',X'00000000'  Add a device

0000000000000688                                                           500          DS    0F
                                                                           501 * Service EXCP SPB
0000000000000688  00040C00                                                 502 EXCP04   DC    Y(EXCP),AL1(SPBEWDC),XL1'0'
                                                                           503 EXCPORB  BLSORB CCW=FBACCW1
000000000000068C                                                           505+EXCPORB  DS    0XL12
000000000000068C  00000000                                                 506+         DC    A(0)                         Word 0 - Interruption Parameter
0000000000000690  00                                                       507+         DC    AL1((0)*16+B'0000')          Word 1, bits 0-7
0000000000000691  80                                                       508+         DC    BL1'10000000'                Word 1, bits 8-15
0000000000000692  FF                                                       509+         DC    AL1(255)                     Word 1, bits 16-23
0000000000000693  00                                                       510+         DC    BL1'00000000'                 Word 1, bits 24-31
0000000000000694  000006F0                                                 511+         DC    AL4(FBACCW1)                 Word 2 - CCW address



                                                                           513 * End the bare-metal program with an error indicated in PSW
0000000000000698  9204 C331                             0000000000000737   514 DEVNOAVL MVI   DIE+7,X'04'   Code 004 device is not available
000000000000069C  8200 C32A                             0000000000000730   515          LPSW  DIE
00000000000006A0  9208 C331                             0000000000000737   516 DEVBUSY  MVI   DIE+7,X'08'   Code 008 device is busy (no wait)
00000000000006A4  8200 C32A                             0000000000000730   517          LPSW  DIE
00000000000006A8  920C C331                             0000000000000737   518 DEVCSW   MVI   DIE+7,X'0C'   Code 00C CSW stored in ASA
00000000000006AC  8200 C32A                             0000000000000730   519          LPSW  DIE
00000000000006B0  9210 C331                             0000000000000737   520 DEVUNKN  MVI   DIE+7,X'10'   Code 010 unexpected device caused I/O interruption
00000000000006B4  8200 C32A                             0000000000000730   521          LPSW  DIE
                                                                           522 *SERVERR  MVI   DIE+7,X'14'   Code 014 booted program may not call this service
                                                                           523 *         LPSW  DIE
00000000000006B8  9218 C331                             0000000000000737   524 BADDEVT  MVI   DIE+7,X'18'   Code 018 IPL device type unsupported
00000000000006BC  8200 C32A                             0000000000000730   525          LPSW  DIE
00000000000006C0  921C C331                             0000000000000737   526 OVRWRITE MVI   DIE+7,X'1C'   Code 01C Overwriting boot loader
00000000000006C4  8200 C32A                             0000000000000730   527          LPSW  DIE
00000000000006C8  9220 C331                             0000000000000737   528 DESTRT   MVI   DIE+7,X'20'   Code 020 Destructive overlap detected by MVCL
00000000000006CC  8200 C32A                             0000000000000730   529          LPSW  DIE
00000000000006D0  9224 C331                             0000000000000737   530 CUMERROR MVI   DIE+7,X'24'   Code 024 Cumulative booted program sizes do no match
00000000000006D4  8200 C32A                             0000000000000730   531          LPSW  DIE
00000000000006D8  9228 C331                             0000000000000737   532 AMERROR  MVI   DIE+7,X'28'   Code 028 Can not change booted pgm addressing mode
00000000000006DC  8200 C32A                             0000000000000730   533          LPSW  DIE
00000000000006E0  922C C331                             0000000000000737   534 ARCHBAD  MVI   DIE+7,X'2C'   Code 028 Incompatible assembled vs run-time archs
00000000000006E4  8200 C32A                             0000000000000730   535          LPSW  DIE

                                                                           537 * General Constants:
00000000000006E8  00000001                                                 538 ONE      DC    F'1'      The constant 'one'.

                                                                           540 * I/O related information
ASMA Ver. 0.2.0  FBA BOOT LOADER - PROCESSING                                                       08 Sep 2020 07:32:45  Page    14

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

00000000000006EC  0000                                                     541 IPLDEV   DC    XL2'0000'   IPL device address from I/O interrupt information


                                                                           543 *
                                                                           544 * FBA CCW chain used by the boot loader to read a directed record
                                                                           545 *
00000000000006F0  63400010 00000708                                        546 FBACCW1  CCW   DEFN_EXT,EXTENT,CC,EXTENTL   Define extent for the read
00000000000006F8  43400008 00000718                                        547 FBACCW2  CCW   LOC_DATA,LOCATE,CC,LOCATEL   Establish location for read
0000000000000700  42000000 00000000                                        548 FBACCW3  CCW   READ,0,0,0                   Read the directed record
                                                                           549 *         CCW   NOP,0,0,1                    ..then a NOP.
                                                                           550 * If the preceding NOP CCW command is enabled, then the FBACCW3 must set
                                                                           551 * command chaining in the flag byte, setting the third operand to X'40'

                                                                           553 * FBA extent used for reading a directed record.  Unlike typical operations
                                                                           554 * where the extent is constant and the locate data changes, when reading
                                                                           555 * directed boot loader records, the extent changes and the locate information
                                                                           556 * remains unchanged.
0000000000000708  40000000                                                 557 EXTENT   DC    XL4'40000000'   Extent file mask: Inhibit all writes
000000000000070C  00000000                                                 558 FRSTPSEC DC    FL4'0'       ** Physical first sector of the extent
0000000000000710  00000000                                                 559 FRSTLSEC DC    FL4'0'          First logical sector of the extent, always 0
                                                                           560 * Last logical sector of the extent, always the same based upon record length
0000000000000714  00000000                                                 561 ENDLSEC  DC    FL4'0'
                                      0000000000000010  0000000000000001   562 EXTENTL  EQU   *-EXTENT        Length of an FBA extent (16 bytes)
                                                                           563 * ** This field is adjusted for each read of a directed record.

                                                                           565 * FBA locate used for reading a directed record
0000000000000718  06                                                       566 LOCATE   DC    XL1'06'         Read sector operation being performed
0000000000000719  00                                                       567          DC    XL1'00'         Replication count ignored for read sector
000000000000071A  0000                                                     568 LOCSECS  DC    HL2'0'          Number of sectors being read
000000000000071C  00000000                                                 569          DC    FL4'0'          First sector (relative to the extent), always 0
                                      0000000000000008  0000000000000001   570 LOCATEL  EQU   *-LOCATE        Length of the FBA locate information (8 bytes)


                                                                           572 * PSW used by the boot loader
                                                                           573 PGMRS    DWAIT CODE=008     Restart New PSW trap.  Points to Restart Old PSW
0000000000000720  000A0000 00010008                                        574+PGMRS    PSWE390 0,0,2,0,X'010008'


                                                                           576 * PSW's terminating program execution
                                                                           577 DONE     DWAITEND              Successful execution of the program
0000000000000728  000A0000 00000000                                        579+DONE     PSWE390 0,0,2,0,X'000000'
                                                                           580 DIE      DWAIT PGM=05,CMP=0,CODE=000  Code set at run-time
0000000000000730  000A0000 00050000                                        581+DIE      PSWE390 0,0,2,0,X'050000'
ASMA Ver. 0.2.0  BOOT LOADER - SERVICES                                                             08 Sep 2020 07:32:45  Page    15

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           583          COPY  'bls.asm'
                                                                           584 * Copyright (C) 2020 Harold Grovesteen
                                                                           585 *
                                                                           586 * This file is part of SATK.
                                                                           587 *
                                                                           588 *     SATK is free software: you can redistribute it and/or modify
                                                                           589 *     it under the terms of the GNU General Public License as published by
                                                                           590 *     the Free Software Foundation, either version 3 of the License, or
                                                                           591 *     (at your option) any later version.
                                                                           592 *
                                                                           593 *     SATK is distributed in the hope that it will be useful,
                                                                           594 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
                                                                           595 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                           596 *     GNU General Public License for more details.
                                                                           597 *
                                                                           598 *     You should have received a copy of the GNU General Public License
                                                                           599 *     along with SATK.  If not, see <http://www.gnu.org/licenses/>.
                                                                           600 *
                                                                           601 *
                                                                           602 * The Boot Loader Services Framework
                                                                           603 *

                                                                           605 BLS      SERVS  SERVTBL
0000000000000738                                                           606+BLS      DS    0H   Boot Loader 32-bit services entry point
0000000000000738                      0000000000000000                     607+         USING ASA,0          Address Assigned Storage area
0000000000000738                      0000000000000000                     608+         USING SPB,1          Pointer to Service Parameter Block
0000000000000738                      0000000000000000                     609+         USING SAVEG,13       Register save area from caller
0000000000000738  EBEC D018 0024                        0000000000000018   610+         $STM  14,12,SAVEGR14      Preserve caller's registers except R13
000000000000073E  B904 00CF                                                611+         $LR   12,15          Establish my local register
0000000000000742                      0000000000000738                     612+         USING BLS,12         ..and tell the assembler

                                                                           614+* Locate the service's entry point
0000000000000742  E320 1000 0015                        0000000000000000   615+         $LH   2,SPBID         Fetch the Service ID from the SPB
0000000000000748  BD21 0257                             0000000000000257   616+         CLM   2,B'0001',LOD1BLSV   Is ID valid? (Must be < LOD1 number)
000000000000074C  A744 0006                             0000000000000758   617+         $BL   CALLSRV         ..Yes, call the service then
0000000000000750  B901 00F2                                                618+         $LNR  15,2            Turn the Service ID into a negative value
0000000000000754  A7F4 0012                             0000000000000778   619+         $B    BLSR            Return to caller with invalid Service ID

0000000000000758                                                           621+CALLSRV  DS    0H              Call the actual service now
0000000000000758  8920 0002                             0000000000000002   622+         SLL   2,2             Turn Service ID into table displacement (x4)
000000000000075C  4122 C050                             0000000000000788   623+         LA    2,SERVTBL(2)    Turn displacement into an address
0000000000000760  BF2F 2000                             0000000000000000   625+         ICM   2,B'1111',0(2)       Load fullword and test the value
0000000000000764  A774 0007                             0000000000000772   626+         $BNZ  BLSCALL         Table entry not zero, so can call it
0000000000000768  E3F0 C04E 0015                        0000000000000786   627+         $LH   15,BLSMONE      Set return code to negative one
000000000000076E  A7F4 0005                             0000000000000778   628+         $B    BLSR            ..and return to caller

0000000000000772                                                           630+BLSCALL  DS    0H         Good address!
0000000000000772  B904 00C2                                                631+         $LR   12,2       Set up base register for service routine
0000000000000776  07FC                                                     632+         BR    12         Go to the requested service (use as base register)

0000000000000778                                                           634+BLSR     DS    0H             Return to service caller from requested service
                                                                           635+* Return from called service has the caller's save area in R13
ASMA Ver. 0.2.0  BOOT LOADER - SERVICES                                                             08 Sep 2020 07:32:45  Page    16

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000778                      0000000000000000                     636+         USING SAVEG,13
0000000000000778  E300 D020 0024                        0000000000000020   637+         $ST   0,SAVEGR15        Save return code in caller's save area
000000000000077E  EBEC D018 0004                        0000000000000018   638+         $LM   14,12,SAVEGR14    Restore caller's registers
                                                                           639+* Retrun is actually in R15 now
0000000000000784  07FE                                                     640+         BR    14                Return to caller

0000000000000786  FFFF                                                     642+BLSMONE  DC    H'-1'          Negative one used for empty service slot



                                                                           644 *
                                                                           645 * Boot Loader Service Table
                                                                           646 *

                                                                           648          BLSTABLE
0000000000000788  000007A4                                                 650+SERVTBL  DC    A(SERVNOOP)
                                      0000000000000000  0000000000000001   651+NOOP     EQU   0
000000000000078C  000007DC                                                 653+         DC    A(SERVIOIN)
                                      0000000000000001  0000000000000001   654+IOINIT   EQU   1
0000000000000790  00000888                                                 656+         DC    A(SERVQIOT)
                                      0000000000000002  0000000000000001   657+QIOT     EQU   2
0000000000000794  000008E0                                                 659+         DC    A(SERVENAD)
                                      0000000000000003  0000000000000001   660+ENADEV   EQU   3
0000000000000798  000009EC                                                 662+         DC    A(SERVEXCP)
                                      0000000000000004  0000000000000001   663+EXCP     EQU   4
000000000000079C  00000BD0                                                 665+         DC    A(SERVPEND)
                                      0000000000000005  0000000000000001   666+PNDING   EQU   5
                                      0000000000000006  0000000000000001   668+BLSNUM   EQU   6           Number of defined services



                                                                           670 * Register Contents at service entry
                                                                           671 *  R0  - unpredictable but usable (also ASA base register)
                                                                           672 *  R1  - Pointer to Service Parameter Block (passed by framework)
                                                                           673 *  R2  - unpredictable but usable (used by service framework as work register)
                                                                           674 *  R3  - unpredictable but usable
                                                                           675 *  R4  - unpredictable but usable
                                                                           676 *  R5  - unpredictable but usable
                                                                           677 *  R6  - unpredictable but usable
                                                                           678 *  R7  - unpredictable but usable
                                                                           679 *  R8  - unpredictable but usable
                                                                           680 *  R9  - unpredictable but usable
                                                                           681 *  R9  - unpredictable but usable
                                                                           682 *  R10 - unpredictable but usable
                                                                           683 *  R11 - unpredictable but usable
                                                                           684 *  R12 - The service's entry point (set by service framework, use as base)
                                                                           685 *  R13 - Pointer to service CALLER'S save area (passed by framework)
                                                                           686 *  R14 - unpredictable but usable
                                                                           687 *  R15 - unpredictable but usable
                                                                           688 *

                                                                           690 * Use LOD1RTN address to return to caller from the service.
ASMA Ver. 0.2.0  BOOT LOADER - SERVICES                                                             08 Sep 2020 07:32:45  Page    17

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           691 * Register usage on entry to SERVRTN
                                                                           692 *  R0 - Return code from service.  Framework will move it to R15
                                                                           693 *  R13 - Service caller's save area
                                                                           694 *  R15 - Address from LOD1RTN to return to framework
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 0 - NOOP                                                     08 Sep 2020 07:32:45  Page    18

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           696 *
                                                                           697 * Boot Loader Service - 0 - NOOP
                                                                           698 *

                                                                           700          SERVNOOP
00000000000007A0                                                           702+         DS    0F
00000000000007A0  C2D3E200                                                 703+         DC    CL3'BLS',AL1(NOOP)
00000000000007A4                                                           704+SERVNOOP DS    0H             Start of service
00000000000007A4                      00000000000007A4                     705+         USING SERVNOOP,12    Establish service addressing
00000000000007A4                      0000000000000000                     706+         USING ASA,0          Address the ASA
00000000000007A4                      0000000000000000                     707+         USING SPB,1          Address the SPB (address from framework)
00000000000007A4                      0000000000000000                     708+         USING SAVEG,13       Address caller's save area
                                                                           709+         LA    2,EOBL+(NOOPSAVE-DMEMORY) \
00000000000007A4  4120 C554                             0000000000000CF8      +                                      Point to my save area
00000000000007A8  E320 D010 0024                        0000000000000010   710+         $ST   2,SAVEGFWD     Save my save area address in caller's save area
00000000000007AE                                                           711+         DROP  13             Forget caller's save area
00000000000007AE                      0000000000000000                     712+         USING SAVEG,2        Now address MY save area
00000000000007AE  E3D0 2008 0024                        0000000000000008   713+         $ST   13,SAVEGBCK    Preserve caller's R13 now in my save area
00000000000007B4  B904 00D2                                                714+         $LR   13,2           Now point save area to MY save area with R13
00000000000007B8                                                           715+         DROP  2
00000000000007B8                      0000000000000000                     716+         USING SAVEG,13       Re-establish addressing to my save area with R13
00000000000007B8  E3B0 1002 0015                        0000000000000002   717+         $LH   11,SPBSI        Get the service information
00000000000007BE  41B0 B001                             0000000000000001   718+         LA    11,1(,11)       Increment the service information by 1
00000000000007C2  40B0 1002                             0000000000000002   719+         STH   11,SPBSI        Set new value in service information
00000000000007C6  B909 0000                                                720+         $SR   0,0             Set the condition code to zero
00000000000007CA                      0000000000000000                     722+         USING SAVEG,13      On return, service points to its save area
00000000000007CA  E3D0 D008 0004                        0000000000000008   723+         $L    13,SAVEGBCK    Restore caller's save area address from service
                                                                           724+* R13 now points to the caller's registers
00000000000007D0  E3F0 0278 0017                        0000000000000278   725+         LLGT  15,LOD1RTN      Return to the framework for the return
00000000000007D6                                                           726+         DROP  0               Forget ASA
00000000000007D6                                                           727+         DROP  13              Forget any save area addressing as we leave
00000000000007D6  07FF                                                     728+         BR    15              Return now to the framework...

ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 1 - IOINIT                                                   08 Sep 2020 07:32:45  Page    19

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           731 *
                                                                           732 * Boot Loader Service - 1 - IOINIT
                                                                           733 *
                                                                           734 * Register Usage:
                                                                           735 *   R0 - Return Code
                                                                           736 *   R1 - Address of the INTHND SPB when used
                                                                           737 *   R3 - Used to point to caller's save area when booted program being checked
                                                                           738 *   R4 - Address of the IOINIT input SPB (from R1 entry contents)
                                                                           739 *   R5 - Start of I/O table address and table entry start
                                                                           740 *   R6 - I/O table entry length
                                                                           741 *   R7 - Address of the last byte of the I/O table itself
                                                                           742 *   R12 - Base register
                                                                           743 *   R15 - Return address to serivce framework

                                                                           745          SERVIOIN
00000000000007D8                                                           747+         DS    0F
00000000000007D8  C2D3E201                                                 748+         DC    CL3'BLS',AL1(IOINIT)
00000000000007DC                                                           749+SERVIOIN DS    0H             Start of service
00000000000007DC                      00000000000007DC                     750+         USING SERVIOIN,12    Establish service addressing
00000000000007DC                      0000000000000000                     751+         USING ASA,0          Address the ASA
00000000000007DC                      0000000000000000                     752+         USING SPB,1          Address the SPB (address from framework)
00000000000007DC                      0000000000000000                     753+         USING SAVEG,13       Address caller's save area
                                                                           754+         LA    2,EOBL+(IOINSAVE-DMEMORY) \
00000000000007DC  4120 C5AC                             0000000000000D88      +                                      Point to my save area
00000000000007E0  E320 D010 0024                        0000000000000010   755+         $ST   2,SAVEGFWD     Save my save area address in caller's save area
00000000000007E6                                                           756+         DROP  13             Forget caller's save area
00000000000007E6                      0000000000000000                     757+         USING SAVEG,2        Now address MY save area
00000000000007E6  E3D0 2008 0024                        0000000000000008   758+         $ST   13,SAVEGBCK    Preserve caller's R13 now in my save area
00000000000007EC  B904 00D2                                                759+         $LR   13,2           Now point save area to MY save area with R13
00000000000007F0                                                           760+         DROP  2
00000000000007F0                      0000000000000000                     761+         USING SAVEG,13       Re-establish addressing to my save area with R13
                                                                           762+* Move input option to INTHND SPB for call
00000000000007F0  B904 0041                                                763+         $LR   4,1              Need to free up R1 for I/O commands
00000000000007F4                                                           764+         DROP  1
00000000000007F4                      0000000000000000                     765+         USING SPB,4            Set new register for addressing input SPB

00000000000007F4                                                           767+IOIA0044 DS    0H    Add IPL Device to the I/O Table
00000000000007F4  4160 C97C                             0000000000001158   768+         LA    6,EOBL+(IOTBL-DMEMORY)   Locate the start of the I/O table
00000000000007F8  5060 C478                             0000000000000C54   769+         ST    6,IOTBLBA                Set up BXLE sum register
00000000000007FC  5850 C474                             0000000000000C50   770+         L     5,IOTMAX                 Fetch the length of the table
0000000000000800  1E56                                                     771+         ALR   5,6                      Calculate the byte following the table
0000000000000802  5050 C474                             0000000000000C50   772+         ST    5,IOTMAX                 Replace length with addresss
0000000000000806                      0000000000000000                     773+         USING BLSIOT,6                 Point to the first entry.
                                                                           774+* Add the IPL device to the I/O Table
0000000000000806  B766 C0A4                             0000000000000880   775+         LCTL  6,6,INTMASK
000000000000080A  9202 4002                             0000000000000002   776+         MVI   SPBSI,X'02'          Indicate CCW Format 1 in use
000000000000080E  4170 C87C                             0000000000001058   777+         LA    7,EOBL+(CHSSBLK-DMEMORY) Locate where to store subchannel blocks
0000000000000812  5070 C488                             0000000000000C64   778+         ST    7,CSBLOCKS           Where SCHIB or IRB is stored
0000000000000816  5810 00B8                             00000000000000B8   779+         L     1,IOSSID             Retrieve the SIW of IPL device from ASA
000000000000081A  B234 7000                             0000000000000000   780+         STSCH 0(7)                 Retrieve the IPL device's SCHIB
000000000000081E  A784 0003                             0000000000000824   781+         $BC   B'1000',CSSAVED      The SCHIB was saved
0000000000000822  0000                                                     782+         DC    H'0'                 If not saved, something bad happened
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 1 - IOINIT                                                   08 Sep 2020 07:32:45  Page    20

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000824                                                           783+CSSAVED  DS    0H    SCHIB in the CS block area
0000000000000824  9201 C485                             0000000000000C61   784+         MVI   CSSTRUCT,CSSSCHIB    Indicate the SCHIB is in the block
0000000000000828                      0000000000000000                     785+         USING SCHIB,7              Address the SCHIB just fetched
0000000000000828  D201 6000 7006      0000000000000000  0000000000000006   786+         MVC   BLSDEV,PMCWDNUM      Set the device number in the IOT entry
000000000000082E  5010 6004                             0000000000000004   787+         ST    1,BLSHDW             Set the IPL device SIW in the IOT
0000000000000832  D200 6002 4002      0000000000000002  0000000000000002   788+         MVC   BLSTYP,SPBSI         Set device type from SPB SI

                                                                           790+* Generate the device status error mask for the IPL device
0000000000000838  92F1 600C                             000000000000000C   792+         MVI   BLSERR,X'F1'        This is the generic device error check
                                                                           793+* This checks for these error conditions:
                                                                           794+*   X'80' - Attention (MAY BE TURNED OFF FOR SOME DEVICES)
                                                                           795+*   X'40' - Status Modifier
                                                                           796+*   X'20' - Control-Unit End
                                                                           797+*   X'10' - Busy
                                                                           798+*   X'01' - Unit Exception (MAY BE TURNED OFF FOR SOME DEVICES)
                                                                           799+*
                                                                           800+* While Unit Check is an error condition, it must be explicitly checked so
                                                                           801+* that the service can indicate a pending action to read sense data by the
                                                                           802+* program.  Yes, it is an error condition, but requires special handling.
                                                                           803+* When set, the service indicates both an error condition AND a pending action.
                                                                           804+*   X'02' - Unit Check (sense is pending)
                                                                           805+*
                                                                           806+* This ignores these normal status conditions.  They must be checked by the
                                                                           807+* service depending upon the EXCP SPB controls.
                                                                           808+*   X'08' - Channel end
                                                                           809+*   X'04' - Device end

                                                                           811+* If device recognizes physical end-of-file with Unit Exception, not an error
                                                                           812+* So turn it off.
000000000000083C  9180 6002                             0000000000000002   813+         TM    BLSTYP,BLSPEOF      Does device use UE for end-of-file condition?
0000000000000840  A7E4 0004                             0000000000000848   814+         $BNO  ERRU0046            ..No, check if device uses ATTN
0000000000000844  94FE 600C                             000000000000000C   815+         NI    BLSERR,X'FE'        ..Yes, turn off UE as an error status

                                                                           817+* If device signals data is ready with Attention, turn it off as an error.
0000000000000848  9140 6002                             0000000000000002   818+ERRU0046 TM    BLSTYP,BLSUNSOL     Does device use ATTN when data is ready?
000000000000084C  A7E4 0004                             0000000000000854   819+         $BNO  ERRX0046            ..No, modifications to error status done
0000000000000850  947F 600C                             000000000000000C   820+         NI    BLSERR,X'7F'        ..Yes, turn off ATTN as an error status

                                                                           822+* Note: At present no device uses UE for physical end-of-file and Attention
                                                                           823+* for data ready, but this code allows for both to be set in the device
                                                                           824+* class value.

0000000000000854                                                           826+ERRX0046 DS    0H  Error mask completed
0000000000000854  5060 4004                             0000000000000004   827+         ST    6,SPBIOTA         Return to caller the IPL device's IOT address
0000000000000858                                                           828+         DROP  6                 Done with the table entry
0000000000000858  4170 601F                             000000000000001F   829+         LA    7,BLSIOEL-1(,6)   Add the entry length -1
000000000000085C                                                           830+         DROP  7                 Forget the address of the SCHIB
000000000000085C  5070 C480                             0000000000000C5C   831+         ST    7,IOTBLEA         Set up the BXLE comparand register
0000000000000860  A7F4 0006                             000000000000086C   832+         $B    IOINRTN0          Return with RC==0
0000000000000864  4100 0004                             0000000000000004   833+IOINRTN4 LA    0,4               Set return code 4 from service
0000000000000868  A7F4 0004                             0000000000000870   834+         $B    IOINRTN           Return to caller
000000000000086C  B909 0000                                                835+IOINRTN0 $SR   0,0               Set return code from service
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 1 - IOINIT                                                   08 Sep 2020 07:32:45  Page    21

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000870                                                           836+         DROP  4                 Forget input SPB
0000000000000870                      0000000000000000                     838+         USING SAVEG,13      On return, service points to its save area
0000000000000870  E3D0 D008 0004                        0000000000000008   839+IOINRTN  $L    13,SAVEGBCK    Restore caller's save area address from service
                                                                           840+* R13 now points to the caller's registers
0000000000000876  E3F0 0278 0017                        0000000000000278   841+         LLGT  15,LOD1RTN      Return to the framework for the return
000000000000087C                                                           842+         DROP  0               Forget ASA
000000000000087C                                                           843+         DROP  13              Forget any save area addressing as we leave
000000000000087C  07FF                                                     844+         BR    15              Return now to the framework...

0000000000000880                                                           846+         DS    0F      Make sure interruption mask is on a fullword boundary
0000000000000880  FFFFFFFF                                                 847+INTMASK  DC    X'FFFFFFFF'      Enable all channels for interruptions
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 2 - QIOT                                                     08 Sep 2020 07:32:45  Page    22

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           849 *
                                                                           850 * Boot Loader Service - 2 - QIOT
                                                                           851 *
                                                                           852 * Register Usage:
                                                                           853 *   R0 - Return Code
                                                                           854 *   R1 - Address of the SPB and its extention
                                                                           855 *   R5 - Start of I/O table address and table entry start
                                                                           856 *   R6 - I/O table entry length
                                                                           857 *   R7 - Address of the last byte of the I/O table itself
                                                                           858 *   R12 - Base register
                                                                           859 *   R15 - Return address to serivce framework

                                                                           861          SERVQIOT
0000000000000884                                                           863+         DS    0F
0000000000000884  C2D3E202                                                 864+         DC    CL3'BLS',AL1(QIOT)
0000000000000888                                                           865+SERVQIOT DS    0H             Start of service
0000000000000888                      0000000000000888                     866+         USING SERVQIOT,12    Establish service addressing
0000000000000888                      0000000000000000                     867+         USING ASA,0          Address the ASA
0000000000000888                      0000000000000000                     868+         USING SPB,1          Address the SPB (address from framework)
0000000000000888                      0000000000000000                     869+         USING SAVEG,13       Address caller's save area
                                                                           870+         LA    2,EOBL+(QIOTSAVE-DMEMORY) \
0000000000000888  4120 C590                             0000000000000E18      +                                      Point to my save area
000000000000088C  E320 D010 0024                        0000000000000010   871+         $ST   2,SAVEGFWD     Save my save area address in caller's save area
0000000000000892                                                           872+         DROP  13             Forget caller's save area
0000000000000892                      0000000000000000                     873+         USING SAVEG,2        Now address MY save area
0000000000000892  E3D0 2008 0024                        0000000000000008   874+         $ST   13,SAVEGBCK    Preserve caller's R13 now in my save area
0000000000000898  B904 00D2                                                875+         $LR   13,2           Now point save area to MY save area with R13
000000000000089C                                                           876+         DROP  2
000000000000089C                      0000000000000000                     877+         USING SAVEG,13       Re-establish addressing to my save area with R13
000000000000089C  B909 0000                                                878+         $SR   0,0                 Set return code to 0, optimistically
00000000000008A0  E350 C3CC 0017                        0000000000000C54   879+         LLGT  5,IOTBLBA           Initialize the BXLE R1 (sum)
00000000000008A6  E360 C3D0 0017                        0000000000000C58   880+         LLGT  6,IOTBLI            Initialize the BXLE R3 (even reg of pair)
00000000000008AC  E370 C3D4 0017                        0000000000000C5C   881+         LLGT  7,IOTBLEA           Initialize the BXLE R3+1 (odd reg of pair)
00000000000008B2                      0000000000000000                     882+         USING BLSIOT,5
00000000000008B2                                                           883+QIOTLOOP DS    0H                  Check the table entry device number
00000000000008B2  D501 1002 5000      0000000000000002  0000000000000000   884+         CLC   SPBSI,BLSDEV         Is this the device being sought?
00000000000008B8  A784 0009                             00000000000008CA   885+         $BE   QIOFOUND             ..Yes, return the entry's address
00000000000008BC  EC56 FFFB 0045                        00000000000008B2   886+         $BXLE 5,6,QIOTLOOP         ..No, try again
                                                                           887+* Did not find the device in the table
00000000000008C2  B904 0050                                                888+         $LR   5,0                  Prepare to clear the SPBE
00000000000008C6  4100 0004                             0000000000000004   889+         LA    0,4                  Set return code to 4 (not found)
00000000000008CA                                                           890+QIOFOUND DS    0H      Found the entry
00000000000008CA  5050 1004                             0000000000000004   891+         ST    5,SPBIOTA     Return the entry address in the SPBE or zero
00000000000008CE                                                           892+         DROP  5
00000000000008CE                      0000000000000000                     894+         USING SAVEG,13      On return, service points to its save area
00000000000008CE  E3D0 D008 0004                        0000000000000008   895+QIORETRN $L    13,SAVEGBCK    Restore caller's save area address from service
                                                                           896+* R13 now points to the caller's registers
00000000000008D4  E3F0 0278 0017                        0000000000000278   897+         LLGT  15,LOD1RTN      Return to the framework for the return
00000000000008DA                                                           898+         DROP  0               Forget ASA
00000000000008DA                                                           899+         DROP  13              Forget any save area addressing as we leave
00000000000008DA  07FF                                                     900+         BR    15              Return now to the framework...
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 3 - ENADEV                                                   08 Sep 2020 07:32:45  Page    23

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           902 *
                                                                           903 * Boot Loader Service - 3 - ENADEV
                                                                           904 *
                                                                           905 * Register Usage:
                                                                           906 *   R0 - Return Code
                                                                           907 *   R1 - Hardware device address for I/O commands
                                                                           908 *   R2 - Address of the new table entry
                                                                           909 *   R3 - New end of the I/O Table after entry is added
                                                                           910 *   R4 - Address of the SPB and its extention
                                                                           911 *   R5 - Address of the existing I/O Table entry of the device
                                                                           912 *   R6 - Location where channel subsystem SCHIB's are stored
                                                                           913 *   R12 - Base register
                                                                           914 *   R15 - Return address to serivce framework

                                                                           916          SERVENAD
00000000000008DC                                                           918+         DS    0F
00000000000008DC  C2D3E203                                                 919+         DC    CL3'BLS',AL1(ENADEV)
00000000000008E0                                                           920+SERVENAD DS    0H             Start of service
00000000000008E0                      00000000000008E0                     921+         USING SERVENAD,12    Establish service addressing
00000000000008E0                      0000000000000000                     922+         USING ASA,0          Address the ASA
00000000000008E0                      0000000000000000                     923+         USING SPB,1          Address the SPB (address from framework)
00000000000008E0                      0000000000000000                     924+         USING SAVEG,13       Address caller's save area
                                                                           925+         LA    2,EOBL+(ENADSAVE-DMEMORY) \
00000000000008E0  4120 C5C8                             0000000000000EA8      +                                      Point to my save area
00000000000008E4  E320 D010 0024                        0000000000000010   926+         $ST   2,SAVEGFWD     Save my save area address in caller's save area
00000000000008EA                                                           927+         DROP  13             Forget caller's save area
00000000000008EA                      0000000000000000                     928+         USING SAVEG,2        Now address MY save area
00000000000008EA  E3D0 2008 0024                        0000000000000008   929+         $ST   13,SAVEGBCK    Preserve caller's R13 now in my save area
00000000000008F0  B904 00D2                                                930+         $LR   13,2           Now point save area to MY save area with R13
00000000000008F4                                                           931+         DROP  2
00000000000008F4                      0000000000000000                     932+         USING SAVEG,13       Re-establish addressing to my save area with R13
00000000000008F4                                                           933+         DROP  1
00000000000008F4  B904 0041                                                934+         $LR   4,1              Need to free up R1 for I/O commands
00000000000008F8                      0000000000000000                     935+         USING SPB,4            Set new register for addressing SPB
00000000000008F8  1B00                                                     936+         SR    0,0              Set return code to 0, optimistically

                                                                           938+* Determine if device is already in the table
00000000000008FA  D201 C102 4002      00000000000009E2  0000000000000002   939+         MVC   ENAQIOT+2,SPBSI   Set device address in my QIOT
0000000000000900  4110 C100                             00000000000009E0   941+         LA    1,ENAQIOT
0000000000000904  E3F0 0270 0017                        0000000000000270   942+         LLGT  15,LOD1BLST
000000000000090A  0DEF                                                     943+         $BASR 14,15
000000000000090C  12FF                                                     944+         LTR   15,15        Test the QIOT return code
000000000000090E  4770 C054                             0000000000000934   945+         BNZ   ENADADD      ..Not found, so device eligible for being added

                                                                           947+* Make sure the device class is the same
0000000000000912  5850 C104                             00000000000009E4   948+         L     5,ENAQIOT+SPBIOTA   Fetch the address of the existing entry
0000000000000916  D500 4004 5002      0000000000000004  0000000000000002   949+         CLC   SPBDCLS,BLSTYP-BLSIOT(5)  Do the device classes match?
000000000000091C  A784 0006                             0000000000000928   950+         $BE   ENADOK           ..Yes, just return the address
                                                                           951+* Device class does not match
0000000000000920  4100 0014                             0000000000000014   952+         LA    0,20             Set return code of 20
0000000000000924  A7F4 0055                             00000000000009CE   953+         $B    ENADRTN          Return to caller
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 3 - ENADEV                                                   08 Sep 2020 07:32:45  Page    24

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000928                                                           955+ENADOK   DS    0H   Simply return with the I/O Table address
0000000000000928  5050 4004                             0000000000000004   956+         ST    5,SPBIOTA
000000000000092C  4100 0004                             0000000000000004   957+         LA    0,4              Set return address to 4
0000000000000930  A7F4 004F                             00000000000009CE   958+         $B    ENADRTN

0000000000000934                                                           960+ENADADD  DS    0H   Try to add the device to the table
0000000000000934  5820 C37C                             0000000000000C5C   961+         L     2,IOTBLEA        Locate the current end of the table
0000000000000938  1832                                                     962+         LR    3,2              Calculate the new end of the table
000000000000093A  5E30 C378                             0000000000000C58   963+         AL    3,IOTBLI         New ending address for new table entry
000000000000093E  5530 C370                             0000000000000C50   964+         CL    3,IOTMAX         Did we go beyond the end of the table?
0000000000000942  A744 0006                             000000000000094E   965+         $BL   ENADTEST         ..No, good to go (room to add new entry)
0000000000000946  4100 0010                             0000000000000010   966+         LA    0,16             ..Yes, return with 16 return code, table full
000000000000094A  A7F4 0042                             00000000000009CE   967+         $B    ENADRTN          Quit now.

000000000000094E                                                           969+ENADTEST DS    0H   Test if the device is usable.
000000000000094E  4120 2001                             0000000000000001   970+         LA    2,1(,2)          Point to the table entry being added
0000000000000952                      0000000000000000                     971+         USING BLSIOT,2         Set up addressing for the new I/O Table entry
0000000000000952  5860 C384                             0000000000000C64   972+         L     6,CSBLOCKS          This is where SCHIB will be stored
0000000000000956  9201 C381                             0000000000000C61   973+         MVI   CSSTRUCT,CSSSCHIB   We have a SCHIB in the area
000000000000095A  5810 C0FC                             00000000000009DC   974+         L     1,ENADSIWB          Fetch the first SIW

000000000000095E                                                           976+ENASRCH  DS    0H     This loop searches for the device being added within
                                                                           977+*                     the configured subchannel devices
000000000000095E  B234 6000                             0000000000000000   978+         STSCH 0(6)                Store the SCHIB
0000000000000962  A714 000B                             0000000000000978   979+         $BC   B'0001',ENADNOAV    Hit CC==3, end of subchannels
                                                                           980+*                                  CC==1 and CC==2 are not possible
                                                                           981+*                                  Assume CC==0, the SCHIB was stored
0000000000000966                      0000000000000000                     982+         USING SCHIB,6             Address it
0000000000000966  D501 4002 6006      0000000000000002  0000000000000006   983+         CLC   SPBSI,PMCWDNUM      Is this the device number we want?
000000000000096C  A784 000A                             0000000000000980   984+         $BE   ENADGOOD            ..Yes, we can add it to the IOT
                                                                           985+* This subchannel is not the one we need, try again with next subchannel
                                                                           986+* Increment the subchannel number in the SIW
0000000000000970  4110 1001                             0000000000000001   987+         LA    1,1(,1)             Increment it
0000000000000974  A7F4 FFF5                             000000000000095E   988+         $B    ENASRCH             See if next subchannel is what we need
                                                                           989+ENADNOAV DS    0H \
0000000000000978                                                              +                 Device is invalid
0000000000000978  4100 000C                             000000000000000C   990+         LA    0,12     Return with condition code 12
000000000000097C  A7F4 0029                             00000000000009CE   991+         $B    ENADRTN

0000000000000980                                                           993+ENADGOOD DS    0H  Add the subchannel device to the table...
0000000000000980  D201 2000 6006      0000000000000000  0000000000000006   994+         MVC   BLSDEV,PMCWDNUM     Set I/O Table device number
0000000000000986  5010 2004                             0000000000000004   995+         ST    1,BLSHDW            Set I/O Table hardware address
000000000000098A  D200 2002 4004      0000000000000002  0000000000000004   996+         MVC   BLSTYP,SPBDCLS      Set the device class in the entry
0000000000000990  9680 6005                             0000000000000005   997+         OI    PMCW1_8,PMCWE       Enable the device to the subsystem
0000000000000994  5050 6000                             0000000000000000   998+         ST    5,PMCWIP            Set the Interruption Parameter
0000000000000998  D200 6004 4004      0000000000000004  0000000000000004   999+         MVC   PMCW1_0,SPBDCLS     Set the Interruption subclass code
000000000000099E  9438 6004                             0000000000000004  1000+         NI    PMCW1_0,PMCWISCM    Make sure required bits are zero
00000000000009A2  B232 6000                             0000000000000000  1001+         MSCH  0(6)                Enable the subchannel
00000000000009A6                                                          1002+         DROP  6                   Do not access the SCHIB after this
00000000000009A6  A774 FFE9                             0000000000000978  1003+         $BC   B'0111',ENADNOAV    CC==1 or 2 or 3, subchannel not available
                                                                          1004+* CC==0, subchannel was successfully modified
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 3 - ENADEV                                                   08 Sep 2020 07:32:45  Page    25

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                          1006+* Create the device error mask from the device class entry
00000000000009AA  92F1 200C                             000000000000000C  1008+         MVI   BLSERR,X'F1'        This is the generic device error check
                                                                          1009+* This checks for these error conditions:
                                                                          1010+*   X'80' - Attention (MAY BE TURNED OFF FOR SOME DEVICES)
                                                                          1011+*   X'40' - Status Modifier
                                                                          1012+*   X'20' - Control-Unit End
                                                                          1013+*   X'10' - Busy
                                                                          1014+*   X'01' - Unit Exception (MAY BE TURNED OFF FOR SOME DEVICES)
                                                                          1015+*
                                                                          1016+* While Unit Check is an error condition, it must be explicitly checked so
                                                                          1017+* that the service can indicate a pending action to read sense data by the
                                                                          1018+* program.  Yes, it is an error condition, but requires special handling.
                                                                          1019+* When set, the service indicates both an error condition AND a pending action.
                                                                          1020+*   X'02' - Unit Check (sense is pending)
                                                                          1021+*
                                                                          1022+* This ignores these normal status conditions.  They must be checked by the
                                                                          1023+* service depending upon the EXCP SPB controls.
                                                                          1024+*   X'08' - Channel end
                                                                          1025+*   X'04' - Device end

                                                                          1027+* If device recognizes physical end-of-file with Unit Exception, not an error
                                                                          1028+* So turn it off.
00000000000009AE  9180 2002                             0000000000000002  1029+         TM    BLSTYP,BLSPEOF      Does device use UE for end-of-file condition?
00000000000009B2  A7E4 0004                             00000000000009BA  1030+         $BNO  ERRU0054            ..No, check if device uses ATTN
00000000000009B6  94FE 200C                             000000000000000C  1031+         NI    BLSERR,X'FE'        ..Yes, turn off UE as an error status

                                                                          1033+* If device signals data is ready with Attention, turn it off as an error.
00000000000009BA  9140 2002                             0000000000000002  1034+ERRU0054 TM    BLSTYP,BLSUNSOL     Does device use ATTN when data is ready?
00000000000009BE  A7E4 0004                             00000000000009C6  1035+         $BNO  ERRX0054            ..No, modifications to error status done
00000000000009C2  947F 200C                             000000000000000C  1036+         NI    BLSERR,X'7F'        ..Yes, turn off ATTN as an error status

                                                                          1038+* Note: At present no device uses UE for physical end-of-file and Attention
                                                                          1039+* for data ready, but this code allows for both to be set in the device
                                                                          1040+* class value.

00000000000009C6                                                          1042+ERRX0054 DS    0H  Error mask completed

00000000000009C6                                                          1044+ENADSSPB DS    0H   Update the SPBE with the entry's address
00000000000009C6  5020 4004                             0000000000000004  1045+         ST    2,SPBIOTA           Set the I/O Table entry address in SPBE
                                                                          1046+* Officially add the entry to the table
00000000000009CA  5030 C37C                             0000000000000C5C  1047+         ST    3,IOTBLEA           Update the end of the table
00000000000009CE                      0000000000000000                    1049+         USING SAVEG,13      On return, service points to its save area
00000000000009CE  E3D0 D008 0004                        0000000000000008  1050+ENADRTN  $L    13,SAVEGBCK    Restore caller's save area address from service
                                                                          1051+* R13 now points to the caller's registers
00000000000009D4  E3F0 0278 0017                        0000000000000278  1052+         LLGT  15,LOD1RTN      Return to the framework for the return
00000000000009DA                                                          1053+         DROP  0               Forget ASA
00000000000009DA                                                          1054+         DROP  13              Forget any save area addressing as we leave
00000000000009DA  07FF                                                    1055+         BR    15              Return now to the framework...

00000000000009DC  00010000                                                1057+ENADSIWB DC    H'1',H'0'   Initial SIW used for searching subchannels
00000000000009E0  00020000 00000000                                       1058+ENAQIOT  DC    Y(QIOT),H'0',F'0'  Check to see if device in table
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 4 - EXCP                                                     08 Sep 2020 07:32:45  Page    26

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                          1060 *
                                                                          1061 * Boot Loader Service - 4 - EXCP
                                                                          1062 *
                                                                          1063 * SPB:
                                                                          1064 *      SPB Bytes 0,1   - EXCP Service ID (4)
                                                                          1065 *      SPB Byte 2      - SI EXCP input function control mask (See SPB DSECT)
                                                                          1066 *      SPB Byte 3      - not used
                                                                          1067 *      SPB Bytes 4-7   - ORB - I/O Table device entry address
                                                                          1068 *      SPB Bytes 8-11  - ORB - Key and flags
                                                                          1069 *      SPB Bytes 12-15 - ORB - CCW program starting address
                                                                          1070 *
                                                                          1071 * Register Usage:
                                                                          1072 *   R0 - Return Code
                                                                          1073 *   R1 - Hardware device address for I/O commands (from I/O Table)
                                                                          1074 *   R2 -
                                                                          1075 *   R3 - I/O Error execution register
                                                                          1076 *   R4 - Address of the SPB and its extention (the ORB)
                                                                          1077 *   R5 - Address of the primary device IOT entry
                                                                          1078 *   R6 - Interrupting device I/O Table entry (may not be the R5 entry)
                                                                          1079 *   R7 - Start of I/O table address and table entry start --------+
                                                                          1080 *        When found this becomes the secondary device IOT address |
                                                                          1081 *   R8 - I/O table entry length                                   |-- BXLE
                                                                          1082 *   R9 - Address of the last byte of the I/O table itself --------+
                                                                          1083 *   R12 - Base register
                                                                          1084 *   R15 - Return address to serivce framework
                                                                          1085 *

                                                                          1087 SERVEXCP SERVEXCP
00000000000009E8                                                          1089+         DS    0F
00000000000009E8  C2D3E204                                                1090+         DC    CL3'BLS',AL1(EXCP)
00000000000009EC                                                          1091+SERVEXCP DS    0H             Start of service
00000000000009EC                      00000000000009EC                    1092+         USING SERVEXCP,12    Establish service addressing
00000000000009EC                      0000000000000000                    1093+         USING ASA,0          Address the ASA
00000000000009EC                      0000000000000000                    1094+         USING SPB,1          Address the SPB (address from framework)
00000000000009EC                      0000000000000000                    1095+         USING SAVEG,13       Address caller's save area
                                                                          1096+         LA    2,EOBL+(EXCPSAVE-DMEMORY) \
00000000000009EC  4120 C54C                             0000000000000F38      +                                      Point to my save area
00000000000009F0  E320 D010 0024                        0000000000000010  1097+         $ST   2,SAVEGFWD     Save my save area address in caller's save area
00000000000009F6                                                          1098+         DROP  13             Forget caller's save area
00000000000009F6                      0000000000000000                    1099+         USING SAVEG,2        Now address MY save area
00000000000009F6  E3D0 2008 0024                        0000000000000008  1100+         $ST   13,SAVEGBCK    Preserve caller's R13 now in my save area
00000000000009FC  B904 00D2                                               1101+         $LR   13,2           Now point save area to MY save area with R13
0000000000000A00                                                          1102+         DROP  2
0000000000000A00                      0000000000000000                    1103+         USING SAVEG,13       Re-establish addressing to my save area with R13
0000000000000A00                                                          1104+         DROP  1
0000000000000A00  B904 0041                                               1105+         $LR   4,1     Free up R1 for I/O commands and preserve SPB
0000000000000A04                      0000000000000000                    1106+         USING SPB,4
0000000000000A04  B90B 0000                                               1107+         $SLR  0       Set the return code to 0, optimistically

                                                                          1109+*
                                                                          1110+* Validate the ORB
                                                                          1111+*
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 4 - EXCP                                                     08 Sep 2020 07:32:45  Page    27

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000A08  D503 4004 C268      0000000000000004  0000000000000C54  1112+         CLC   SPBEORBT,IOTBLBA     Is the I/O Table address below table?
0000000000000A0E  A744 00B7                             0000000000000B7C  1113+         $BL   EXCP16RC             ..Yes, not a valid address
0000000000000A12  D503 4004 C270      0000000000000004  0000000000000C5C  1114+         CLC   SPBEORBT,IOTBLEA     Is the address beyond the table?
0000000000000A18  A724 00B2                             0000000000000B7C  1115+         $BH   EXCP16RC             ..Yes, not a valid address
0000000000000A1C  9103 4007                             0000000000000007  1116+         TM    SPBEORBT+3,X'03'     Is the address on a full word?
0000000000000A20  A774 00AE                             0000000000000B7C  1117+         $BNZ  EXCP16RC             ..No, not a valid address
0000000000000A24  910F 4008                             0000000000000008  1118+         TM    SPBEORBK,SPBEORBR    Are bits 4-7 of the key field zeros?
0000000000000A28  A774 00AA                             0000000000000B7C  1119+         $BNZ  EXCP16RC             ..No, not valid for an ORB
0000000000000A2C  9580 4009                             0000000000000009  1120+         CLI   SPBEORB1,X'80'       Is the F flag set (and the rest zeros)?
0000000000000A30  A774 00A6                             0000000000000B7C  1121+         $BNE  EXCP16RC             ..No, not a valid flag setting
0000000000000A34  9500 400B                             000000000000000B  1122+         CLI   SPBEORB2,X'00'       Is byte 3 of word 1 zero?
0000000000000A38  A774 00A2                             0000000000000B7C  1123+         $BNE  EXCP16RC             ..No, not valid for an ORB



                                                                          1125+*
                                                                          1126+* STEP 1 - Start I/O operations for the device
                                                                          1127+*
0000000000000A3C  D200 C1DE 4002      0000000000000BCA  0000000000000002  1128+         MVC   PDEVENDS,SPBECTL     Move the SPB SI control mask
0000000000000A42  940C C1DE                             0000000000000BCA  1129+         NI    PDEVENDS,PDEVENDM    Isolate channel end and device end bits
                                                                          1130+* This mask will be used to determine when the primary device is done

0000000000000A46  9180 4002                             0000000000000002  1132+         TM    SPBECTL,SPBEBY1      Is the channel program bypassed?
0000000000000A4A  A714 001D                             0000000000000A84  1133+         $BO   EXCPDOWT             ..Yes, go to step 2, waiting
0000000000000A4E  D503 400C C1D4      000000000000000C  0000000000000BC0  1134+         CLC   SPBEORBC,EXCPZERO    Is channel program address missing?
0000000000000A54  A784 0094                             0000000000000B7C  1135+         $BE   EXCP16RC             ..Yes, not valid for this ORB

0000000000000A58  5850 4004                             0000000000000004  1137+         L     5,SPBEORBT           Fetch the I/O Table entry address from ORB
0000000000000A5C                      0000000000000000                    1138+         USING BLSIOT,5             Address the entry
0000000000000A5C  5810 5004                             0000000000000004  1139+         L     1,BLSHDW               Fetch the device's hardware address
0000000000000A60  4160 4004                             0000000000000004  1140+         LA    6,SPBEORB              Point to the ORB in the SPB
0000000000000A64  B233 6000                             0000000000000000  1141+         SSCH  0(6)                   Was request accepted?
0000000000000A68  A784 000E                             0000000000000A84  1142+         $BC   B'1000',EXCPDOWT       ..Yes, CC=0 wait for results...
0000000000000A6C  A724 0082                             0000000000000B70  1143+         $BC   B'0010',EXCP12RC       ..No, CC=2 subchannel is busy
                                                                          1144+*                                     It has a previous start, halt or clear
                                                                          1145+*                                     function in progress.  Should not happen
0000000000000A70  A714 0080                             0000000000000B70  1146+         $BC   B'0001',EXCP12RC       ..No, CC=3 device not available
                                                                          1147+*                                     Should not happen.  Device was enabled
                                                                          1148+*        $BC    B'0100',FALL THROUGH  ..No, CC=1 subchannel has pending status?
                                                                          1149+*  This could be unsolicited status.  Check if device will do that.
0000000000000A74  9140 5002                             0000000000000002  1150+         TM    BLSTYP,BLSUNSOL        Does the device generate unsolicited ATTN?
0000000000000A78  A7E4 0076                             0000000000000B64  1151+         $BNO  EXCP08RC               ..No, so an error state
0000000000000A7C  A7F4 0004                             0000000000000A84  1152+         $B    EXCPDOWT               ..Do the wait, but not busy with my work
                                                                          1153+* It does, so fall through and wait for an interrupt (SSCH did not start!)
                                                                          1154+* I/O Started - busy with my work.  Indicate the device is busy...
0000000000000A80  9280 5003                             0000000000000003  1155+         MVI   BLSTATUS,BLSBUSY     ..and clear other status bits



                                                                          1157+*
                                                                          1158+* STEP 2 - Wait for I/O Operation to complete with an interruption
                                                                          1159+*
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 4 - EXCP                                                     08 Sep 2020 07:32:45  Page    28

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000A84                                                          1160+EXCPDOWT DS    0H   Wait for an interrupt from a device
0000000000000A84  D20F 01F0 C1B4                        0000000000000BA0  1161+         MVC   ZIONPSW(16),EXCPCONT     Set up new PSW for after I/O interrupt
0000000000000A8A  B2B2 C1A4                             0000000000000B90  1162+         $LPSW EXCPWAIT                 Wait for I/O interruption
                                      0000000000000A8E  0000000000000001  1163+EXCPDONE EQU   *          EXCP continue here after I/O interruption
0000000000000A8E  D20F 01F0 C1C4                        0000000000000BB0  1164+         MVC   ZIONPSW(16),EXCPTRAP     Restore I/O trap PSW
                                                                          1165+*
                                                                          1166+* Fetch the interruption information for the interrupting device
                                                                          1167+*
0000000000000A94  5870 00BC                             00000000000000BC  1168+         L     7,IOIPARM        Fetch the IOT entry address of device
0000000000000A98  5570 4004                             0000000000000004  1169+         CL    7,SPBEORBT       Is this from the primary device?
0000000000000A9C  A784 0006                             0000000000000AA8  1170+         $BE   EXCPSPR          ..Yes, proceed by getting the interruption
0000000000000AA0  9202 C274                             0000000000000C60  1171+         MVI   INTSRC,INTSEC    ..No, remember this is a secondary device
0000000000000AA4  A7F4 0004                             0000000000000AAC  1172+         $B    EXCPSRS          and move it to its IOT entry
0000000000000AA8                      0000000000000000                    1173+         USING BLSIOT,7         Point to IOT entry from SPB

0000000000000AA8                                                          1175+EXCPSPR  DS    0H    Fetch the interruption information
0000000000000AA8  9201 C274                             0000000000000C60  1176+         MVI   INTSRC,INTPRI    Remember this is the primary device
0000000000000AAC                                                          1177+EXCPSRS  DS    0H
0000000000000AAC  5810 00B8                             00000000000000B8  1178+         L     1,IOSSID         Fetch this device IRB (used by TSCH)
0000000000000AB0  5820 C278                             0000000000000C64  1179+         L     2,CSBLOCKS       This is where the IRB goes in memory
0000000000000AB4  B235 2000                             0000000000000000  1180+         TSCH  0(2)             Fetch the IRB
0000000000000AB8  A784 0003                             0000000000000ABE  1181+         $BC   B'1000',EXCPIRB   IRB has been stored with status
0000000000000ABC  0000                                                    1182+         DC    H'0'             Die if something else occurs

0000000000000ABE                                                          1184+EXCPIRB  DS    0H   IRB stored
0000000000000ABE  9202 C275                             0000000000000C61  1185+         MVI   CSSTRUCT,CSSIRB  Remember which block is stored
0000000000000AC2                      0000000000000000                    1186+         USING IRB,2            Point to the IRB
0000000000000AC2  D20B 7010 2000                        0000000000000000  1187+         MVC   BLSSW(12),IRBSCSW   Copy the SCSW from IRB to IOT entry
0000000000000AC8  D601 7008 7018      0000000000000008  0000000000000018  1188+         OC    BLSUNCH,BLSSW+(SCSWUS-SCSW)  Accumulate status
0000000000000ACE  9602 7003                             0000000000000003  1189+         OI    BLSTATUS,BLSTATS       BLSUNCH has status
0000000000000AD2                                                          1190+         DROP  2                Do not need the IRB any longer



                                                                          1192+*
                                                                          1193+* STEP 3 - Analyze Status (from either expected or unexpected device)
                                                                          1194+*
0000000000000AD2                                                          1195+EXCPANAL DS    0H   Analyze status in the IOT entry
0000000000000AD2  9102 7003                             0000000000000003  1196+         TM    BLSTATUS,BLSTATS    Status in the IOT entry?
0000000000000AD6  A714 0003                             0000000000000ADC  1197+         $BO   *+6                 ..Yes, keep going
0000000000000ADA  0000                                                    1198+         DC    H'0'                ..No, should have status here.  DIE!

                                                                          1200+* Determine if unsolicited status normal for this device
0000000000000ADC  9140 7002                             0000000000000002  1201+         TM    BLSTYP,BLSUNSOL     Does the device generate unsolicited ATTN?
0000000000000AE0  A7E4 0012                             0000000000000B04  1202+         $BNO  EXCPSOL             ..No, so solicited status
0000000000000AE4  9180 7008                             0000000000000008  1203+         TM    BLSUNIT,BLSATTN     ..Yes, so is this an ATTN?
0000000000000AE8  47E0 C118                             0000000000000B04  1204+         BNO   EXCPSOL     ..No, so assume solicited status for primary device
0000000000000AEC  9204 700B                             000000000000000B  1205+         MVI   BLSACT,BLSREAD      ..Yes, indicate this device needs a read
0000000000000AF0  9620 7003                             0000000000000003  1206+         OI    BLSTATUS,BLSTATO    There is a pending action for this device
0000000000000AF4  9201 4003                             0000000000000003  1207+         MVI   SPBPEND,SPBPENDG    Tell the program some device needs action
0000000000000AF8  B921 0057                                               1208+         $CLR  5,7                 Is this the primary device?
0000000000000AFC  A774 FFC4                             0000000000000A84  1209+         $BNE  EXCPDOWT            ..No, try for another interrupt
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 4 - EXCP                                                     08 Sep 2020 07:32:45  Page    29

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT


                                                                          1211+* Primary device sent Attention status.  So, return code is 0
0000000000000B00                                                          1212+         DROP  7                   Forget interrupting device entry
0000000000000B00  47F0 C160                             0000000000000B4C  1213+         B     EXCP00RC            Return code 0

0000000000000B04                                                          1215+EXCPSOL  DS    0H      Determine primary device's state
0000000000000B04                      0000000000000000                    1216+         USING BLSIOT,5
0000000000000B04  9500 5009                             0000000000000009  1217+         CLI   BLSCH,X'00'         Did a channel error occur?
0000000000000B08  A774 002E                             0000000000000B64  1218+         $BNE  EXCP08RC            ..Yes, indicate an error condition
0000000000000B0C  4330 500C                             000000000000000C  1219+         IC    3,BLSERR            Fetch the error mask for the device
0000000000000B10  4430 C1DA                             0000000000000BC6  1220+         EX    3,EXCPDERR          ..Did a general device error occur?
0000000000000B14  A774 0028                             0000000000000B64  1221+         $BNZ  EXCP08RC            ..Yes, return with 8 as return code

0000000000000B18  9102 5008                             0000000000000008  1223+         TM    BLSUNIT,SCSWUC      Did a Unit Check occur?
0000000000000B1C  A7E4 000A                             0000000000000B30  1224+         $BNO  EXCPSOLE            ..No, check for possible EOF condition
0000000000000B20  9200 500B                             000000000000000B  1225+         MVI   BLSACT,BLSRDSN      ..Yes, indicate this device has sense data
0000000000000B24  9201 4003                             0000000000000003  1226+         MVI   SPBPEND,SPBPENDG    Tell the program some device needs action
0000000000000B28  9620 5003                             0000000000000003  1227+         OI    BLSTATUS,BLSTATO    There is a pending action for this device
0000000000000B2C  A7F4 001C                             0000000000000B64  1228+         $B    EXCP08RC            Also indicate the primary device has error.

0000000000000B30                                                          1230+EXCPSOLE DS    0H     Determine if ending status is good
                                                                          1231+* Determine if the device ended as expected
                                                                          1232+* Checking termination settings from input SPBSI
0000000000000B30  4330 C1DE                             0000000000000BCA  1233+         IC    3,PDEVENDS          Fetch the ending mask for the operation
0000000000000B34  4430 C1DA                             0000000000000BC6  1234+         EX    3,EXCPDERR          Did device end?
0000000000000B38  A7E4 FFA6                             0000000000000A84  1235+         $BNO  EXCPDOWT            ..No, wait for another interrupt
0000000000000B3C  9180 5002                             0000000000000002  1236+         TM    BLSTYP,BLSPEOF      Does device detect physcial end-of-file?
0000000000000B40  A7E4 0006                             0000000000000B4C  1237+         $BNO  EXCP00RC            ..No, return code 0
0000000000000B44  9101 5008                             0000000000000008  1238+         TM    BLSUNIT,SCSWUX      Did Unit Exception occur?
0000000000000B48  A714 0008                             0000000000000B58  1239+         $BO   EXCP04RC            ..Yes, return code 4
0000000000000B4C                      0000000000000000                    1240+         USING BLSIOT,5            Return to the caller with return code 0
                                                                          1241+*
                                                                          1242+* Return to service caller with primary device return code
                                                                          1243+*
0000000000000B4C                                                          1244+EXCP00RC DS    0H   Primary device successful
0000000000000B4C  947F 5003                             0000000000000003  1245+         NI    BLSTATUS,X'FF'-BLSBUSY    Turn off busy flag
0000000000000B50  B90B 0000                                               1246+         $SLR  0,0               Set return code to 0
0000000000000B54  A7F4 0016                             0000000000000B80  1247+         $B    EXCPRCAL

0000000000000B58                                                          1249+EXCP04RC DS    0H   Primary device detected physical end-of-file condition
0000000000000B58  947F 5003                             0000000000000003  1250+         NI    BLSTATUS,X'FF'-BLSBUSY    Turn off busy flag
0000000000000B5C  4100 0004                             0000000000000004  1251+         LA    0,4                Set return code to 4
0000000000000B60  A7F4 0010                             0000000000000B80  1252+         $B    EXCPRCAL
0000000000000B64                                                          1253+EXCP08RC DS    0H   Primary device is in an error condition
0000000000000B64  947F 5003                             0000000000000003  1254+         NI    BLSTATUS,X'FF'-BLSBUSY    Turn off busy flag
0000000000000B68  4100 0008                             0000000000000008  1255+         LA    0,8                Set return code to 8
0000000000000B6C  A7F4 000A                             0000000000000B80  1256+         $B    EXCPRCAL

0000000000000B70                                                          1258+EXCP12RC DS    0H   Device not available
0000000000000B70  947F 5003                             0000000000000003  1259+         NI    BLSTATUS,X'FF'-BLSBUSY    Turn off busy flag
0000000000000B74  4100 000C                             000000000000000C  1260+         LA    0,12                Set return code to 12
0000000000000B78  A7F4 0004                             0000000000000B80  1261+         $B    EXCPRCAL
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 4 - EXCP                                                     08 Sep 2020 07:32:45  Page    30

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT


0000000000000B7C                                                          1263+EXCP16RC DS    0H   Return invalid ORB
0000000000000B7C  4100 0010                             0000000000000010  1264+         LA    0,16                Set return code to 16

0000000000000B80                                                          1266+         DROP  4
0000000000000B80                                                          1267+         DROP  5

                                                                          1269+*
                                                                          1270+* Return to service caller
                                                                          1271+*
0000000000000B80                      0000000000000000                    1273+         USING SAVEG,13      On return, service points to its save area
0000000000000B80  E3D0 D008 0004                        0000000000000008  1274+EXCPRCAL $L    13,SAVEGBCK    Restore caller's save area address from service
                                                                          1275+* R13 now points to the caller's registers
0000000000000B86  E3F0 0278 0017                        0000000000000278  1276+         LLGT  15,LOD1RTN      Return to the framework for the return
0000000000000B8C                                                          1277+         DROP  0               Forget ASA
0000000000000B8C                                                          1278+         DROP  13              Forget any save area addressing as we leave
0000000000000B8C  07FF                                                    1279+         BR    15              Return now to the framework...

0000000000000B90  02020000 00000000                                       1281+EXCPWAIT PSW   2,0,2,0,0          Causes CPU to wait for I/O interruption
0000000000000B98  00000000 00000000
0000000000000BA0  00000000 80000000                                       1282+EXCPCONT PSW   0,0,0,0,EXCPDONE,31  Causes the CPU to continue after waiting
0000000000000BA8  00000000 00000A8E
0000000000000BB0  00020000 00000000                                       1283+EXCPTRAP PSW   0,0,2,0,X'170'     I/O trap New PSW (restored after I/O)
0000000000000BB8  00000000 00000170
0000000000000BC0  00000000                                                1284+EXCPZERO DC    F'0'               A constant of zeros
0000000000000BC4  0001                                                    1285+EXCPONE  DC    H'1'               A constant of one

                                                                          1287+* These two locations detect device errors for a specific device type
                                                                          1288+* The device type implies the EXCPDEMK content.
0000000000000BC6                      0000000000000000                    1289+         USING BLSIOT,5    Set addressing for executed instruction
0000000000000BC6  9100 5008                             0000000000000008  1290+EXCPDERR TM    BLSUNIT,0   Executed to detect device errors or ending status
0000000000000BCA                                                          1291+         DROP  5

                                                                          1293+* Successful primary device unit status mask (driven by EXCP SPB SI data)
0000000000000BCA  00                                                      1294+PDEVENDS DC    XL1'00'            Primary unit status mask success
                                      000000000000000C  0000000000000001  1295+PDEVENDM EQU   X'0C'    Isolate the Channel End and Device status bits
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 5 - PNDING                                                   08 Sep 2020 07:32:45  Page    31

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                          1297 *
                                                                          1298 * Boot Loader Service - 5 - PNDING
                                                                          1299 *
                                                                          1300 * Register Usage:
                                                                          1301 *   R0 - Return Code
                                                                          1302 *   R1 - AVAILABLE
                                                                          1303 *   R2 - AVAILABLE
                                                                          1304 *   R3 - AVAILABLE
                                                                          1305 *   R4 - Address of the SPB and its extention
                                                                          1306 *   R5 - AVAILABLE
                                                                          1307 *   R6 - AVAILABLE
                                                                          1308 *   R7 - Start of I/O table address and table entry start --------+
                                                                          1309 *        When found this becomes the secondary device IOT address |
                                                                          1310 *   R8 - I/O table entry length                                   |-- BXLE
                                                                          1311 *   R9 - Address of the last byte of the I/O table itself --------+
                                                                          1312 *   R10 - AVAILABLE
                                                                          1313 *   R11 - AVAILABLE
                                                                          1314 *   R12 - Base register
                                                                          1315 *   R15 - Return address to serivce framework
                                                                          1316 *

                                                                          1318          SERVPEND
0000000000000BCC                                                          1320+         DS    0F
0000000000000BCC  C2D3E205                                                1321+         DC    CL3'BLS',AL1(PNDING)
0000000000000BD0                                                          1322+SERVPEND DS    0H             Start of service
0000000000000BD0                      0000000000000BD0                    1323+         USING SERVPEND,12    Establish service addressing
0000000000000BD0                      0000000000000000                    1324+         USING ASA,0          Address the ASA
0000000000000BD0                      0000000000000000                    1325+         USING SPB,1          Address the SPB (address from framework)
0000000000000BD0                      0000000000000000                    1326+         USING SAVEG,13       Address caller's save area
                                                                          1327+         LA    2,EOBL+(PENDSAVE-DMEMORY) \
0000000000000BD0  4120 C3F8                             0000000000000FC8      +                                      Point to my save area
0000000000000BD4  E320 D010 0024                        0000000000000010  1328+         $ST   2,SAVEGFWD     Save my save area address in caller's save area
0000000000000BDA                                                          1329+         DROP  13             Forget caller's save area
0000000000000BDA                      0000000000000000                    1330+         USING SAVEG,2        Now address MY save area
0000000000000BDA  E3D0 2008 0024                        0000000000000008  1331+         $ST   13,SAVEGBCK    Preserve caller's R13 now in my save area
0000000000000BE0  B904 00D2                                               1332+         $LR   13,2           Now point save area to MY save area with R13
0000000000000BE4                                                          1333+         DROP  2
0000000000000BE4                      0000000000000000                    1334+         USING SAVEG,13       Re-establish addressing to my save area with R13
0000000000000BE4  B909 0000                                               1335+         $SR   0,0                 Set return code to 0, optimistically
                                                                          1336+*         ICM   5,B'1111',SPBIOTA   Was an IOT address supplied?
0000000000000BE8  BF5F 1004                             0000000000000004  1338+         ICM   5,B'1111',SPBIOTA    Load fullword and test the value
0000000000000BEC  A784 0008                             0000000000000BFC  1339+         $BZ   PNDSRCH             ..No entry address, so search the table
0000000000000BF0                      0000000000000000                    1340+         USING BLSIOT,5            Address the IOT entry
0000000000000BF0  9120 5003                             0000000000000003  1341+         TM    BLSTATUS,BLSTATO    Does device have a pending action?
0000000000000BF4  A714 0016                             0000000000000C20  1342+         $BO   PNDINGD             ..Yes, need to report to the program
0000000000000BF8  A7F4 0020                             0000000000000C38  1343+         $B    PNDRTN              ..No, return code of zero then

0000000000000BFC                                                          1345+PNDSRCH  DS    0H   Search the IOT for a pending action
0000000000000BFC  E350 C084 0017                        0000000000000C54  1346+         LLGT  5,IOTBLBA           Initialize the BXLE R1 (sum)
0000000000000C02  E360 C088 0017                        0000000000000C58  1347+         LLGT  6,IOTBLI            Initialize the BXLE R3 (even reg of pair)
0000000000000C08  E370 C08C 0017                        0000000000000C5C  1348+         LLGT  7,IOTBLEA           Initialize the BXLE R3+1 (odd reg of pair)
0000000000000C0E  9120 5003                             0000000000000003  1349+PNDLOOP  TM    BLSTATUS,BLSTATO    Does device have a pending action?
ASMA Ver. 0.2.0  BOOT LOADER - SERVICE 5 - PNDING                                                   08 Sep 2020 07:32:45  Page    32

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000C12  A714 0007                             0000000000000C20  1350+         $BO   PNDINGD             ..Yes, need to report to the program
0000000000000C16  EC56 FFFC 0045                        0000000000000C0E  1351+         $BXLE 5,6,PNDLOOP         ..No, try next table entry
                                                                          1352+* Did not find a device with a pending action
0000000000000C1C  A7F4 000E                             0000000000000C38  1353+         $B    PNDRTN              Return code 0

0000000000000C20                                                          1355+PNDINGD  DS    0H   Report pending action to the program
0000000000000C20  9504 500B                             000000000000000B  1356+         CLI   BLSACT,BLSREAD      Is a program read pending?
0000000000000C24  A784 0006                             0000000000000C30  1357+         $BE   PNDSNS              ..No, must be sense
0000000000000C28  4100 0004                             0000000000000004  1358+         LA    0,4                 ..Yes, return code 4
0000000000000C2C  A7F4 0004                             0000000000000C34  1359+         $B    PNDDEV  Report to the program the device with the pending action
0000000000000C30  4100 0008                             0000000000000008  1360+PNDSNS   LA    0,8                 Tell program device has sense data

0000000000000C34  5050 1004                             0000000000000004  1362+PNDDEV   ST    5,SPBIOTA     Tell the program which device has action pending
0000000000000C38                                                          1363+         DROP  5
0000000000000C38                      0000000000000000                    1365+         USING SAVEG,13      On return, service points to its save area
0000000000000C38  E3D0 D008 0004                        0000000000000008  1366+PNDRTN   $L    13,SAVEGBCK    Restore caller's save area address from service
                                                                          1367+* R13 now points to the caller's registers
0000000000000C3E  E3F0 0278 0017                        0000000000000278  1368+         LLGT  15,LOD1RTN      Return to the framework for the return
0000000000000C44                                                          1369+         DROP  0               Forget ASA
0000000000000C44                                                          1370+         DROP  13              Forget any save area addressing as we leave
0000000000000C44  07FF                                                    1371+         BR    15              Return now to the framework...
ASMA Ver. 0.2.0  BOOT LOADER - COMMON SERVICES DATA                                                 08 Sep 2020 07:32:45  Page    33

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                          1373 *
                                                                          1374 * Common information used by Boot Loader Services
                                                                          1375 *

                                                                          1377          BLCOMMON
                                                                          1378+* End-of-Boot-Loader Address used to identify if caller is the boot loader
0000000000000C48  00000C68                                                1379+EOBLA    DC    A(EOBL)      Boot Loader's ending address
                                                                          1380+* IPL Device I/O Table Address
0000000000000C4C  00000000                                                1381+IPLDEVTA DC    A(0)     Returned by IOINIT service. Established upon return

                                                                          1383+* ENADEV service uses this to determine if the table is full.  The field
                                                                          1384+* is initialized in the assembly to the total length of the I/O Table and
                                                                          1385+* converted to an address by the IOINIT service.
0000000000000C50  00000100                                                1386+IOTMAX   DC    A(IOTDEVS*BLSIOEL)   The byte following the I/O Table.

                                                                          1388+* These values may be used by a BXLE.  The first entry is pointed to by the
                                                                          1389+* initial 'sum' register value.  If the table entry fails, use BXLE to
                                                                          1390+* point to the next entry.  The entire table has been examined when the
                                                                          1391+* branch is not taken.  The IOINIT service adds the IPL device to the table.
                                                                          1392+* So there is always at least one device in the table
0000000000000C54  00000000                                                1393+IOTBLBA  DC    A(0)    Set by IOINIT service               BXLE R1   sum
0000000000000C58  00000020                                                1394+IOTBLI   DC    A(BLSIOEL)   Entry length (increment)       BXLE R3   even
0000000000000C5C  00000000                                                1395+IOTBLEA  DC    A(0)    Set by IOINIT service (comparand)   BXLE R3+1 odd

                                                                          1397+* Latest interruption source is the primary or secondary device
0000000000000C60  00                                                      1398+INTSRC   DC    X'00'    Interruption source
                                      0000000000000001  0000000000000001  1399+INTPRI   EQU   X'01'    Interruption source is the primary device
                                      0000000000000002  0000000000000001  1400+INTSEC   EQU   X'02'    Interruption source is the secondary device

                                                                          1402+* What is in CSBLOCKS location - Used for debugging
0000000000000C61  00                                                      1403+CSSTRUCT DC    X'00'   Last stored structure from channel subsystem
                                      0000000000000001  0000000000000001  1404+CSSSCHIB EQU   X'01'   CHSSBLK contains an SCHIB
                                      0000000000000002  0000000000000001  1405+CSSIRB   EQU   X'02'   CHSSBLK contains an IRB

                                                                          1407+* Where channel subsystem blocks are stored.  Initialized by IOINIT service
0000000000000C64  00000000                                                1408+CSBLOCKS DC    A(0)



                                                                          1410 * END OF bls.asm
ASMA Ver. 0.2.0  BOOT LOADER - MEMORY USAGE OUTSIDE OF REGION                                       08 Sep 2020 07:32:45  Page    34

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000C68                                                          1412 EOBL     DS    0D   The end of the boot loader that participates in IPL.
                                                                          1413 * DSECT DMEMORY is placed after this location

                                                                          1415          BLMEM
                                                                          1416+* This DSECT defines memory usage not part of the assembled region
                                                                          1417+* By placing areas within this section, the boot loader size is reduced.
                                                                          1418+* The boot loader must provide addressability to these areas at run-time.
                                                                          1419+DMEMORY  DSECT
                                                                          1420+*
                                                                          1421+*  Service related save areas
                                                                          1422+*
0000000000000000  00000000 00000000                                       1424+SAVEAREA DC    18FD'0'     64-bit register save area
0000000000000008  00000000 00000000
0000000000000010  00000000 00000000
0000000000000018  00000000 00000000
0000000000000020  00000000 00000000
0000000000000028  00000000 00000000
0000000000000030  00000000 00000000
0000000000000038  00000000 00000000
0000000000000040  00000000 00000000
0000000000000048  00000000 00000000
0000000000000050  00000000 00000000
0000000000000058  00000000 00000000
0000000000000060  00000000 00000000
0000000000000068  00000000 00000000
0000000000000070  00000000 00000000
0000000000000078  00000000 00000000
0000000000000080  00000000 00000000
0000000000000088  00000000 00000000
0000000000000090  00000000 00000000                                       1426+NOOPSAVE DC    18FD'0'     64-bit register save area
0000000000000098  00000000 00000000
00000000000000A0  00000000 00000000
00000000000000A8  00000000 00000000
00000000000000B0  00000000 00000000
00000000000000B8  00000000 00000000
00000000000000C0  00000000 00000000
00000000000000C8  00000000 00000000
00000000000000D0  00000000 00000000
00000000000000D8  00000000 00000000
00000000000000E0  00000000 00000000
00000000000000E8  00000000 00000000
00000000000000F0  00000000 00000000
00000000000000F8  00000000 00000000
0000000000000100  00000000 00000000
0000000000000108  00000000 00000000
0000000000000110  00000000 00000000
0000000000000118  00000000 00000000
0000000000000120  00000000 00000000                                       1428+IOINSAVE DC    18FD'0'     64-bit register save area
0000000000000128  00000000 00000000
0000000000000130  00000000 00000000
0000000000000138  00000000 00000000
0000000000000140  00000000 00000000
ASMA Ver. 0.2.0  BOOT LOADER - MEMORY USAGE OUTSIDE OF REGION                                       08 Sep 2020 07:32:45  Page    35

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000148  00000000 00000000
0000000000000150  00000000 00000000
0000000000000158  00000000 00000000
0000000000000160  00000000 00000000
0000000000000168  00000000 00000000
0000000000000170  00000000 00000000
0000000000000178  00000000 00000000
0000000000000180  00000000 00000000
0000000000000188  00000000 00000000
0000000000000190  00000000 00000000
0000000000000198  00000000 00000000
00000000000001A0  00000000 00000000
00000000000001A8  00000000 00000000
00000000000001B0  00000000 00000000                                       1430+QIOTSAVE DC    18FD'0'     64-bit register save area
00000000000001B8  00000000 00000000
00000000000001C0  00000000 00000000
00000000000001C8  00000000 00000000
00000000000001D0  00000000 00000000
00000000000001D8  00000000 00000000
00000000000001E0  00000000 00000000
00000000000001E8  00000000 00000000
00000000000001F0  00000000 00000000
00000000000001F8  00000000 00000000
0000000000000200  00000000 00000000
0000000000000208  00000000 00000000
0000000000000210  00000000 00000000
0000000000000218  00000000 00000000
0000000000000220  00000000 00000000
0000000000000228  00000000 00000000
0000000000000230  00000000 00000000
0000000000000238  00000000 00000000
0000000000000240  00000000 00000000                                       1432+ENADSAVE DC    18FD'0'     64-bit register save area
0000000000000248  00000000 00000000
0000000000000250  00000000 00000000
0000000000000258  00000000 00000000
0000000000000260  00000000 00000000
0000000000000268  00000000 00000000
0000000000000270  00000000 00000000
0000000000000278  00000000 00000000
0000000000000280  00000000 00000000
0000000000000288  00000000 00000000
0000000000000290  00000000 00000000
0000000000000298  00000000 00000000
00000000000002A0  00000000 00000000
00000000000002A8  00000000 00000000
00000000000002B0  00000000 00000000
00000000000002B8  00000000 00000000
00000000000002C0  00000000 00000000
00000000000002C8  00000000 00000000
00000000000002D0  00000000 00000000                                       1434+EXCPSAVE DC    18FD'0'     64-bit register save area
00000000000002D8  00000000 00000000
00000000000002E0  00000000 00000000
ASMA Ver. 0.2.0  BOOT LOADER - MEMORY USAGE OUTSIDE OF REGION                                       08 Sep 2020 07:32:45  Page    36

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

00000000000002E8  00000000 00000000
00000000000002F0  00000000 00000000
00000000000002F8  00000000 00000000
0000000000000300  00000000 00000000
0000000000000308  00000000 00000000
0000000000000310  00000000 00000000
0000000000000318  00000000 00000000
0000000000000320  00000000 00000000
0000000000000328  00000000 00000000
0000000000000330  00000000 00000000
0000000000000338  00000000 00000000
0000000000000340  00000000 00000000
0000000000000348  00000000 00000000
0000000000000350  00000000 00000000
0000000000000358  00000000 00000000
0000000000000360  00000000 00000000                                       1436+PENDSAVE DC    18FD'0'     64-bit register save area
0000000000000368  00000000 00000000
0000000000000370  00000000 00000000
0000000000000378  00000000 00000000
0000000000000380  00000000 00000000
0000000000000388  00000000 00000000
0000000000000390  00000000 00000000
0000000000000398  00000000 00000000
00000000000003A0  00000000 00000000
00000000000003A8  00000000 00000000
00000000000003B0  00000000 00000000
00000000000003B8  00000000 00000000
00000000000003C0  00000000 00000000
00000000000003C8  00000000 00000000
00000000000003D0  00000000 00000000
00000000000003D8  00000000 00000000
00000000000003E0  00000000 00000000
00000000000003E8  00000000 00000000



00000000000003F0  00000000 00000000                                       1438+CHSSBLK  DS    64F   Area used for channel subsystem control blocks
00000000000003F8  00000000 00000000
0000000000000400  00000000 00000000
0000000000000408  00000000 00000000
0000000000000410  00000000 00000000
0000000000000418  00000000 00000000
0000000000000420  00000000 00000000
0000000000000428  00000000 00000000
0000000000000430  00000000 00000000
0000000000000438  00000000 00000000
0000000000000440  00000000 00000000
0000000000000448  00000000 00000000
0000000000000450  00000000 00000000
0000000000000458  00000000 00000000
0000000000000460  00000000 00000000
0000000000000468  00000000 00000000
ASMA Ver. 0.2.0  BOOT LOADER - MEMORY USAGE OUTSIDE OF REGION                                       08 Sep 2020 07:32:45  Page    37

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000470  00000000 00000000
0000000000000478  00000000 00000000
0000000000000480  00000000 00000000
0000000000000488  00000000 00000000
0000000000000490  00000000 00000000
0000000000000498  00000000 00000000
00000000000004A0  00000000 00000000
00000000000004A8  00000000 00000000
00000000000004B0  00000000 00000000
00000000000004B8  00000000 00000000
00000000000004C0  00000000 00000000
00000000000004C8  00000000 00000000
00000000000004D0  00000000 00000000
00000000000004D8  00000000 00000000
00000000000004E0  00000000 00000000
00000000000004E8  00000000 00000000



                                                                          1440+* I/O Table is placed last so that it can be dynamically extended if needed.
                                                                          1441+* No service is provided for that purpose, but it can be done by increasing
                                                                          1442+* IOTMAX by size of the number of additional table entries being added.  IOTBLI
                                                                          1443+* contains the size of each individual entry.
00000000000004F0                                                          1445+         DS    0D
00000000000004F0  00000000 00000000                                       1446+IOTBL    DS    (8*7)F'0'             Define the I/O table
00000000000004F8  00000000 00000000
0000000000000500  00000000 00000000
0000000000000508  00000000 00000000
0000000000000510  00000000 00000000
0000000000000518  00000000 00000000
0000000000000520  00000000 00000000
0000000000000528  00000000 00000000
0000000000000530  00000000 00000000
0000000000000538  00000000 00000000
0000000000000540  00000000 00000000
0000000000000548  00000000 00000000
0000000000000550  00000000 00000000
0000000000000558  00000000 00000000
0000000000000560  00000000 00000000
0000000000000568  00000000 00000000
0000000000000570  00000000 00000000
0000000000000578  00000000 00000000
0000000000000580  00000000 00000000
0000000000000588  00000000 00000000
0000000000000590  00000000 00000000
0000000000000598  00000000 00000000
00000000000005A0  00000000 00000000
00000000000005A8  00000000 00000000
00000000000005B0  00000000 00000000
00000000000005B8  00000000 00000000
00000000000005C0  00000000 00000000
00000000000005C8  00000000 00000000
ASMA Ver. 0.2.0  BOOT LOADER - MEMORY USAGE OUTSIDE OF REGION                                       08 Sep 2020 07:32:45  Page    38

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                      0000000000000008  0000000000000001  1447+IOTDEVS  EQU   8                     Number of devices in the I/O table
                                      00000000000005D0  0000000000000001  1448+IOTBLE   EQU   *



                                      00000000000005D0  0000000000000001  1450+HWM      EQU   IOTBLE     Can not load any directed record lower than here
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 07:32:45  Page    39

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                          1452          BLSPB
                                                                          1453+*
                                                                          1454+* Boot Loader Services Parameter Block
                                                                          1455+*
                                                                          1456+SPB      DSECT
0000000000000000  0000                                                    1457+SPBID    DS    H           Service ID of requested service from caller
0000000000000002  0000                                                    1458+SPBSI    DS    H           Service Information provided by caller
                                      0000000000000004  0000000000000001  1459+SPBE     EQU   *           Start of SPB extension used by service

                                                                          1461+* This SPBE field is used by IOINIT, QIOT, ENADEV, and PNDING services
0000000000000004  00000000                                                1462+SPBIOTA  DS    F           I/O Table entry address as service input or output

                                                                          1464+* IOINIT SPBE - SERVICE ID 1
                                                                          1465+*   SPB: DC  Y(IOINIT),H'0'
0000000000000008                      0000000000000008  0000000000000002  1466+         ORG   SPBSI
0000000000000002  00                                                      1467+SPBCCWF  DS    X           CCW Format used by boot loader services
                                      0000000000000001  0000000000000001  1468+SPBCCW0  EQU   X'01'       CCW Format 0 used
                                      0000000000000002  0000000000000001  1469+SPBCCW1  EQU   X'02'       CCW Format 1 used
0000000000000003  00                                                      1470+         DS    X
0000000000000004  00000000                                                1471+         DS    F           Returned address of I/O Table entry

                                                                          1473+* QIOT SPBE -   SERVICE ID 2
                                                                          1474+*   SPB: DC  Y(QIOT),H'0',F'0'
0000000000000008                      0000000000000008  0000000000000004  1475+         ORG   SPBE
0000000000000004  00000000                                                1476+         DS    F           Returned address of I/O Table entry

                                                                          1478+* ENADEV SPBE - SERVICE ID 3
                                                                          1479+*   SPB: DC   Y(ENADEV),H'0',AL1(BLSTYP),XL3'000000'
0000000000000008                      0000000000000008  0000000000000004  1480+         ORG   SPBE
0000000000000004  00                                                      1481+SPBDCLS  DS    X           Input Device Class (same values as BLSTYP)
0000000000000005                      0000000000000005  0000000000000004  1482+         ORG   SPBE  (RC==0 or RC==4)
0000000000000004  00000000                                                1483+         DS    F           Returned address of I/O Table entry
0000000000000008                      0000000000000008  0000000000000004  1484+         ORG   SPBE  (RC==8)
0000000000000004  00                                                      1485+         DS    X           Input Device Class (SPBDCLS)
0000000000000005  00                                                      1486+         DS    X           RESERVED
0000000000000006  00                                                      1487+SPBDEVST DS    X           Device status (if available)
0000000000000007  00                                                      1488+SPBCHST  DS    X           Channel status (if available)
0000000000000008                      0000000000000008  0000000000000004  1489+         ORG   SPBE  (RC==12, RC==16, or RC==20)
0000000000000004  00                                                      1490+         DS    X           Input Device Class (SPBDCLS)
0000000000000005  000000                                                  1491+         DS    XL3         RESERVED


                                                                          1493+* EXCP SPB -    SERVICE ID 4
                                                                          1494+*   SPB: DC   Y(EXCP),H'0'
                                                                          1495+*        BLSORB
0000000000000008                      0000000000000008  0000000000000002  1496+         ORG   SPBSI
0000000000000002  00                                                      1497+SPBECTL  DS    X           EXCP input function control mask
                                      0000000000000080  0000000000000001  1498+SPBEBY1  EQU   X'80'       Bypass Step 1 processing (start I/O)
                                                                          1499+* SPBEBY2  EQU   X'40'       Bypass Step 2 processing (I/O wait)
                                                                          1500+* SPBEBY3  EQU   X'20'       Bypass Step 3 processing (status analysis)
                                      000000000000000C  0000000000000001  1501+SPBEWTM  EQU   X'0C'       Mask to isolate wait conditions
                                                                          1502+*                          Step 2 wait conditions:
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 07:32:45  Page    40

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                      000000000000000C  0000000000000001  1503+SPBEWDC  EQU   12            - Wait for both device and channel end
                                      0000000000000008  0000000000000001  1504+SPBEWCO  EQU   8             - Wait for channel end (may also have device end)
                                      0000000000000004  0000000000000001  1505+SPBEWDO  EQU   4             - Wait for device end (may also have channel end)
                                      0000000000000000  0000000000000001  1506+SPBEWNO  EQU   0             - Do not wait for both device and channel end
                                      000000000000000C  0000000000000001  1507+SPBENRM  EQU   SPBEWDC     Usual controls for most I/O actions
                                      0000000000000080  0000000000000001  1508+SPBEATN  EQU   SPBEBY1     Usual controls for ATTN wait

0000000000000003  00                                                      1510+SPBPEND  DS    X           EXCP output pending data condition
                                      0000000000000001  0000000000000001  1511+SPBPENDG EQU   X'01'       I/O Table has pending actions for other devices
                                      0000000000000000  0000000000000001  1512+SPBPENDN EQU   X'00'       I/O Table has no pending actions

0000000000000004  00000000 00000000                                       1514+SPBEORB  DS    3F          Operational Request Block
000000000000000C  00000000
0000000000000010                      0000000000000010  0000000000000004  1515+         ORG   SPBEORB
0000000000000004  00000000                                                1516+SPBEORBT DS    F       +0  Device I/O Table address (Interruption Parameter)
0000000000000008  00                                                      1517+SPBEORBK DS    X       +4  Storage Key field
                                      00000000000000F0  0000000000000001  1518+SPBEORBM EQU   X'F0'       Storage Key mask
                                      000000000000000F  0000000000000001  1519+SPBEORBR EQU   X'0F'       Reserved portion of key field byte
0000000000000009  00                                                      1520+SPBEORB1 DS    X       +5  F flag byte required content
000000000000000A  00                                                      1521+SPBEORBL DS    X       +6  Logical Path Mask
000000000000000B  00                                                      1522+SPBEORB2 DS    X       +7  Required content
000000000000000C                                                          1523+SPBEORBC DS    0XL4    +8  31-bit channel program address
000000000000000C  00                                                      1524+         DS    X       +8  Ignored for early architectures
000000000000000D  000000                                                  1525+SPBEORBP DS    XL3     +9  24-bit channel program address


                                                                          1527+* PNDGIN SPB -    SERVICE ID 5
                                                                          1528+*   SPB: DC   Y(PNDING),H'0',F'0'
0000000000000010                      0000000000000010  0000000000000004  1529+         ORG   SPBE
0000000000000004  00000000                                                1530+         DS    F           Returned IOT entry address of pending device



                                                                          1532 BLSIOT   BLSIOT
                                                                          1533+*
                                                                          1534+* Boot Loader I/O Table Entry
                                                                          1535+*
                                                                          1536+BLSIOT   DSECT
0000000000000000  0000                                                    1537+BLSDEV   DS    H        +0 I/O device number

0000000000000002  00                                                      1539+BLSTYP   DS    X        +2 I/O device class and attributes
                                      0000000000000080  0000000000000001  1540+BLSPEOF  EQU   B'10000000' 'Detects physical end-of-file' mask
                                      0000000000000040  0000000000000001  1541+BLSUNSOL EQU   B'01000000' 'Generates unsolicited status' mask
                                      0000000000000038  0000000000000001  1542+BLSSCLS  EQU   B'00111000' Device subclass mask
                                                                          1543+* Note: the device class is positioned in the byte so it can be used for the
                                                                          1544+* channel subsystem SCHIB I/O subclass code field without shifting.
                                      00000000000000F8  0000000000000001  1545+BLSRSV   EQU   B'11111000' Reserved bits mask (zeros)              UE
                                                                          1546+*                        CLASS                                    PEOF ATTN
                                                                          1547+*              B'00000000' 0 - Highest priority available           ?    ?
                                      0000000000000008  0000000000000001  1548+BLSFBA   EQU   B'00001000' 1 - Fixed-Block-Architecture DASD device N    N
                                      0000000000000089  0000000000000001  1549+BLSCKD   EQU   B'10001001' 1 - Count-Key-Data DASD device           Y    N
                                      0000000000000090  0000000000000001  1550+BLSTAPE  EQU   B'10010000' 2 - Sequential tape device               Y    N
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 07:32:45  Page    41

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                      0000000000000098  0000000000000001  1551+BLSCARD  EQU   B'10011000' 3 - Sequential input card device         Y    N
                                      0000000000000020  0000000000000001  1552+BLSPUN   EQU   B'00100000' 4 - Sequential output punch device       N    N
                                      0000000000000028  0000000000000001  1553+BLSPR    EQU   B'00101000' 5 - Sequential output printer device     N    N
                                      0000000000000070  0000000000000001  1554+BLSCON   EQU   B'01110000' 6 - Operator console device              N    Y
                                      0000000000000078  0000000000000001  1555+BLS3270  EQU   B'01111000' 7 - Operator 3270 terminal device        N    Y

0000000000000003  00                                                      1557+BLSTATUS DS    X        +3 Current device status
                                      0000000000000080  0000000000000001  1558+BLSBUSY  EQU   B'10000000' Device is busy
                                                                          1559+* Note: When BLSBUSY set, BLSTAT, BLSTATO, BLSTATS and BLSSNSP turned off,
                                                                          1560+* (set to 0).
                                      0000000000000040  0000000000000001  1561+BLSTAT   EQU   B'01000000' Status in BLSSW.
                                      0000000000000020  0000000000000001  1562+BLSTATO  EQU   B'00100000' Pending action present in BLSACT
                                      0000000000000002  0000000000000001  1563+BLSTATS  EQU   B'00000010' Unit and channel status present in BLSUNCH
                                      0000000000000001  0000000000000001  1564+BLSSNSP  EQU   B'00000001' Sense data is present in BLSSNS

0000000000000004  00000000                                                1566+BLSHDW   DS    F        +4 Hardware defined device address

0000000000000008                                                          1568+BLSUNCH  DS    0XL2     +8 Accumulated status when bit 1 set to 1 in BLSTATUS
0000000000000008  00                                                      1569+BLSUNIT  DS    X           Unit status
                                      0000000000000080  0000000000000001  1570+BLSATTN  EQU   B'10000000' Attention status
                                      0000000000000001  0000000000000001  1571+BLSUE    EQU   B'00000001' Unit exception status (physical EOF)
0000000000000009  00                                                      1572+BLSCH    DS    X           Channel status


000000000000000A  00                                                      1574+BLSSNS   DS    XL1     +10 Sense data present when bit 7 set to 1 in BLSTATUS

000000000000000B  00                                                      1576+BLSACT   DS    XL1     +11 Pending action when bit 2 set to 1 in BLSTATUS
                                      0000000000000000  0000000000000001  1577+BLSRDSN  EQU   X'00'       Device has pending sense data to be read
                                      0000000000000004  0000000000000001  1578+BLSREAD  EQU   X'04'       Device has pending data to be read

000000000000000C  00                                                      1580+BLSERR   DS    XL1     +12 Device status error mask, set by ENADEV

000000000000000D  000000                                                  1582+BLSRSV2  DS    XL3     +13 RESERVED

0000000000000010  00000000 00000000                                       1584+BLSSW    DS    3F      +16 SCSW of the latest interruption
0000000000000018  00000000

000000000000001C  00000000                                                1586+BLSPROG  DS    F       +28 Reserved for booted program usage
                                      0000000000000020  0000000000000001  1587+BLSIOEL  EQU   *-BLSIOT    Length of an I/O Table Entry (32 bytes)



                                                                          1589 *
                                                                          1590 * Subroutine Register Save Area DSECT
                                                                          1591 *

                                                                          1593          SAVEAREA DSECT=YES
                                                                          1594+SAVEG    DSECT
0000000000000000  00000000 00000000                                       1595+SAVEGRSV DS    FD'0'       Reserved save area (SA) field
0000000000000008  00000000 00000000                                       1596+SAVEGBCK DS    AD(0)       Backward save area pointer (points to caller's SA)
0000000000000010  00000000 00000000                                       1597+SAVEGFWD DS    AD(0)       Forward save area pointer (points to called SA)
0000000000000018  00000000 00000000                                       1598+SAVEGR14 DS    AD(0)       Saved R14 (caller's return address)
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 07:32:45  Page    42

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000020  00000000 00000000                                       1599+SAVEGR15 DS    AD(0)       Saved R15 (called routine's entry address)
0000000000000028  00000000 00000000                                       1600+SAVEGR0  DS    FD'0'       Saved R0
0000000000000030  00000000 00000000                                       1601+SAVEGR1  DS    FD'0'       Saved R1
0000000000000038  00000000 00000000                                       1602+SAVEGR2  DS    FD'0'       Saved R2
0000000000000040  00000000 00000000                                       1603+SAVEGR3  DS    FD'0'       Saved R3
0000000000000048  00000000 00000000                                       1604+SAVEGR4  DS    FD'0'       Saved R4
0000000000000050  00000000 00000000                                       1605+SAVEGR5  DS    FD'0'       Saved R5
0000000000000058  00000000 00000000                                       1606+SAVEGR6  DS    FD'0'       Saved R6
0000000000000060  00000000 00000000                                       1607+SAVEGR7  DS    FD'0'       Saved R7
0000000000000068  00000000 00000000                                       1608+SAVEGR8  DS    FD'0'       Saved R8
0000000000000070  00000000 00000000                                       1609+SAVEGR9  DS    FD'0'       Saved R9
0000000000000078  00000000 00000000                                       1610+SAVEGR10 DS    FD'0'       Saved R10
0000000000000080  00000000 00000000                                       1611+SAVEGR11 DS    FD'0'       Saved R11
0000000000000088  00000000 00000000                                       1612+SAVEGR12 DS    FD'0'       Saved R12
                                      0000000000000090  0000000000000001  1613+SAVEGLEN EQU   *-SAVEG     Length of 64-bit subroutine save area



                                                                          1615 *
                                                                          1616 * Input/Output Structure DSECT's
                                                                          1617 *

                                                                          1619          BLSIODS

                                                                          1621+*
                                                                          1622+* I/O Operation Request Block (ORB)
                                                                          1623+*

                                                                          1627+ORB      DSECT
0000000000000000  00000000                                                1628+ORBPARM  DC    F'0'     Word 0, bits 0-31

0000000000000004  00                                                      1630+ORB1_0   DC    X'00'    Word 1, bits 0-7
                                      00000000000000F0  0000000000000001  1631+ORBKEYM  EQU   X'F0'    Word 1, bits 0-3   - Storage Key Mask
                                      0000000000000008  0000000000000001  1632+ORBS     EQU   X'08'    Word 1, bit 4      - Suspend Control
                                      0000000000000004  0000000000000001  1633+ORBC     EQU   X'04'    Word 1, bit 5      - Streaming Mode Control
                                      0000000000000002  0000000000000001  1634+ORBM     EQU   X'02'    Word 1, bit 6      - Modification Control
                                      0000000000000001  0000000000000001  1635+ORBY     EQU   X'01'    Word 1, bit 7      - Synchronization Control

0000000000000005  00                                                      1637+ORB1_8   DC    X'00'    Word 1, bits 8-15
                                      0000000000000080  0000000000000001  1638+ORBF     EQU   X'80'    Word 1, bit 8      - CCW Format-Control
                                      0000000000000040  0000000000000001  1639+ORBP     EQU   X'40'    Word 1, bit 9      - Pre-fetch control
                                      0000000000000020  0000000000000001  1640+ORBI     EQU   X'20'    Word 1, bit 10     - Initial-status Interruption Control
                                      0000000000000010  0000000000000001  1641+ORBA     EQU   X'10'    Word 1, bit 11     - Address Limit Checking Control
                                      0000000000000008  0000000000000001  1642+ORBU     EQU   X'08'    Word 1, bit 12     - Suppress-suspended-interruption control
                                      0000000000000004  0000000000000001  1643+ORBB     EQU   X'04'    Word 1, bit 13     - Channel-Program-Type Control
                                      0000000000000002  0000000000000001  1644+ORBH     EQU   X'02'    Word 1, bit 14     - Format 2-IDAW Control
                                      0000000000000001  0000000000000001  1645+ORBT     EQU   X'01'    Word 1, bit 15     - 2K-IDAW control
0000000000000006  00                                                      1646+ORBLPM   DC    X'00'    Word 1, bits 16-23 - Logical Path Mask
0000000000000007  00                                                      1647+ORRB1_24 DC    X'00'    Word 1, bits 24-31
                                      0000000000000080  0000000000000001  1648+ORBL     EQU   X'80'    Word 1, bit 24     - Incorrect Length Suppression Mode
                                      000000000000007F  0000000000000001  1649+ORBRSV3  EQU   X'7F'    Word 1, bits 25-31 - reserved must be zeros
                                      0000000000000040  0000000000000001  1650+ORBD     EQU   X'40'    Word 1, bit 25     - MIDAW Addressing Control
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 07:32:45  Page    43

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                      000000000000003E  0000000000000001  1651+ORBRSV26 EQU   X'3E'    Word 1, bits 26-30 - reserved must be zeros
                                      000000000000007E  0000000000000001  1652+ORBRSV25 EQU   X'7E'    Word 1, bits 25-30 - reserved must be zeros
                                      0000000000000001  0000000000000001  1653+ORBX     EQU   X'01'    Word 1, bit 31     - ORB-extension control

0000000000000008  00000000                                                1655+ORBCCW   DC    A(0)     Word 2, bits 1-31  - Channel Program Address
                                      0000000000000080  0000000000000001  1656+ORBRSV4  EQU   X'80'    Word 2, bit 0      - reserved must be zero
                                      000000000000000C  0000000000000001  1657+ORBLEN   EQU   *-ORB Length of standard ORB
                                                                          1658+* Extended ORB fields
000000000000000C  00                                                      1659+ORBCSS   DC    X'00'    Word 3, bits 0-7   - Channel Subsystem Priority
000000000000000D  00                                                      1660+ORBRSV5  DC    X'00'    Word 3, bits 8-15  - reserved must be zeros
000000000000000E                                                          1661+ORBPGM   DC    0X'00'   Word 3, bits 16-23 - Transport mode reserves for program use
000000000000000E  00                                                      1662+ORBCU    DC    X'00'    Word 3, bits 16-23 - Control Unit Priority
000000000000000F  00                                                      1663+ORBRSV6  DC    X'00'    Word 3, bits 24-31 - reserved must be zeros
0000000000000010  00000000 00000000                                       1664+ORBRSV7  DC    XL16'00' Words 4-7          - reserved must be zeros
0000000000000018  00000000 00000000
                                      0000000000000020  0000000000000001  1665+ORBXLEN  EQU   *-ORB Length of extended ORB




                                                                          1668+*
                                                                          1669+* Channel Subsystem Status Word (SCSW)
                                                                          1670+*

                                                                          1674+SCSW     DSECT Subchannel          Status Word
0000000000000000  00                                                      1675+SCSWFLAG DC    X'00'    Flags
                                      00000000000000F0  0000000000000001  1676+SCSWKEYM EQU   X'F0'    Storage Key Mask of subchannel storage key
                                      0000000000000008  0000000000000001  1677+SCSWSUSC EQU   X'08'    Suspend Control
                                      0000000000000004  0000000000000001  1678+SCSWESWF EQU   X'04'    Extended Status Word Format
                                      0000000000000003  0000000000000001  1679+SCSWDCCM EQU   X'03'    Deferred condiont code mask
                                      0000000000000000  0000000000000001  1680+SCSWDCC0 EQU   X'00'    Normal I/O interruption
                                      0000000000000001  0000000000000001  1681+SCSWDCC1 EQU   X'01'    Deferred condition code is 1
                                      0000000000000003  0000000000000001  1682+SCSWDCC3 EQU   X'03'    Deferred condition code is 3

0000000000000001  00                                                      1684+SCSWCTLS DC    X'00'    General Controls
                                      0000000000000080  0000000000000001  1685+SCSWCCWF EQU   X'80'    CCW Format control when ...
                                      0000000000000040  0000000000000001  1686+SCSWCCWP EQU   X'40'    CCW Prefetch Control
                                      0000000000000020  0000000000000001  1687+SCSWISIC EQU   X'20'    Initial-Status-Interruption Control
                                      0000000000000010  0000000000000001  1688+SCSWALKC EQU   X'10'    Address-Limit-Checking Control
                                      0000000000000008  0000000000000001  1689+SCSWSSIC EQU   X'08'    Suppress suspended interruption
                                      0000000000000004  0000000000000001  1690+SCSW0CC  EQU   X'04'    Zero-Condition Code
                                      0000000000000002  0000000000000001  1691+SCSWECWC EQU   X'02'    Extended Control Word control
                                      0000000000000001  0000000000000001  1692+SCSWPNOP EQU   X'01'    Path Not Operational

0000000000000002  00                                                      1694+SCSW1    DC    X'00'    Control Byte 1
                                      0000000000000070  0000000000000001  1695+SCSWFM   EQU   X'70'    Functional Control Mask
                                      0000000000000040  0000000000000001  1696+SCSWFS   EQU   X'40'    Function Control - Start Function
                                      0000000000000020  0000000000000001  1697+SCSWFH   EQU   X'20'    Function Control - Halt Function
                                      0000000000000010  0000000000000001  1698+SCSWFC   EQU   X'10'    Function Control - Clear Function
                                      0000000000000008  0000000000000001  1699+SCSWARP  EQU   X'08'    Activity Control - Resume pending
                                      0000000000000004  0000000000000001  1700+SCSWASP  EQU   X'04'    Activity Control - Start pending
                                      0000000000000002  0000000000000001  1701+SCSWAHP  EQU   X'02'    Activity Control - Halt pending
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 07:32:45  Page    44

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                      0000000000000001  0000000000000001  1702+SCSWACP  EQU   X'01'    Activity Control - Clear pending
0000000000000003  00                                                      1703+SCSW2    DC    X'00'    Control Byte 2
                                      0000000000000080  0000000000000001  1704+SCSWASA  EQU   X'80'    Activity Control - Subchannel Active
                                      0000000000000040  0000000000000001  1705+SCSWADA  EQU   X'40'    Activity Control - Device Active
                                      0000000000000020  0000000000000001  1706+SCSWASUS EQU   X'20'    Activity Control - Suspended
                                      0000000000000010  0000000000000001  1707+SCSWSAS  EQU   X'10'    Status Control   - Alert Status
                                      0000000000000008  0000000000000001  1708+SCSWSINT EQU   X'08'    Status Control   - Intermediate Status
                                      0000000000000004  0000000000000001  1709+SCSWSPRI EQU   X'04'    Status Control   - Primary Status
                                      0000000000000002  0000000000000001  1710+SCSWSSEC EQU   X'02'    Status Control   - Secondary Status
                                      0000000000000001  0000000000000001  1711+SCSWSPEN EQU   X'01'    Status Control   - Status Pending

0000000000000004  00000000                                                1713+SCSWCCW  DC    A(0)     CCW Address

0000000000000008  00                                                      1715+SCSWUS   DC    X'00'    Unit Status
                                      0000000000000080  0000000000000001  1716+SCSWATTN EQU   X'80'    Attention
                                      0000000000000040  0000000000000001  1717+SCSWSM   EQU   X'40'    Status modifier
                                      0000000000000020  0000000000000001  1718+SCSWCUE  EQU   X'20'    Control-unit end
                                      0000000000000010  0000000000000001  1719+SCSWBUSY EQU   X'10'    Busy
                                      0000000000000008  0000000000000001  1720+SCSWCE   EQU   X'08'    Channel end
                                      0000000000000004  0000000000000001  1721+SCSWDE   EQU   X'04'    Device end
                                      0000000000000002  0000000000000001  1722+SCSWUC   EQU   X'02'    Unit check
                                      0000000000000001  0000000000000001  1723+SCSWUX   EQU   X'01'    Unit exception

0000000000000009  00                                                      1725+SCSWCS   DC    X'00'    Channel Status
                                      0000000000000080  0000000000000001  1726+SCSWPCI  EQU   X'80'    Program-controlled interruption
                                      0000000000000040  0000000000000001  1727+SCSWIL   EQU   X'40'    Incorrect length
                                      0000000000000020  0000000000000001  1728+SCSWPRGM EQU   X'20'    Program check
                                      0000000000000010  0000000000000001  1729+SCSWPROT EQU   X'10'    Protection Check
                                      0000000000000008  0000000000000001  1730+SCSWCDAT EQU   X'08'    Channel-data check
                                      0000000000000004  0000000000000001  1731+SCSWCCTL EQU   X'04'    Channel-control check
                                      0000000000000002  0000000000000001  1732+SCSWICTL EQU   X'02'    Interface-control check
                                      0000000000000001  0000000000000001  1733+SCSWCHNG EQU   X'01'    Chaining check

000000000000000A  0000                                                    1735+SCSWCNT  DC    H'0'     Residual CCW count
                                      000000000000000C  0000000000000001  1736+SCSWL    EQU   *-SCSW




                                                                          1739+*
                                                                          1740+* Channel Command Word Format-1 (CCW1)
                                                                          1741+*

                                                                          1745+CCW1     DSECT
0000000000000000  00                                                      1746+CCW1CODE DC    X'00'         Device specific Command Code
0000000000000001  00                                                      1747+CCW1FLGS DC    X'00'         Flags (see flag equates)
0000000000000002  0000                                                    1748+CCW1CNT  DC    H'0'          Byte Count
0000000000000004  00000000                                                1749+CCW1ADDR DC    A(0)          Data Address
                                      0000000000000008  0000000000000001  1750+CCW1L    EQU   *-CCW1 Length of CCW Format 1

                                                                          1752+* Chanel Command Word Flags used by both CCW formats 0 and 1
                                      0000000000000080  0000000000000001  1753+CCWCD    EQU   X'80'         Chain Data flag
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 07:32:45  Page    45

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                      0000000000000040  0000000000000001  1754+CCWCC    EQU   X'40'         Command Chain flag
                                      0000000000000020  0000000000000001  1755+CCWSLI   EQU   X'20'         Suppress Length Indication flag
                                      0000000000000010  0000000000000001  1756+CCWSKIP  EQU   X'10'         Suprress data transfer flag (skip)
                                      0000000000000008  0000000000000001  1757+CCWPCI   EQU   X'08'         Causes an intermediate interruption (programmed control)
                                      0000000000000004  0000000000000001  1758+CCWIDA   EQU   X'04'         Use Indirect Data Addressing
                                      0000000000000002  0000000000000001  1759+CCWSUSP  EQU   X'02'         Cause suspension before executing this command word




                                                                          1762+*
                                                                          1763+* Interruption Response Block (IRB)
                                                                          1764+*

                                                                          1768+IRB      DSECT Interruption          Response Block
0000000000000000  00000000 00000000                                       1769+IRBSCSW  DC    XL12'00' Words 0-2 - Subchannel Status Word (Defined by DSECT SCSW)
0000000000000008  00000000
000000000000000C  00000000 00000000                                       1770+IRBESW   DC    XL20'00' Words 3-7 - Extended Status Word
0000000000000014  00000000 00000000
000000000000001C  00000000
0000000000000020  00000000 00000000                                       1771+IRBECW   DC    XL32'00' Words 8-15 - Extended Control Word
0000000000000028  00000000 00000000
0000000000000030  00000000 00000000
0000000000000038  00000000 00000000
                                      0000000000000040  0000000000000001  1772+IRBL     EQU   *-IRB    IRB Length
0000000000000040  00000000 00000000                                       1773+IRBEMW   DC    XL32'00' Words 16-23 - Extended Measurement Word
0000000000000048  00000000 00000000
0000000000000050  00000000 00000000
0000000000000058  00000000 00000000
                                      0000000000000060  0000000000000001  1774+IRBXL    EQU   *-IRB    Extended IRB Length




                                                                          1777+*
                                                                          1778+* Subchannel Information Block (SCHIB)
                                                                          1779+*

                                                                          1783+SCHIB    DSECT Subchannel          Information Block
                                                                          1784+* Fields marked RW may be changed by MSCH.  IN indicates installed value supplied
0000000000000000                                                          1785+SCHPMCW  DC    0XL28'00'  Words 0-6 - Path-Management-Control Word
0000000000000000  00000000                                                1786+PMCWIP   DC    F'0'   RW  Word 0, bits 0-31 - Interruption Parameter
0000000000000004  00                                                      1787+PMCW1_0  DC    X'00'      Word 1, bits 0-7
                                      0000000000000038  0000000000000001  1788+PMCWISCM EQU   X'38'  RW  Interruption Subclass Code Mask

0000000000000005  00                                                      1790+PMCW1_8  DC    X'00'      Word 1, bits 8-15
                                      0000000000000080  0000000000000001  1791+PMCWE    EQU   X'80'  RW  Word 1, bit 8 - Subchannel Enabled
                                      0000000000000060  0000000000000001  1792+PMCWLM   EQU   X'60'  RW  Word 1, bits 9,10 - Limit-Mode Mask
                                      0000000000000020  0000000000000001  1793+PMCWLMG  EQU   X'20'  RW  Word 1, bit 9 - Address must be GE to limit
                                      0000000000000040  0000000000000001  1794+PMCWLML  EQU   X'40'  RW  Word 1, bit 10 - Address must be less than the limit
                                      0000000000000018  0000000000000001  1795+PMCWMM   EQU   X'18'  RW  Word 1, bits 11,12 - Measurement Mode Mask
                                      0000000000000010  0000000000000001  1796+PMCWMME  EQU   X'10'  RW  Word 1, bit 11 - Measurement Block Update Enabled
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 07:32:45  Page    46

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                      0000000000000008  0000000000000001  1797+PMCWMMC  EQU   X'08'  RW  Word 1, bit 12 - Device Connect Time Measurement Enabled
                                      0000000000000004  0000000000000001  1798+PMCWM    EQU   X'04'  RW  Word 1, bit 13 - Multipath Mode Enabled
                                      0000000000000002  0000000000000001  1799+PMCWT    EQU   X'02'  IN  Word 1, bit 14 - Timing facility availability
                                      0000000000000001  0000000000000001  1800+PMCWV    EQU   X'01'  IN  Word 1, bit 15 - Device number valid

0000000000000006  0000                                                    1802+PMCWDNUM DC    H'0'   IN  Word 1, bits 16-31 - Device Number

0000000000000008  00                                                      1804+PMCWLPM  DC    X'00'  RW  Word 2, bits 0-7   - Logical Path Mask
0000000000000009  00                                                      1805+PMCWPNOM DC    X'00'  RW  Word 2, bits 8-15  - Logical Path Not Operational Mask
000000000000000A  00                                                      1806+PMCWLPUM DC    X'00'  IN  Word 2, bits 16-23 - Logical Path Used Mask
000000000000000B  00                                                      1807+PMCWPIM  DC    X'00'  IN  Word 2, bits 24-31 - Path-Installed Mask
000000000000000C  0000                                                    1808+PMCWMBI  DC    H'0'   RW  Word 3, bits 0-15  - Measurement Block Index
000000000000000E  00                                                      1809+PMCWPOM  DC    X'00'  RW  Word 3, bits 16-23 - Path-Operational Mask
000000000000000F  00                                                      1810+PMCWPAM  DC    X'00'  IN  Word 3, bits 24-31 - Path-Available Mask
0000000000000010  00                                                      1811+PMCWCHP0 DC    X'00'  IN  Word 3, bits 0-7   - Channel Path Identifier 0
0000000000000011  00                                                      1812+PMCWCHP1 DC    X'00'  IN  Word 3, bits 8-15  - Channel Path Identifier 1
0000000000000012  00                                                      1813+PMCWCHP2 DC    X'00'  IN  Word 3, bits 16-23 - Channel Path Identifier 2
0000000000000013  00                                                      1814+PMCWCHP3 DC    X'00'  IN  Word 3, bits 24-31 - Channel Path Identifier 3
0000000000000014  00                                                      1815+PMCWCHP4 DC    X'00'  IN  Word 4, bits 0-7   - Channel Path Identifier 4
0000000000000015  00                                                      1816+PMCWCHP5 DC    X'00'  IN  Word 4, bits 8-15  - Channel Path Identifier 5
0000000000000016  00                                                      1817+PMCWCHP6 DC    X'00'  IN  Word 4, bits 16-23 - Channel Path Identifier 6
0000000000000017  00                                                      1818+PMCWCHP7 DC    X'00'  IN  Word 4, bits 24-31 - Channel Path Identifier 7
0000000000000018                                                          1819+PMCWRES1 DC    0XL4'00'   Word 6, bits 0-31  - reserved or pre-z systems
0000000000000018  000000                                                  1820+PMCWRES2 DC    XL3'00'    Word 6, bits 0-23  - reserved on z systems
000000000000001B  00                                                      1821+PMCWEXC  DC    X'00'      Word 6, bits 24-28 - reserved
                                      0000000000000004  0000000000000001  1822+PMCWB    EQU   X'04'  RW  Word 6, bit 29     - Measurement Block Format Control
                                      0000000000000002  0000000000000001  1823+PMCWX    EQU   X'02'  RW  Word 6, bit 30     - Extended Measurement Word Mode Enable
                                      0000000000000001  0000000000000001  1824+PMCWS    EQU   X'01'  RW  Word 6, bit 31     - Concurrent Sense Enable

000000000000001C  00000000 00000000                                       1826+SCHSCSW  DC    XL12'00'   Words 7-9 - Subchannel Status Word (See DSECT SCSW)
0000000000000024  00000000
0000000000000028                                                          1827+SCHMDA3  DC    0XL12'00'  Words 10-12 - Model Dependent Area on pre-z systems
0000000000000028  00000000 00000000                                       1828+SCHMBA   DC    AD(0)  RW  Words 10,11 - Measurement Block Address
0000000000000030  00000000                                                1829+SCHMDA1  DC    XL4'00'    Word 12 - Model Dependent Area on z systems
                                      0000000000000034  0000000000000001  1830+SCHIBL   EQU   *-SCHIB Length of SCHIB




                                                                          1833 *
                                                                          1834 * Hardware and Software Assigned Storage Locations
                                                                          1835 *

                                                                          1837 * This DSECT allows symbolic access to these locations.  The DSECT created is
                                                                          1838 * named ASA.  Addressing is established by: USING  ASA,0
                                                                          1839 * In this context, general register 0 is an assembler artifact.  Instructions
                                                                          1840 * that have R0 as a base register never actually use it for address generation.

                                                                          1842 ASA      BLSASA
                                                                          1844+ASA      DSECT
                                      0000000000000000  0000000000000001  1845+ASBEGIN  EQU   *                   Start of absolute/real assigned storage areas
0000000000000000  00000000 00000000                                       1846+IPLPSW   DC    FD'0'        000 A  Initial Program Load Program Status Word
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 07:32:45  Page    47

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000008  00000000 00000000                                       1847+IPLCCW1  DC    FD'0'        008 A  Initial Program Load first Channel Command Word
0000000000000010  00000000 00000000                                       1848+IPLCCW2  DC    FD'0'        010 A  Initial program Load second Channel Command Word
                                                                          1849+* RESTART RELATED PROGRAM STATUS WORDS
0000000000000018                      0000000000000018  0000000000000000  1850+         ORG   ASBEGIN
0000000000000000  00000000 00000000                                       1851+RSTNPSW  DC    FD'0'        000 R  Restart New PSW
0000000000000008  00000000 00000000                                       1852+RSTOPSW  DC    FD'0'        008 R  Restart Old PSW
0000000000000010  00000000 00000000                                       1853+UA0      DC    FD'0'        010 R  Unassigned Area 0
                                                                          1854+* INTERRUPTION OLD PROGRAM STATUS WORD SAVE AREAS
0000000000000018  00000000 00000000                                       1855+EXTOPSW  DC    FD'0'        018 R  External Interrupt Old PSW
0000000000000020  00000000 00000000                                       1856+SVCOPSW  DC    FD'0'        020 R  Supervisor Call Old PSW
0000000000000028  00000000 00000000                                       1857+PGMOPSW  DC    FD'0'        028 R  Program Old PSW
0000000000000030  00000000 00000000                                       1858+MCKOPSW  DC    FD'0'        030 R  Machine Check Old PSW
0000000000000038  00000000 00000000                                       1859+IOOPSW   DC    FD'0'        038 R  Input/Output Old PSW
                                                                          1860+* System/360 or System/370 Basic Control Mode INTERRUPTION INFORMATION
0000000000000040                      0000000000000040  000000000000001A  1861+         ORG   EXTOPSW+2
000000000000001A  0000                                                    1862+BCEXTCOD DC    H'0'         01A R  External Interuption Code
000000000000001C                      000000000000001C  0000000000000022  1863+         ORG   SVCOPSW+2
0000000000000022  0000                                                    1864+BCSVCCOD DC    H'00'        022 R  Supervisor Call Interruption Code
0000000000000024                      0000000000000024  000000000000002A  1865+         ORG   PGMOPSW+2
000000000000002A  0000                                                    1866+BCPGMCOD DC    H'0'         02A R  Program Interruption Code
000000000000002C                      000000000000002C  0000000000000032  1867+         ORG   MCKOPSW+2
0000000000000032  0000                                                    1868+BCMCKCOD DC    H'0'         032 R  Machine Check Interruption Code
0000000000000034                      0000000000000034  000000000000003A  1869+         ORG   IOOPSW+2
000000000000003A  0000                                                    1870+BCIOCOD  DC    H'0'         03A R  Input/Output Interruption Code (Device CCUU)
000000000000003C                      000000000000003C  0000000000000040  1871+         ORG   *+4
                                                                          1872+* CHANNEL-BASED INPUT/OUTPUT INTERRUPT RELATED
0000000000000040  00000000 00000000                                       1873+CSW      DC    FD'0'        040 R  Channel Status Word
0000000000000048                                                          1874+CAW      DC    0F'0'        048 R  Channel Address Word
0000000000000048  00                                                      1875+CAWKEY   DC    X'00'        048 R  Channel Storage Key (bits 0-3)
                                      0000000000000008  0000000000000001  1876+CAWSUSP  EQU   X'08'        048 R  Suspend Control (bit 4)
0000000000000049  000000                                                  1877+CAWADDR  DC    AL3(0)       049 R  Channel Command Address
000000000000004C  00000000                                                1878+UA1      DC    F'0'         04C R  Unassigend Area 1
                                                                          1879+* MISCELANEOUS AREAS
0000000000000050  00000000                                                1880+TIMER    DC    F'0'         050 R  System/360 and System/370 Interval Timer
0000000000000054  00000000                                                1881+TTDES    DC    F'0'         054 R  System/370 Trace-Table-Designation
                                                                          1882+* INTERRUPTION NEW PROGRAM STATUS WORD AREAS
0000000000000058  00000000 00000000                                       1883+EXTNPSW  DC    FD'0'        058 R  External New PSW
0000000000000060  00000000 00000000                                       1884+SVCNPSW  DC    FD'0'        060 R  Supervisor Call New PSW
0000000000000068  00000000 00000000                                       1885+PGMNPSW  DC    FD'0'        068 R  Program New PSW
0000000000000070  00000000 00000000                                       1886+MCKNPSW  DC    FD'0'        070 R  Machine Check New PSW
0000000000000078  00000000 00000000                                       1887+IONPSW   DC    FD'0'        078 R  Input/Output New PSW
                                                                          1888+* System/360 Diagnostic Scanout Area
0000000000000080                                                          1889+SCANOUT  DS    0X           080 A  System/360 Diagnostic Scanout Area
                                      0000000000000000  0000000000000001  1890+SCANOUTL EQU   *-SCANOUT           System/360 Diagnostic Scanout Area Length
                                                                          1891+* EXTERNAL INTERRUPTION INFORMATION
0000000000000080                      0000000000000080  0000000000000080  1892+         ORG   ASBEGIN+X'80'
0000000000000080  00000000                                                1893+EXTIPARM DC    F'0'         080 R  External-interruption Parameter
0000000000000084  0000                                                    1894+EXTCPUAD DC    H'0'         084 R  External-interruption CPU Address
0000000000000086  0000                                                    1895+EXTICODE DC    H'0'         086 R  External-interruption Code
                                                                          1896+* SUPERVISOR CALL INTERRUPTION INFORMATION
0000000000000088                                                          1897+SVCIID   DC    0F'0'        088 R  Supervisor-Call Interuption Identification
0000000000000088  00                                                      1898+         DC    X'00'        088 R  not-used - zeros stored
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 07:32:45  Page    48

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000089  00                                                      1899+SVCIILC  DC    X'00'        089 R  Supervisor-Call instruction length code
                                      000000000000000C  0000000000000001  1900+SVCIILCM EQU   B'00001100'         Supervisor-Call ILC mask, zeros stored in other bits
000000000000008A  0000                                                    1901+SVCICODE DC    H'0'         08A R  Supervisor-Call Interruption Code
                                                                          1902+* PROGRAM INTERRUPTION INFORMATION
000000000000008C                                                          1903+PGMIID   DC    0F'0'        08C R  Program-interruption identification
000000000000008C  00                                                      1904+         DC    X'00'        08C R  not-used - zeros stored
000000000000008D  00                                                      1905+PGMIILC  DC    X'00'        08D R  Program instruction lengh code
                                      000000000000000C  0000000000000001  1906+PGMIILCM EQU   B'00001100'         Progrtam ILC mask, zeros stored in other bits
000000000000008E  0000                                                    1907+PGMICODE DC    H'0'         08E R  Program Interruption Code
0000000000000090                                                          1908+PGMDXC   DC    0F'0'        090 R  Data-Exception Code
0000000000000090  00000000                                                1909+PGMTRX   DC    F'0'         090 R  Translation-Exception Identification
0000000000000094                                                          1910+MONCLS   DC    0H'0'        094 R  Monitor-Class Number
0000000000000094  00                                                      1911+         DC    X'00'        094 R  not-used - zeros stored
0000000000000095  00                                                      1912+MONNUMBR DC    X'00'        095 R  Monitor-Class Number stored
0000000000000096  00                                                      1913+PERCODE  DC    X'00'        096 R  Program-Event-Recording Code
                                      00000000000000F0  0000000000000001  1914+PERCODMK EQU   B'11110000'         Program-Event-Recordind Code mask in bits 0-3
0000000000000097  00                                                      1915+         DC    X'00'        097 R  PER Code not used - zeros stored
0000000000000098  00000000                                                1916+PERADDR  DC    F'0'         098 R  PER Address
000000000000009C  00000000                                                1917+MONCODE  DC    F'0'         09C R  Monitor Event Code in bytes 1-3, zeros in byte 0
00000000000000A0  00                                                      1918+PGMACCID DC    X'00'        0A0 R  Exception accress identification
00000000000000A1  00                                                      1919+PERACCID DC    X'00'        0A1 R  PER access identification
00000000000000A2  00                                                      1920+MPGACCID DC    X'00'        0A2 R  MOVE PAGE Operand access identification
00000000000000A3                                                          1921+SSARCHMD DC    0X'00'       0A3 A  Store Status Architectural Mode Identification
00000000000000A3  00                                                      1922+MKARCHMD DC    X'00'        0A3 R  Machine-Check Architectural Mode Identification
00000000000000A4  00000000                                                1923+UA2      DC    F'0'         0A4 R  Unused area
                                                                          1924+* z/Architecture PROGRAM INTERRUPTION INFORMATION
00000000000000A8  00000000 00000000                                       1925+ZPGMTRX  DC    FD'0'        0A8 R  Translation Exception information
00000000000000B0  00000000 00000000                                       1926+ZMONCODE DC    FD'0'        0B0 R  Monitor Code
                                                                          1927+* System/370 CHANNEL INPUT/OUTPUT INFORMATION
00000000000000B8                      00000000000000B8  00000000000000A8  1928+         ORG   ASBEGIN+X'A8'
00000000000000A8  00000000                                                1929+CHANID   DC    F'0'         0A8 R  System/370 STORE CHANNEL ID location
00000000000000AC  00000000                                                1930+IOELADDR DC    F'0'         0AC R  System/370 I/O Extended Logout Address
00000000000000B0  00000000                                                1931+LCHANLOG DC    F'0'         0B0 R  System/370 Limited Channel Logout Area
00000000000000B4  00000000                                                1932+UA3      DC    F'0'         0B4 R  unused by System/370
00000000000000B8  00                                                      1933+UA4      DC    X'00'        0B8 R  unused by System/370
00000000000000B9  00                                                      1934+MEASUREB DC    X'00'        0B9 R  System/370 Measurement Byte
00000000000000BA  0000                                                    1935+IOICODE  DC    H'0'         0BA R  System/370 Input/Output Interruption Device Address
                                                                          1936+* CHANNEL SUBSYSTEM INPUT/OUTPUT INFORMATION
00000000000000BC                      00000000000000BC  00000000000000B8  1937+         ORG   ASBEGIN+X'B8'
00000000000000B8  00000000                                                1938+IOSSID   DC    F'0'         0B8 R  Channel subsystem-identification word
00000000000000BC  00000000                                                1939+IOIPARM  DC    F'0'         0BC R  Channel subsystem I/O Interruption parameter
00000000000000C0  00000000                                                1940+IOIID    DC    F'0'         0C0 R  Channel subsystem I/O Interruption Identification
00000000000000C4  00000000                                                1941+PCFETO   DC    A(0)         0C4 R  ESA/390 PROGRAM CALL FAST Entry Table Origin
00000000000000C8  00000000                                                1942+STFLDATA DC    F'0'         0C8 R  STORE FACILITY LIST storage area
00000000000000CC  00000000 00000000                                       1943+UA5      DC    XL8'00'      0CC R  unused area
                                                                          1944+* MACHINE-CHECK INTERRUPTION INFORMATION
00000000000000D4  00000000                                                1945+MKXSAA   DC    F'0'         0D4 R  Machine-Check Extended Save Area Address
00000000000000D8  00000000 00000000                                       1946+MKCPUTIM DC    FD'0'        0D8 R  Machine-Check CPU timer save area
00000000000000E0  00000000 00000000                                       1947+MKCLKCMP DC    FD'0'        0E0 R  Machine-Check clock comparator save area
00000000000000E8  00000000                                                1948+MKICODE  DC    F'0'         0E8 R  Machine-Check interruption code
00000000000000EC  00000000 00000000                                       1949+UA6      DC    XL8'00'      0EC R  unused area
00000000000000F4  00000000                                                1950+MKDMGCOD DC    F'0'         0F4 R  Machine-Check external damage code
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 07:32:45  Page    49

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

00000000000000F8                                                          1951+ZMKFAILA DC    0FD'0'       0F8 R  Machine-Check failing storage address
00000000000000F8  00000000                                                1952+MKFAILA  DC    F'0'         0F8 R  Machine-Check failing storage address
00000000000000FC  00000000                                                1953+MKMODEL  DC    F'0'         0FC R  Machine-Check model dependent information
0000000000000100  00000000 00000000                                       1954+MKLOGOUT DC    4F'0'        100 R  ESA machine-check fixed logout area
0000000000000108  00000000 00000000
0000000000000110                      0000000000000110  0000000000000100  1955+         ORG   ASBEGIN+X'100'
0000000000000100  00000000 00000000                                       1956+ZEMONCTR DC    AD(0)        100 R  Enhanced-Monitor Counter-Array Origin
0000000000000108  00000000                                                1957+ZEMONSIZ DC    F'0'         108 R  Enhanced-Monitor Counter-Array Size
000000000000010C  00000000                                                1958+ZEMONCNT DC    F'0'         10C R  Enhanced-Monitor Exception Count
0000000000000110  00000000 00000000                                       1959+ZBRKADDR DC    AD(0)        110 R  Breaking-Event Address
0000000000000118  00000000 00000000                                       1960+UA7      DC    FD'0'        118 R  unused area
0000000000000120  00000000 00000000                                       1961+MKARS    DC    16F'0'       120 R  Machine-Check access register save area
0000000000000128  00000000 00000000
0000000000000130  00000000 00000000
0000000000000138  00000000 00000000
0000000000000140  00000000 00000000
0000000000000148  00000000 00000000
0000000000000150  00000000 00000000
0000000000000158  00000000 00000000
0000000000000160                      0000000000000160  0000000000000100  1962+         ORG   ASBEGIN+X'100'
0000000000000100  00000000 00000000                                       1963+MCKLOG   DC    24F'0'       100 R  System/370, 370-XA machine-Check fixed logout area.
0000000000000108  00000000 00000000
0000000000000110  00000000 00000000
0000000000000118  00000000 00000000
0000000000000120  00000000 00000000
0000000000000128  00000000 00000000
0000000000000130  00000000 00000000
0000000000000138  00000000 00000000
0000000000000140  00000000 00000000
0000000000000148  00000000 00000000
0000000000000150  00000000 00000000
0000000000000158  00000000 00000000
0000000000000160  00000000 00000000                                       1964+MKFPRS   DC    4D'0'        160 R  Machine-Check floating point register save area
0000000000000168  00000000 00000000
0000000000000170  00000000 00000000
0000000000000178  00000000 00000000
0000000000000180  00000000 00000000                                       1965+NKGRS    DC    16F'0'       180 R  Machine-Check general register save area
0000000000000188  00000000 00000000
0000000000000190  00000000 00000000
0000000000000198  00000000 00000000
00000000000001A0  00000000 00000000
00000000000001A8  00000000 00000000
00000000000001B0  00000000 00000000
00000000000001B8  00000000 00000000
00000000000001C0  00000000 00000000                                       1966+MKCRS    DC    16F'0'       1C0 R  Machine-Check control register save area
00000000000001C8  00000000 00000000
00000000000001D0  00000000 00000000
00000000000001D8  00000000 00000000
00000000000001E0  00000000 00000000
00000000000001E8  00000000 00000000
00000000000001F0  00000000 00000000
00000000000001F8  00000000 00000000
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 07:32:45  Page    50

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                          1967+* STORE/STATUS SAVE AREAS
0000000000000200                      0000000000000200  00000000000000D4  1968+         ORG   ASBEGIN+X'D4'
00000000000000D4  00000000                                                1969+SSXSAA   DC    A(0)         0D4 A  Store Status Extended Save Area Address
00000000000000D8  00000000 00000000                                       1970+SSCPUTIM DC    FD'0'        0D8 A  CPU Timer save area
00000000000000E0  00000000 00000000                                       1971+SSCLKCMP DC    FD'0'        0E0 A  Clock-Comparator save area
00000000000000E8                      00000000000000E8  0000000000000100  1972+         ORG   ASBEGIN+X'100'
0000000000000100  00000000 00000000                                       1973+SSPSW    DC    FD'0'        100 A  Program-Status Word save area
0000000000000108  00000000                                                1974+SSPREFIX DC    F'0'         108 A  Prefix save area
000000000000010C  00000000                                                1975+SSMODEL  DC    F'0'         10C A  Model-dependent save area
0000000000000110                      0000000000000110  0000000000000120  1976+         ORG   ASBEGIN+X'120'
0000000000000120  00000000 00000000                                       1977+SSARS    DC    16F'0'       120 A  Access-register save area
0000000000000128  00000000 00000000
0000000000000130  00000000 00000000
0000000000000138  00000000 00000000
0000000000000140  00000000 00000000
0000000000000148  00000000 00000000
0000000000000150  00000000 00000000
0000000000000158  00000000 00000000
0000000000000160  00000000 00000000                                       1978+SSFPRS   DC    4D'0'        160 A  Floating-point register save area
0000000000000168  00000000 00000000
0000000000000170  00000000 00000000
0000000000000178  00000000 00000000
0000000000000180  00000000 00000000                                       1979+SSGRS    DC    16F'0'       180 A  General register save area
0000000000000188  00000000 00000000
0000000000000190  00000000 00000000
0000000000000198  00000000 00000000
00000000000001A0  00000000 00000000
00000000000001A8  00000000 00000000
00000000000001B0  00000000 00000000
00000000000001B8  00000000 00000000
00000000000001C0  00000000 00000000                                       1980+SSCRS    DC    16F'0'       1C0 A  Control register save area
00000000000001C8  00000000 00000000
00000000000001D0  00000000 00000000
00000000000001D8  00000000 00000000
00000000000001E0  00000000 00000000
00000000000001E8  00000000 00000000
00000000000001F0  00000000 00000000
00000000000001F8  00000000 00000000
                                                                          1981+* z/Architecture OLD PROGRAM STATUS WORDS
0000000000000200                      0000000000000200  0000000000000120  1982+         ORG   ASBEGIN+X'120'
0000000000000120  00000000 00000000                                       1983+ZRSTOPSW DC    XL16'00'     120 R  Restart Old PSW
0000000000000128  00000000 00000000
0000000000000130  00000000 00000000                                       1984+ZEXTOPSW DC    XL16'00'     130 R  External Old PSW
0000000000000138  00000000 00000000
0000000000000140  00000000 00000000                                       1985+ZSVCOPSW DC    XL16'00'     140 R  Supervisor-Call Old PSW
0000000000000148  00000000 00000000
0000000000000150  00000000 00000000                                       1986+ZPGMOPSW DC    XL16'00'     150 R  Program Old PSW
0000000000000158  00000000 00000000
0000000000000160  00000000 00000000                                       1987+ZMCKOPSW DC    XL16'00'     160 R  Machine-Check Old PSW
0000000000000168  00000000 00000000
0000000000000170  00000000 00000000                                       1988+ZIOOPSW  DC    XL16'00'     170 R  Input-Output Old PSW
0000000000000178  00000000 00000000
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 07:32:45  Page    51

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000180  00000000 00000000                                       1989+UA8      DC    XL32'00'     180 R  z/Architecture unused area
0000000000000188  00000000 00000000
0000000000000190  00000000 00000000
0000000000000198  00000000 00000000
                                                                          1990+* z/Architecture NEW PROGRAM STATUS WORD AREAS
00000000000001A0  00000000 00000000                                       1991+ZRSTNPSW DC    XL16'00'     1A0 R  Restart New PSW
00000000000001A8  00000000 00000000
00000000000001B0  00000000 00000000                                       1992+ZEXTNPSW DC    XL16'00'     1B0 R  External New PSW
00000000000001B8  00000000 00000000
00000000000001C0  00000000 00000000                                       1993+ZSVCNPSW DC    XL16'00'     1C0 R  Supervisor-Call New PSW
00000000000001C8  00000000 00000000
00000000000001D0  00000000 00000000                                       1994+ZPGMNPSW DC    XL16'00'     1D0 R  Program New PSW
00000000000001D8  00000000 00000000
00000000000001E0  00000000 00000000                                       1995+ZMCKNPSW DC    XL16'00'     1E0 R  Machine-Check New PSW
00000000000001E8  00000000 00000000
00000000000001F0  00000000 00000000                                       1996+ZIONPSW  DC    XL16'00'     1F0 R  Input/Output New PSW
00000000000001F8  00000000 00000000
                                      00000000000011C0  0000000000000001  1997+ZSASDISP EQU   X'11C0'   Displacement to save areas defined by ASAZAREA macro
                                      0000000000000200  0000000000000001  1998+ASEND    EQU   *                   End of absolute/real assigned storage areas
                                      0000000000000200  0000000000000001  1999+ASLENGTH EQU   ASEND-ASBEGIN       Length of absolute/real assigned storage area
                                                                          2000+* LOGICAL ADDRESS USAGE
                                      000000000000031B  0000000000000001  2001+CPUID    EQU   *+X'11B'     31B L  System/370 CPU Identity used during DAS tracing
                                                                          2003+ASA      DSECT
0000000000000200                      0000000000000200  0000000000000200  2004+         ORG   ASA+X'200'
0000000000000200  00000000 00000000                                       2005+LODPARMS DS    CL64     Hercules IPL parameters
0000000000000208  00000000 00000000
0000000000000210  00000000 00000000
0000000000000218  00000000 00000000
0000000000000220  00000000 00000000
0000000000000228  00000000 00000000
0000000000000230  00000000 00000000
0000000000000238  00000000 00000000
                                                                          2006+* Addresses reflect location of LOD1 record when placed in its ASA area
                                                                          2007+* 000240-00028F.  Fields identified with an asterisk (*) indicate that
                                                                          2008+* the boot loader supplies the information during execution.
                                      0000000000000240  0000000000000001  2009+LOD1     EQU   *        Start of LOD1 record definition
0000000000000240  00000000                                                2010+LOD1REC  DS    CL4      000240 - Record ID 'LOD1' in EBCDIC

0000000000000244  00                                                      2012+LOD1DTYP DS    XL1      000244 - IPL Device Type related information
                                      0000000000000001  0000000000000001  2013+LOD1OBJ  EQU   B'00000001'   Booted program is in an object deck
                                      0000000000000002  0000000000000001  2014+LOD1LENF EQU   B'00000010'   Directed record header contains a length field
                                      0000000000000004  0000000000000001  2015+LOD1CARD EQU   B'00000100'   IPL device is a card reader
                                      0000000000000008  0000000000000001  2016+LOD1TAPE EQU   B'00001000'   IPL device is a tape drive
                                      0000000000000010  0000000000000001  2017+LOD1FBA  EQU   B'00010000'   IPL device is a FBA DASD drive
                                      0000000000000020  0000000000000001  2018+LOD1CKD  EQU   B'00100000'   IPL device is a CKD DASD drive
                                      0000000000000040  0000000000000001  2019+LOD1ECKD EQU   B'01000000'   IPL device is a ECKD DASD drive

0000000000000245  00                                                      2021+LOD1BLFL DS    XL1      000245 - Boot loader flags
                                      0000000000000080  0000000000000001  2022+LOD1BLCA EQU   B'10000000'   Change architecture before loading booted program
                                      0000000000000040  0000000000000001  2023+LOD1BL64 EQU   B'01000000'   Set 64-bit address mode before entering program
                                      0000000000000020  0000000000000001  2024+LOD1BLTR EQU   B'00100000'   Set trap new PSW's before entering program
                                      0000000000000010  0000000000000001  2025+LOD1BLF1 EQU   B'00010000'   Use Format-1 CCW's and 31 bit addressing mode
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 07:32:45  Page    52

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT


0000000000000246  0000                                                    2027+LOD1MDLN DS    HL2      000246 - Maximum directed record length in bytes

                                                                          2029+* After loading of a booted progrm, these two fields must match.
                                                                          2030+* Note: not used when loading an absolute object deck.
0000000000000248  00000000                                                2031+LOD1BPLN DS    FL4      000248 - Length of booted program content on medium
000000000000024C  00000000                                                2032+LOD1BPLD DS    FL4    * 00024C - Length of loaded boot program
0000000000000250  00000000                                                2033+LOD1ENTR DS    FL4      000250 - Booted program's entry address

0000000000000254  00                                                      2035+LOD1CPU  DS    XL1    * 000254 - Boot loader's CPU running architecture
                                      0000000000000000  0000000000000001  2036+LOD1CPNA EQU   X'00'         CPU architecture not available
                                      0000000000000001  0000000000000001  2037+LOD1360  EQU   X'01'         S/360 in BC mode
                                      0000000000000002  0000000000000001  2038+LOD1370B EQU   X'02'         S/370 in BC mode
                                      0000000000000003  0000000000000001  2039+LOD1370E EQU   X'03'         S/370 in EC mode
                                      0000000000000004  0000000000000001  2040+LOD1380  EQU   X'04'         S/380
                                      0000000000000005  0000000000000001  2041+LOD1370X EQU   X'05'         370-XA through ESA/390
                                      0000000000000006  0000000000000001  2042+LOE1E370 EQU   X'06'         ESA/370
                                      0000000000000007  0000000000000001  2043+LOD1E390 EQU   X'07'         ESA/390
                                      0000000000000008  0000000000000001  2044+LOD1S390 EQU   X'08'         ESA/390 on dual z/Arthitecture(R) system
                                      0000000000000009  0000000000000001  2045+LOD1ESAZ EQU   X'09'         z/Architecture on a dual z/Architecture system
                                      000000000000000A  0000000000000001  2046+LOD1Z    EQU   X'0A'         z/Architecture only system
                                      00000000000000FF  0000000000000001  2047+LOD1CPIN EQU   X'FF'         Invalid CPU operating environment

0000000000000255  00                                                      2049+LOD1IO   DS    XL1    * 000255 - Boot loader's I/O architecture and mode
                                      0000000000000000  0000000000000001  2050+LOD1IONA EQU   B'00000000'   I/O architecture and mode not available
                                      0000000000000010  0000000000000001  2051+LOD1IACH EQU   B'00010000'   I/O architecture is channel based
                                      0000000000000020  0000000000000001  2052+LOD1IACS EQU   B'00100000'   I/O architecture is channel subsystem based
                                      00000000000000C0  0000000000000001  2053+LOD1IAIN EQU   B'11000000'   I/O architecture is invalid
                                      0000000000000001  0000000000000001  2054+LOD1IM24 EQU   B'00000001'   I/O architecture uses CCW Format-0 CCW's
                                      0000000000000002  0000000000000001  2055+LOD1IM31 EQU   B'00000010'   I/O architecture uses CCW Format-0 CCW's
                                      0000000000000004  0000000000000001  2056+LOD1IM64 EQU   B'00000100'   I/O architecture uses CCW1's plus IDAW-2's.
                                      0000000000000008  0000000000000001  2057+LOD1IMIN EQU   B'00001000'   I/O architecture mode is invalid
                                      00000000000000C8  0000000000000001  2058+LOD1IOIN EQU   LOD1IAIN+LOD1IMIN  I/O architecture or mode invalid
                                      0000000000000011  0000000000000001  2059+LOD1I370 EQU   LOD1IACH+LOD1IM24  S/360 and S/370 I/O
                                      0000000000000022  0000000000000001  2060+LOD1IESA EQU   LOD1IACS+LOD1IM31  370-XA through ESA/390 I/O
                                      0000000000000024  0000000000000001  2061+LOD1IZ   EQU   LOD1IACS+LOD1IM64  z/Architecture I/O

0000000000000256  00                                                      2063+LOD1BLAM DS    XL1    * 000256 - Boot loader's addressing mode when booted
                                                                          2064+*                                program is entered
                                      0000000000000000  0000000000000001  2065+LOD1AMAN EQU   X'00'         Addressing mode not available
                                      0000000000000001  0000000000000001  2066+LOD1AM24 EQU   X'01'         Addressing mode is 24-bits
                                      0000000000000002  0000000000000001  2067+LOD1AM31 EQU   X'02'         Addressing mode is 31-bits
                                      0000000000000003  0000000000000001  2068+LOD1AM64 EQU   X'03'         Addressing mode is 64-bits
                                      00000000000000FF  0000000000000001  2069+LOD1AMIN EQU   X'FF'         Addressing mode is invalid

0000000000000257  00                                                      2071+LOD1BLSV DS    XL1    * 000257 - Boot loader's services
                                      0000000000000000  0000000000000001  2072+LOD1BLSN EQU   X'00'         Boot loader services are unavailable
                                                                          2073+* Meaning of these bits are defined by the boot loader. Not zero implies
                                                                          2074+* services are available and LOD1BLST is valid.  When zero, LOD1BLST is
                                                                          2075+* not available.

0000000000000258  00000000                                                2077+LOD1FSEC DS    FL4      000258 - Directed record FBA DASD starting sector
ASMA Ver. 0.2.0  BOOT LOADER - DSECTS                                                               08 Sep 2020 07:32:45  Page    53

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

000000000000025C  0000                                                    2078+LOD1CCYL DS    HL2      00025C - Directed record CKD DASD starting cylinder
000000000000025E  0000                                                    2079+LOD1CTRK DS    HL2      00025E - Directed record CKD DASD starting track
0000000000000260  00                                                      2080+LOD1CREC DS    XL1      000260 - Directed record CKD DASD starting rec
0000000000000261  00                                                      2081+LOD1CRTK DS    XL1      000261 - Number of directed records per track
0000000000000262  0000                                                    2082+LOD1CMCY DS    HL2      000262 - Maximum CKD DASD cylinder number
0000000000000264  0000                                                    2083+LOD1CMTR DS    HL2      000264 - Maximum CKD DASD track number
0000000000000266  0000                                                    2084+LOD1DEVN DS    HL2    * 000266 - Device Number of IPL device from CS
0000000000000268  00000000                                                2085+LOC1DEVI DS    FL4    * 000268 - I/O command device ID (CUU / subchannel num)
000000000000026C  00000000                                                2086+LOD1IOA  DS    AL4(0)   00026C - Boot loader I/O area starting address
0000000000000270  00000000                                                2087+LOD1BLST DS    AL4(0) * 000270 - Boot loader services address.
0000000000000274  00                                                      2088+LOD1ARCH DS    XL1    * 000274 - Running architecture level at boot loader entry
0000000000000275  000000                                                  2089+LOD1RSV2 DS    XL3      000275 - RESERVED NOT IN USE
0000000000000278  00000000                                                2090+LOD1RTN  DS    A(0)   * 000278 - Address returning to service caller

000000000000027C  00000000 00000000                                       2092+LOD1RSRV DS    5FL4     00027C - RESERVED NOT IN USE
0000000000000284  00000000 00000000
000000000000028C  00000000
                                      0000000000000050  0000000000000001  2093+LOD1LEN  EQU   *-LOD1   Length of LOD1 record
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 07:32:45  Page    54

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                          2095          END
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 07:32:45  Page    55

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

AARI0012            H    00051A       2   316   313
AARX0012            H    00051E       2   318   311   315
AMERROR             I    0006D8       4   532
AP240011            3    000478       8   263   255
AP310011            3    000470       8   262   254
AP640011            U    000460      16   261   253
APDN0011            H    0004EA       2   301   264   265   273   288   291   297
APSP0011            F    0004A8       8   268   252   304
APSS0011            F    0004A0       8   267   251   303
APSZ0011            F    000490       8   266   250   302
ARCHBAD             I    0006E0       4   534   322   323   333
ARCHSOK             H    000552       2   338   320
ASA                 4    000000     656  1844  2004   221   607   706   751   867   922  1093  1324
ASAREGN             2    000000     512   176
ASASECT             J    000000     512   176   179   186   196   198
ASBEGIN             U    000000       1  1845  1850  1892  1928  1937  1955  1962  1968  1972  1976  1982  1999
ASEND               U    000200       1  1998  1999
ASLENGTH            U    000200       1  1999
BADDEVT             I    0006B8       4   524   235
BCEXTCOD            H    00001A       2  1862
BCIOCOD             H    00003A       2  1870
BCMCKCOD            H    000032       2  1868
BCPGMCOD            H    00002A       2  1866
BCSVCCOD            H    000022       2  1864
BLS                 H    000738       2   606   243   612
BLS3270             U    000078       1  1555
BLSACT              X    00000B       1  1576  1205  1225  1356
BLSATTN             U    000080       1  1570  1203
BLSBUSY             U    000080       1  1558  1155  1245  1250  1254  1259
BLSCALL             H    000772       2   630   626
BLSCARD             U    000098       1  1551
BLSCH               X    000009       1  1572  1217
BLSCKD              U    000089       1  1549
BLSCON              U    000070       1  1554
BLSDEV              H    000000       2  1537   373   786   884   994
BLSERR              X    00000C       1  1580   792   815   820  1008  1031  1036  1219
BLSFBA              U    000008       1  1548
BLSHDW              F    000004       4  1566   787   995  1139
BLSIOEL             U    000020       1  1587   829  1386  1394
BLSIOT              4    000000      32  1536  1587   369   773   882   949   971  1138  1173  1216  1240  1289  1340
BLSMONE             H    000786       2   642   627
BLSNUM              U    000006       1   668   242
BLSPEOF             U    000080       1  1540   813  1029  1236
BLSPR               U    000028       1  1553
BLSPROG             F    00001C       4  1586
BLSPUN              U    000020       1  1552
BLSR                H    000778       2   634   245   619   628
BLSRDSN             U    000000       1  1577  1225
BLSREAD             U    000004       1  1578  1205  1356
BLSRSV              U    0000F8       1  1545
BLSRSV2             X    00000D       3  1582
BLSSCLS             U    000038       1  1542
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 07:32:45  Page    56

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

BLSSNS              X    00000A       1  1574
BLSSNSP             U    000001       1  1564
BLSSW               F    000010       4  1584  1187  1188
BLSTAPE             U    000090       1  1550
BLSTAT              U    000040       1  1561
BLSTATO             U    000020       1  1562  1206  1227  1341  1349
BLSTATS             U    000002       1  1563  1189  1196
BLSTATUS            X    000003       1  1557  1155  1189  1196  1206  1227  1245  1250  1254  1259  1341  1349
BLSTYP              X    000002       1  1539   788   813   818   949   996  1029  1034  1150  1201  1236
BLSUE               U    000001       1  1571
BLSUNCH             X    000008       2  1568  1188
BLSUNIT             X    000008       1  1569  1203  1223  1238  1290
BLSUNSOL            U    000040       1  1541   818  1034  1150  1201
CALLSRV             H    000758       2   621   617
CAW                 F    000048       4  1874
CAWADDR             R    000049       3  1877
CAWKEY              X    000048       1  1875
CAWSUSP             U    000008       1  1876
CC                  U    000040       1   212   546   547
CCW1                4    000000       8  1745  1750
CCW1ADDR            A    000004       4  1749
CCW1CNT             H    000002       2  1748
CCW1CODE            X    000000       1  1746
CCW1FLGS            X    000001       1  1747
CCW1L               U    000008       1  1750
CCWCC               U    000040       1  1754
CCWCD               U    000080       1  1753
CCWIDA              U    000004       1  1758
CCWPCI              U    000008       1  1757
CCWSKIP             U    000010       1  1756
CCWSLI              U    000020       1  1755
CCWSUSP             U    000002       1  1759
CHANID              F    0000A8       4  1929
CHSSBLK             F    0003F0       4  1438   777
CKSIZE              I    000644       6   462   455
CPU0014             H    00054C       2   335   330   331   334
CPUID               U    00031B       1  2001
CSBLOCKS            A    000C64       4  1408   778   972  1179
CSSAVED             H    000824       2   783   781
CSSIRB              U    000002       1  1405  1185
CSSSCHIB            U    000001       1  1404   784   973
CSSTRUCT            X    000C61       1  1403   784   973  1185
CSW                 F    000040       8  1873
CUMERROR            I    0006D0       4   530   463
DEFN_EXT            U    000063       1   207   546
DESTRT              I    0006C8       4   528   448
DEVBUSY             I    0006A0       4   516
DEVCSW              I    0006A8       4   518   433
DEVNOAVL            I    000698       4   514   434
DEVUNKN             I    0006B0       4   520
DIE                 3    000730       8   581   514   515   516   517   518   519   520   521   524   525   526   527   528   529
                                                530   531   532   533   534   535
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 07:32:45  Page    57

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

DMEMORY             4    000000    1488  1419   347   423   709   754   768   777   870   925  1096  1327
DONE                3    000728       8   579
ENADADD             H    000934       2   960   945
ENADEV              U    000003       1   660   919
ENADGOOD            H    000980       2   993   984
ENADNOAV            H    000978       2   989   979  1003
ENADOK              H    000928       2   955   950
ENADRTN             I    0009CE       6  1050   953   958   967   991
ENADSAVE            F    000240       8  1432   925
ENADSIWB            H    0009DC       2  1057   974
ENADSSPB            H    0009C6       2  1044
ENADTEST            H    00094E       2   969   965
ENAQIOT             Y    0009E0       2  1058   939   941   948
ENASRCH             H    00095E       2   976   988
ENDLSEC             U    000714       4   561   414
EOBL                D    000C68       8  1412   347   423   709   754   768   777   870   925  1096  1327  1379
EOBLA               A    000C48       4  1379
ERRU0046            I    000848       4   818   814
ERRU0054            I    0009BA       4  1034  1030
ERRX0046            H    000854       2   826   819
ERRX0054            H    0009C6       2  1042  1035
EXCP                U    000004       1   663   502  1090
EXCP00RC            H    000B4C       2  1244  1213  1237
EXCP04              Y    000688       2   502   427
EXCP04RC            H    000B58       2  1249  1239
EXCP08RC            H    000B64       2  1253  1151  1218  1221  1228
EXCP12RC            H    000B70       2  1258  1143  1146
EXCP16RC            H    000B7C       2  1263  1113  1115  1117  1119  1121  1123  1135
EXCPANAL            H    000AD2       2  1195
EXCPCONT            U    000BA0      16  1282  1161
EXCPDERR            I    000BC6       4  1290  1220  1234
EXCPDONE            U    000A8E       1  1163  1282
EXCPDOWT            H    000A84       2  1160  1133  1142  1152  1209  1235
EXCPIRB             H    000ABE       2  1184  1181
EXCPONE             H    000BC4       2  1285
EXCPORB             X    00068C      12   505   368
EXCPRCAL            I    000B80       6  1274  1247  1252  1256  1261
EXCPSAVE            F    0002D0       8  1434  1096
EXCPSOL             H    000B04       2  1215  1202  1204
EXCPSOLE            H    000B30       2  1230  1224
EXCPSPR             H    000AA8       2  1175  1170
EXCPSRS             H    000AAC       2  1177  1172
EXCPTRAP            U    000BB0      16  1283  1164
EXCPWAIT            U    000B90      16  1281  1162
EXCPZERO            F    000BC0       4  1284  1134
EXTCPUAD            H    000084       2  1894
EXTENT              X    000708       4   557   562   546
EXTENTL             U    000010       1   562   546
EXTICODE            H    000086       2  1895
EXTIPARM            F    000080       4  1893
EXTNPSW             F    000058       8  1883
EXTOPSW             F    000018       8  1855  1861
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 07:32:45  Page    58

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

FBACCW1             W    0006F0       8   546   511
FBACCW2             W    0006F8       8   547
FBACCW3             W    000700       8   548   409   418   419
FRSTLSEC            U    000710       4   559
FRSTPSEC            U    00070C       4   558   420   457   458
HWM                 U    0005D0       1  1450   423
IMAGE               1    000000    2664     0
INIT01              Y    000678       2   490   358   367
INTMASK             X    000880       4   847   775
INTPRI              U    000001       1  1399  1176
INTSEC              U    000002       1  1400  1171
INTSRC              X    000C60       1  1398  1171  1176
IOELADDR            F    0000AC       4  1930
IOIA0044            H    0007F4       2   767
IOICODE             H    0000BA       2  1935   398
IOIID               F    0000C0       4  1940
IOINIT              U    000001       1   654   490   748
IOINRTN             I    000870       6   839   834
IOINRTN0            I    00086C       4   835   832
IOINRTN4            I    000864       4   833
IOINSAVE            F    000120       8  1428   754
IOIPARM             F    0000BC       4  1939  1168
IONPSW              F    000078       8  1887
IOOPSW              F    000038       8  1859  1869
IOSSID              F    0000B8       4  1938   779  1178
IOTBL               F    0004F0       4  1446   768
IOTBLBA             A    000C54       4  1393   769   879  1112  1346
IOTBLE              U    0005D0       1  1448  1450
IOTBLEA             A    000C5C       4  1395   831   881   961  1047  1114  1348
IOTBLI              A    000C58       4  1394   880   963  1347
IOTDEVS             U    000008       1  1447  1386
IOTMAX              A    000C50       4  1386   770   772   964
IPLCCW1             F    000008       8  1847
IPLCCW2             F    000010       8  1848
IPLDEV              X    0006EC       2   541   398
IPLDEVTA            A    000C4C       4  1381
IPLFND              I    0005AA       6   398   380
IPLPSW              F    000000       8  1846
IRB                 4    000000      96  1768  1772  1774  1186
IRBECW              X    000020      32  1771
IRBEMW              X    000040      32  1773
IRBESW              X    00000C      20  1770
IRBL                U    000040       1  1772
IRBSCSW             X    000000      12  1769  1187
IRBXL               U    000060       1  1774
IS240011            H    0004D6       2   294   263
IS310011            H    0004B8       2   275   262
IS640011            H    0004B0       2   270   261
LCHANLOG            F    0000B0       4  1931
LOADER              2    000400    2152   218
LOC1DEVI            U    000268       4  2085
LOCATE              X    000718       1   566   570   547
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 07:32:45  Page    59

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

LOCATEL             U    000008       1   570   547
LOCSECS             U    00071A       2   568   411
LOC_DATA            U    000043       1   208   547
LOD1                U    000240       1  2009  2093
LOD1360             U    000001       1  2037
LOD1370B            U    000002       1  2038
LOD1370E            U    000003       1  2039
LOD1370X            U    000005       1  2041
LOD1380             U    000004       1  2040
LOD1AM24            U    000001       1  2066
LOD1AM31            U    000002       1  2067
LOD1AM64            U    000003       1  2068
LOD1AMAN            U    000000       1  2065
LOD1AMIN            U    0000FF       1  2069
LOD1ARCH            X    000274       1  2088   305   310   312   336
LOD1BL64            U    000040       1  2023
LOD1BLAM            X    000256       1  2063   240
LOD1BLCA            U    000080       1  2022
LOD1BLF1            U    000010       1  2025
LOD1BLFL            X    000245       1  2021
LOD1BLSN            U    000000       1  2072
LOD1BLST            R    000270       4  2087   244   350   359   377   428   942
LOD1BLSV            X    000257       1  2071   242   616
LOD1BLTR            U    000020       1  2024
LOD1BPLD            U    00024C       4  2032   450   451   462
LOD1BPLN            U    000248       4  2031   462
LOD1CARD            U    000004       1  2015
LOD1CCYL            U    00025C       2  2078
LOD1CKD             U    000020       1  2018
LOD1CMCY            U    000262       2  2082
LOD1CMTR            U    000264       2  2083
LOD1CPIN            U    0000FF       1  2047
LOD1CPNA            U    000000       1  2036
LOD1CPU             X    000254       1  2035   241
LOD1CREC            X    000260       1  2080
LOD1CRTK            X    000261       1  2081
LOD1CTRK            U    00025E       2  2079
LOD1DEVN            U    000266       2  2084
LOD1DTYP            X    000244       1  2012   234
LOD1E390            U    000007       1  2043
LOD1ECKD            U    000040       1  2019
LOD1ENTR            U    000250       4  2033   468   471   473
LOD1ESAZ            U    000009       1  2045
LOD1FBA             U    000010       1  2017   234
LOD1FSEC            U    000258       4  2077   420
LOD1I370            U    000011       1  2059
LOD1IACH            U    000010       1  2051  2059
LOD1IACS            U    000020       1  2052  2060  2061
LOD1IAIN            U    0000C0       1  2053  2058
LOD1IESA            U    000022       1  2060
LOD1IM24            U    000001       1  2054  2059
LOD1IM31            U    000002       1  2055  2060
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 07:32:45  Page    60

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

LOD1IM64            U    000004       1  2056  2061
LOD1IMIN            U    000008       1  2057  2058
LOD1IO              X    000255       1  2049   239
LOD1IOA             R    00026C       4  2086   416
LOD1IOIN            U    0000C8       1  2058
LOD1IONA            U    000000       1  2050
LOD1IZ              U    000024       1  2061
LOD1LEN             U    000050       1  2093
LOD1LENF            U    000002       1  2014   234
LOD1MDLN            U    000246       2  2027   407
LOD1OBJ             U    000001       1  2013
LOD1REC             C    000240       4  2010
LOD1RSRV            U    00027C       4  2092
LOD1RSV2            X    000275       3  2089
LOD1RTN             A    000278       4  2090   246   725   841   897  1052  1276  1368
LOD1S390            U    000008       1  2044
LOD1TAPE            U    000008       1  2016
LOD1Z               U    00000A       1  2046
LODPARMS            C    000200      64  2005   222
LODSECT             J    000400    2152   218
LODSTART            I    000400       4   222   197
LOE1E370            U    000006       1  2042
MCKLOG              F    000100       4  1963
MCKNPSW             F    000070       8  1886
MCKOPSW             F    000030       8  1858  1867
MEASUREB            X    0000B9       1  1934
MKARCHMD            X    0000A3       1  1922
MKARS               F    000120       4  1961
MKCLKCMP            F    0000E0       8  1947
MKCPUTIM            F    0000D8       8  1946
MKCRS               F    0001C0       4  1966
MKDMGCOD            F    0000F4       4  1950
MKFAILA             F    0000F8       4  1952
MKFPRS              D    000160       8  1964
MKICODE             F    0000E8       4  1948
MKLOGOUT            F    000100       4  1954
MKMODEL             F    0000FC       4  1953
MKXSAA              F    0000D4       4  1945
MONCLS              H    000094       2  1910
MONCODE             F    00009C       4  1917
MONNUMBR            X    000095       1  1912
MOVEREC             H    00060E       2   438   431
MPGACCID            X    0000A2       1  1920
NKGRS               F    000180       4  1965
NOOP                U    000000       1   651   486   703
NOOPSAVE            F    000090       8  1426   709
NOP                 U    000003       1   206
ONE                 F    0006E8       4   538
ORB                 4    000000      32  1627  1657  1665
ORB1_0              X    000004       1  1630
ORB1_8              X    000005       1  1637
ORBA                U    000010       1  1641
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 07:32:45  Page    61

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

ORBB                U    000004       1  1643
ORBC                U    000004       1  1633
ORBCCW              A    000008       4  1655
ORBCSS              X    00000C       1  1659
ORBCU               X    00000E       1  1662
ORBD                U    000040       1  1650
ORBF                U    000080       1  1638
ORBH                U    000002       1  1644
ORBI                U    000020       1  1640
ORBKEYM             U    0000F0       1  1631
ORBL                U    000080       1  1648
ORBLEN              U    00000C       1  1657
ORBLPM              X    000006       1  1646
ORBM                U    000002       1  1634
ORBP                U    000040       1  1639
ORBPARM             F    000000       4  1628
ORBPGM              X    00000E       1  1661
ORBRSV25            U    00007E       1  1652
ORBRSV26            U    00003E       1  1651
ORBRSV3             U    00007F       1  1649
ORBRSV4             U    000080       1  1656
ORBRSV5             X    00000D       1  1660
ORBRSV6             X    00000F       1  1663
ORBRSV7             X    000010      16  1664
ORBS                U    000008       1  1632
ORBT                U    000001       1  1645
ORBU                U    000008       1  1642
ORBX                U    000001       1  1653
ORBXLEN             U    000020       1  1665
ORBY                U    000001       1  1635
ORRB1_24            X    000007       1  1647
OVRWRITE            I    0006C0       4   526   441
PCFETO              A    0000C4       4  1941
PDEVENDM            U    00000C       1  1295  1129
PDEVENDS            X    000BCA       1  1294  1128  1129  1233
PENDSAVE            F    000360       8  1436  1327
PERACCID            X    0000A1       1  1919
PERADDR             F    000098       4  1916
PERCODE             X    000096       1  1913
PERCODMK            U    0000F0       1  1914
PGMACCID            X    0000A0       1  1918
PGMDXC              F    000090       4  1908
PGMICODE            H    00008E       2  1907
PGMIID              F    00008C       4  1903
PGMIILC             X    00008D       1  1905
PGMIILCM            U    00000C       1  1906
PGMNPSW             F    000068       8  1885
PGMOPSW             F    000028       8  1857  1865
PGMRS               3    000720       8   574   230
PGMTRX              F    000090       4  1909
PMCW1_0             X    000004       1  1787   999  1000
PMCW1_8             X    000005       1  1790   997
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 07:32:45  Page    62

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

PMCWB               U    000004       1  1822
PMCWCHP0            X    000010       1  1811
PMCWCHP1            X    000011       1  1812
PMCWCHP2            X    000012       1  1813
PMCWCHP3            X    000013       1  1814
PMCWCHP4            X    000014       1  1815
PMCWCHP5            X    000015       1  1816
PMCWCHP6            X    000016       1  1817
PMCWCHP7            X    000017       1  1818
PMCWDNUM            H    000006       2  1802   786   983   994
PMCWE               U    000080       1  1791   997
PMCWEXC             X    00001B       1  1821
PMCWIP              F    000000       4  1786   998
PMCWISCM            U    000038       1  1788  1000
PMCWLM              U    000060       1  1792
PMCWLMG             U    000020       1  1793
PMCWLML             U    000040       1  1794
PMCWLPM             X    000008       1  1804
PMCWLPUM            X    00000A       1  1806
PMCWM               U    000004       1  1798
PMCWMBI             H    00000C       2  1808
PMCWMM              U    000018       1  1795
PMCWMMC             U    000008       1  1797
PMCWMME             U    000010       1  1796
PMCWPAM             X    00000F       1  1810
PMCWPIM             X    00000B       1  1807
PMCWPNOM            X    000009       1  1805
PMCWPOM             X    00000E       1  1809
PMCWRES1            X    000018       4  1819
PMCWRES2            X    000018       3  1820
PMCWS               U    000001       1  1824
PMCWT               U    000002       1  1799
PMCWV               U    000001       1  1800
PMCWX               U    000002       1  1823
PNDDEV              I    000C34       4  1362  1359
PNDING              U    000005       1   666  1321
PNDINGD             H    000C20       2  1355  1342  1350
PNDLOOP             I    000C0E       4  1349  1351
PNDRTN              I    000C38       6  1366  1343  1353
PNDSNS              I    000C30       4  1360  1357
PNDSRCH             H    000BFC       2  1345  1339
QIOFOUND            H    0008CA       2   890   885
QIORETRN            I    0008CE       6   895
QIOT                U    000002       1   657   494   864  1058
QIOTLOOP            H    0008B2       2   883   886
QIOTSAVE            F    0001B0       8  1430   870
QUERY02             Y    000680       2   494   373   376
READ                U    000042       1   209   548
READLOOP            H    0005E8       2   426   459
RSTNPSW             F    000000       8  1851   230
RSTOPSW             F    000008       8  1852
SAVEAREA            F    000000       8  1424   347
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 07:32:45  Page    63

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

SAVEG               4    000000     144  1594  1613   609   636   708   712   716   722   753   757   761   838   869   873   877
                                                894   924   928   932  1049  1095  1099  1103  1273  1326  1330  1334  1365
SAVEGBCK            A    000008       8  1596   713   723   758   839   874   895   929  1050  1100  1274  1331  1366
SAVEGFWD            A    000010       8  1597   710   755   871   926  1097  1328
SAVEGLEN            U    000090       1  1613
SAVEGR0             F    000028       8  1600
SAVEGR1             F    000030       8  1601
SAVEGR10            F    000078       8  1610
SAVEGR11            F    000080       8  1611
SAVEGR12            F    000088       8  1612
SAVEGR14            A    000018       8  1598   610   638
SAVEGR15            A    000020       8  1599   637
SAVEGR2             F    000038       8  1602
SAVEGR3             F    000040       8  1603
SAVEGR4             F    000048       8  1604
SAVEGR5             F    000050       8  1605
SAVEGR6             F    000058       8  1606
SAVEGR7             F    000060       8  1607
SAVEGR8             F    000068       8  1608
SAVEGR9             F    000070       8  1609
SAVEGRSV            F    000000       8  1595
SCANOUT             X    000080       1  1889  1890
SCANOUTL            U    000000       1  1890
SCHIB               4    000000      52  1783  1830   785   982
SCHIBL              U    000034       1  1830
SCHMBA              A    000028       8  1828
SCHMDA1             X    000030       4  1829
SCHMDA3             X    000028      12  1827
SCHPMCW             X    000000      28  1785
SCHSCSW             X    00001C      12  1826
SCSW                4    000000      12  1674  1736  1188
SCSW0CC             U    000004       1  1690
SCSW1               X    000002       1  1694
SCSW2               X    000003       1  1703
SCSWACP             U    000001       1  1702
SCSWADA             U    000040       1  1705
SCSWAHP             U    000002       1  1701
SCSWALKC            U    000010       1  1688
SCSWARP             U    000008       1  1699
SCSWASA             U    000080       1  1704
SCSWASP             U    000004       1  1700
SCSWASUS            U    000020       1  1706
SCSWATTN            U    000080       1  1716
SCSWBUSY            U    000010       1  1719
SCSWCCTL            U    000004       1  1731
SCSWCCW             A    000004       4  1713
SCSWCCWF            U    000080       1  1685
SCSWCCWP            U    000040       1  1686
SCSWCDAT            U    000008       1  1730
SCSWCE              U    000008       1  1720
SCSWCHNG            U    000001       1  1733
SCSWCNT             H    00000A       2  1735
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 07:32:45  Page    64

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

SCSWCS              X    000009       1  1725
SCSWCTLS            X    000001       1  1684
SCSWCUE             U    000020       1  1718
SCSWDCC0            U    000000       1  1680
SCSWDCC1            U    000001       1  1681
SCSWDCC3            U    000003       1  1682
SCSWDCCM            U    000003       1  1679
SCSWDE              U    000004       1  1721
SCSWECWC            U    000002       1  1691
SCSWESWF            U    000004       1  1678
SCSWFC              U    000010       1  1698
SCSWFH              U    000020       1  1697
SCSWFLAG            X    000000       1  1675
SCSWFM              U    000070       1  1695
SCSWFS              U    000040       1  1696
SCSWICTL            U    000002       1  1732
SCSWIL              U    000040       1  1727
SCSWISIC            U    000020       1  1687
SCSWKEYM            U    0000F0       1  1676
SCSWL               U    00000C       1  1736
SCSWPCI             U    000080       1  1726
SCSWPNOP            U    000001       1  1692
SCSWPRGM            U    000020       1  1728
SCSWPROT            U    000010       1  1729
SCSWSAS             U    000010       1  1707
SCSWSINT            U    000008       1  1708
SCSWSM              U    000040       1  1717
SCSWSPEN            U    000001       1  1711
SCSWSPRI            U    000004       1  1709
SCSWSSEC            U    000002       1  1710
SCSWSSIC            U    000008       1  1689
SCSWSUSC            U    000008       1  1677
SCSWUC              U    000002       1  1722  1223
SCSWUS              X    000008       1  1715  1188
SCSWUX              U    000001       1  1723  1238
SERVENAD            H    0008E0       2   920   659   921
SERVEXCP            H    0009EC       2  1091   662  1092
SERVIOIN            H    0007DC       2   749   653   750
SERVNOOP            H    0007A4       2   704   650   705
SERVPEND            H    000BD0       2  1322   665  1323
SERVQIOT            H    000888       2   865   656   866
SERVTBL             A    000788       4   650   623
SETAM31             I    00066C       2   478   472
SETAM64             I    000670       2   481   474
SETZ                H    000532       2   325   321
SPB                 4    000000      16  1456   367   608   707   752   765   868   923   935  1094  1106  1325
SPBCCW0             U    000001       1  1468
SPBCCW1             U    000002       1  1469
SPBCCWF             X    000002       1  1467
SPBCHST             X    000007       1  1488
SPBDCLS             X    000004       1  1481   949   996   999
SPBDEVST            X    000006       1  1487
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 07:32:45  Page    65

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

SPBE                U    000004       1  1459  1475  1480  1482  1484  1489  1529
SPBEATN             U    000080       1  1508
SPBEBY1             U    000080       1  1498  1508  1132
SPBECTL             X    000002       1  1497  1128  1132
SPBENRM             U    00000C       1  1507
SPBEORB             F    000004       4  1514  1515  1140
SPBEORB1            X    000009       1  1520  1120
SPBEORB2            X    00000B       1  1522  1122
SPBEORBC            X    00000C       4  1523  1134
SPBEORBK            X    000008       1  1517  1118
SPBEORBL            X    00000A       1  1521
SPBEORBM            U    0000F0       1  1518
SPBEORBP            X    00000D       3  1525
SPBEORBR            U    00000F       1  1519  1118
SPBEORBT            F    000004       4  1516  1112  1114  1116  1137  1169
SPBEWCO             U    000008       1  1504
SPBEWDC             U    00000C       1  1503  1507   502
SPBEWDO             U    000004       1  1505
SPBEWNO             U    000000       1  1506
SPBEWTM             U    00000C       1  1501
SPBID               H    000000       2  1457   615
SPBIOTA             F    000004       4  1462   367   827   891   948   956  1045  1338  1362
SPBPEND             X    000003       1  1510  1207  1226
SPBPENDG            U    000001       1  1511  1207  1226
SPBPENDN            U    000000       1  1512
SPBSI               H    000002       2  1458  1466  1496   717   719   776   788   884   939   983
SSARCHMD            X    0000A3       1  1921
SSARS               F    000120       4  1977
SSCLKCMP            F    0000E0       8  1971
SSCPUTIM            F    0000D8       8  1970
SSCRS               F    0001C0       4  1980
SSFPRS              D    000160       8  1978
SSGRS               F    000180       4  1979
SSMODEL             F    00010C       4  1975
SSPREFIX            F    000108       4  1974
SSPSW               F    000100       8  1973
SSXSAA              A    0000D4       4  1969
STBC0011            3    000488       8   265   299
STFLDATA            F    0000C8       4  1942
SVCICODE            H    00008A       2  1901
SVCIID              F    000088       4  1897
SVCIILC             X    000089       1  1899
SVCIILCM            U    00000C       1  1900
SVCNPSW             F    000060       8  1884
SVCOPSW             F    000020       8  1856  1863
TEST00              Y    000674       2   486   349
TIMER               F    000050       4  1880
TTDES               F    000054       4  1881
UA0                 F    000010       8  1853
UA1                 F    00004C       4  1878
UA2                 F    0000A4       4  1923
UA3                 F    0000B4       4  1932
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 07:32:45  Page    66

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

UA4                 X    0000B8       1  1933
UA5                 X    0000CC       8  1943
UA6                 X    0000EC       8  1949
UA7                 F    000118       8  1960
UA8                 X    000180      32  1989
WH310011            3    000480       8   264   277
ZBRKADDR            A    000110       8  1959
ZEMONCNT            F    00010C       4  1958
ZEMONCTR            A    000100       8  1956
ZEMONSIZ            F    000108       4  1957
ZEXTNPSW            X    0001B0      16  1992
ZEXTOPSW            X    000130      16  1984
ZIONPSW             X    0001F0      16  1996  1161  1164
ZIOOPSW             X    000170      16  1988
ZMCKNPSW            X    0001E0      16  1995
ZMCKOPSW            X    000160      16  1987
ZMKFAILA            F    0000F8       8  1951
ZMONCODE            F    0000B0       8  1926
ZPGMNPSW            X    0001D0      16  1994
ZPGMOPSW            X    000150      16  1986
ZPGMTRX             F    0000A8       8  1925
ZRSTNPSW            X    0001A0      16  1991
ZRSTOPSW            X    000120      16  1983
ZSASDISP            U    0011C0       1  1997
ZSVCNPSW            X    0001C0      16  1993
ZSVCOPSW            X    000140      16  1985
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 07:32:45  Page    67

 MACRO     DEFN  REFERENCES

AARCH       308
APROB       249
ARCHIND      85
ARCHLVL      84
ASAIPL      194
ASALOAD     175
ASAREA     1843
BLASALD     174
BLCOMMON   1377
BLINIT      220
BLMEM      1415
BLSASA     1842
BLSCALL     348    357    375    425    940
BLSERR      791   1007
BLSIODS    1619
BLSIOT     1532
BLSORB      503
BLSPB      1452
BLSTABLE    648
BOOTNTR     467
DSECTS     1625   1672   1743   1766   1781
DWAIT       573    578    580
DWAITEND    577
IOFMT      1626   1673   1744   1767   1782
IOTBL      1444
LOADHL      406    442
LOD1       2002
LTEST       624   1337
ORB         504
SAVEAREA   1423   1425   1427   1429   1431   1433   1435   1593
SERVENAD    916
SERVEND     667
SERVEXCP   1087
SERVICE     701    746    862    917   1088   1319
SERVID      649    652    655    658    661    664
SERVIOIN    745
SERVNOOP    700
SERVPEND   1318
SERVQIOT    861
SERVRTN     721    837    893   1048   1272   1364
SERVS       605
SIGCPU      329
STCCWADR    417
STCCWCNT    408
STLOD1      238
TRAP128     187
TRAP64      177    180
VMOVE       445
ZARCH       326
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 07:32:45  Page    68

   DESC     SYMBOL  SIZE    POS      ADDR

Entry: 0

Image      IMAGE    2664  000-A67  000-A67
  Region   ASAREGN   512  000-1FF  000-1FF
    CSECT  ASASECT   512  000-1FF  000-1FF
  Region   LOADER   2152  200-A67  400-C67
    CSECT  LODSECT  2152  200-A67  400-C67


      ADDR         POS                                OBJECT CONTENT                                         CHARACTER CONTENT


Region: ASAREGN

0000000000000000   000   00080000 00000400 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
0000000000000020   020   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
0000000000000040   040   00000000 00000000 00000000 00000000  00000000 00000000 000A0000 00000018   |................ ................|
0000000000000060   060   000A0000 00000020 000A0000 00000028  000A0000 00000030 000A0000 00000038   |................ ................|
0000000000000080   080   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
00000000000000A0   0A0   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
00000000000000C0   0C0   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
00000000000000E0   0E0   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
0000000000000100   100   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
0000000000000120   120   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
0000000000000140   140   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
0000000000000160   160   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
0000000000000180   180   00000000 00000000 00000000 00000000  00000000 00000000 00000000 00000000   |................ ................|
00000000000001A0   1A0   00020000 00000000 00000000 00000120  00020000 00000000 00000000 00000130   |................ ................|
00000000000001C0   1C0   00020000 00000000 00000000 00000140  00020000 00000000 00000000 00000150   |...............  ...............&|
00000000000001E0   1E0   00020000 00000000 00000000 00000160  00020000 00000000 00000000 00000170   |...............- ................|

Region: LOADER

0000000000000400   200   900F0200 0DC0D207 0000C31A 95120244  4770C2B2 92220255 92030256 92090254   |......K...C.n... ..B.k...k...k...|
0000000000000420   220   92060257 4100C332 50000270 4100C372  50000278 D20FC08A 01D0D207 C09A0060   |k.....C.&.....C. &...K.....K....-|
0000000000000440   240   D207C0A2 0068D20F 01D0C05A D2070060  C06AD207 0068C072 1B660A00 00000000   |K..s..K....!K..- .¦K.............|
0000000000000460   260   00000001 80000000 00000000 000004B0  00080000 800004B8 00080000 000004D6   |................ ...............O|
0000000000000480   280   00080000 800004EA 00000000 000004EA  00000000 00000000 00000000 00000000   |................ ................|
00000000000004A0   2A0   00000000 00000000 00000000 00000000  47690009 47F0C0E4 D2070068 C07A4160   |................ .....0.UK....:.-|
00000000000004C0   2C0   0007B2B1 00009140 00C84780 C0E44160  000847F0 C0E44160 00039108 00294710   |......j .H...U.- ...0.U.-..j.....|
00000000000004E0   2E0   C0E44160 00028200 C082D20F 01D0C08A  D2070060 C09AD207 0068C0A2 42600274   |.U.-..b..bK..... K..-..K....s.-..|
0000000000000500   300   1F669509 02744780 C1189508 02744770  C1144160 000447F0 C1184160 000C47F6   |..n.....A.n..... A..-...0A..-...6|
0000000000000520   320   C11C47F0 C14C47F0 C12C47F0 C2DA47F0  C2DA1B55 41500001 B212C146 4860C146   |A..0A<.0A..0B..0 B....&....A..-A.|
0000000000000540   340   AE460012 4770C2DA 47F0C148 00009209  0274010D 41D0C862 4110C26E E3F00270   |......B..0A...k. ......H...B>T0..|
0000000000000560   360   00170DEF B90200FF A7840003 00004110  C272E3F0 02700017 0DEFB902 00FFA784   |........xd...... B.T0..........xd|
0000000000000580   380   00030000 5860C276 5060C286 D201C27C  60004110 C27AE3F0 02700017 0DEF47FF   |.....-B.&-BfK.B@ -...B:T0........|
00000000000005A0   3A0   C19CA7F4 00040000 0004D201 C2E600BA  1B221892 1B62BF63 02464060 C2FC8860   |A.x4......K.BW.. ...k...... -B.h-|
00000000000005C0   3C0   00094060 C3141856 06605060 C30E5840  026C5040 C2FE947F C2FED203 C3060258   |.. -C....-&-C..  .%& B.m"B.K.C...|
00000000000005E0   3E0   41840006 4130CE32 4110C282 E3F00270  00170DEF 47FFC1F2 A7F4000B 00000004   |.d........BbT0.. ......A2x4......|
0000000000000600   400   A7F40054 A7F4004A 00000010 000058A4  0000153A 4720C2BA BF934004 186918B9   |x4..x4.¢.......u ......B..l .....|
0000000000000620   420   0EA8A714 00535E60 024C5060 024C9180  40004710 C23E1865 5E60C306 5060C306   |.yx...;-.<&-.<j.  ...B...;-C.&-C.|
0000000000000640   440   47F0C1E2 D5030248 024C4770 C2CAE3F0  02500017 A5F7FFFE 91800250 A7140008   |.0ASN....<..B.T0 .&..v7..j..&x...|
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 07:32:45  Page    69

      ADDR         POS                                OBJECT CONTENT                                         CHARACTER CONTENT

0000000000000660   460   91010253 A7140006 010C07FF 010D07FF  010E07FF 00000000 00010000 00000000   |j...x........... ................|
0000000000000680   480   00020000 00000000 00040C00 00000000  0080FF00 000006F0 9204C331 8200C32A   |................ .......0k.C.b.C.|
00000000000006A0   4A0   9208C331 8200C32A 920CC331 8200C32A  9210C331 8200C32A 9218C331 8200C32A   |k.C.b.C.k.C.b.C. k.C.b.C.k.C.b.C.|
00000000000006C0   4C0   921CC331 8200C32A 9220C331 8200C32A  9224C331 8200C32A 9228C331 8200C32A   |k.C.b.C.k.C.b.C. k.C.b.C.k.C.b.C.|
00000000000006E0   4E0   922CC331 8200C32A 00000001 00000000  63400010 00000708 43400008 00000718   |k.C.b.C......... . ....... ......|
0000000000000700   500   42000000 00000000 40000000 00000000  00000000 00000000 06000000 00000000   |........ ....... ................|
0000000000000720   520   000A0000 00010008 000A0000 00000000  000A0000 00050000 EBECD018 0024B904   |................ ................|
0000000000000740   540   00CFE320 10000015 BD210257 A7440006  B90100F2 A7F40012 89200002 4122C050   |..T.........x... ...2x4..i......&|
0000000000000760   560   BF2F2000 A7740007 E3F0C04E 0015A7F4  0005B904 00C207FC E300D020 0024EBEC   |....x...T0.+..x4 .....B..T.......|
0000000000000780   580   D0180004 07FEFFFF 000007A4 000007DC  00000888 000008E0 000009EC 00000BD0   |...........u.... ...h............|
00000000000007A0   5A0   C2D3E200 4120C554 E320D010 0024E3D0  20080024 B90400D2 E3B01002 001541B0   |BLS...E.T.....T. .......KT.......|
00000000000007C0   5C0   B00140B0 1002B909 0000E3D0 D0080004  E3F00278 001707FF C2D3E201 4120C5AC   |.. .......T..... T0......BLS...E.|
00000000000007E0   5E0   E320D010 0024E3D0 20080024 B90400D2  B9040041 4160C97C 5060C478 5850C474   |T.....T........K .....-I@&-D..&D.|
0000000000000800   600   1E565050 C474B766 C0A49202 40024170  C87C5070 C4885810 00B8B234 7000A784   |..&&D....uk. ... H@&.Dh........xd|
0000000000000820   620   00030000 9201C485 D2016000 70065010  6004D200 60024002 92F1600C 91806002   |....k.DeK.-...&. -.K.-. .k1-.j.-.|
0000000000000840   640   A7E40004 94FE600C 91406002 A7E40004  947F600C 50604004 4170601F 5070C480   |xU..m.-.j -.xU.. m"-.&- ...-.&.D.|
0000000000000860   660   A7F40006 41000004 A7F40004 B9090000  E3D0D008 0004E3F0 02780017 07FF0000   |x4......x4...... T.....T0........|
0000000000000880   680   FFFFFFFF C2D3E202 4120C590 E320D010  0024E3D0 20080024 B90400D2 B9090000   |....BLS...E.T... ..T........K....|
00000000000008A0   6A0   E350C3CC 0017E360 C3D00017 E370C3D4  0017D501 10025000 A7840009 EC56FFFB   |T&C...T-C...T.CM ..N...&.xd......|
00000000000008C0   6C0   0045B904 00504100 00045050 1004E3D0  D0080004 E3F00278 001707FF C2D3E203   |.....&....&&..T. ....T0......BLS.|
00000000000008E0   6E0   4120C5C8 E320D010 0024E3D0 20080024  B90400D2 B9040041 1B00D201 C1024002   |..EHT.....T..... ...K......K.A. .|
0000000000000900   700   4110C100 E3F00270 00170DEF 12FF4770  C0545850 C104D500 40045002 A7840006   |..A.T0.......... ...&A.N. .&.xd..|
0000000000000920   720   41000014 A7F40055 50504004 41000004  A7F4004F 5820C37C 18325E30 C3785530   |....x4..&& ..... x4.|..C@..;.C...|
0000000000000940   740   C370A744 00064100 0010A7F4 00424120  20015860 C3849201 C3815810 C0FCB234   |C.x.......x4.... ...-Cdk.Ca......|
0000000000000960   760   6000A714 000BD501 40026006 A784000A  41101001 A7F4FFF5 4100000C A7F40029   |-.x...N. .-.xd.. ....x4.5....x4..|
0000000000000980   780   D2012000 60065010 2004D200 20024004  96806005 50506000 D2006004 40049438   |K...-.&...K... . o.-.&&-.K.-. .m.|
00000000000009A0   7A0   6004B232 6000A774 FFE992F1 200C9180  2002A7E4 000494FE 200C9140 2002A7E4   |-...-.x..Zk1..j. ..xU..m...j ..xU|
00000000000009C0   7C0   0004947F 200C5020 40045030 C37CE3D0  D0080004 E3F00278 001707FF 00010000   |..m"..&. .&.C@T. ....T0..........|
00000000000009E0   7E0   00020000 00000000 C2D3E204 4120C54C  E320D010 0024E3D0 20080024 B90400D2   |........BLS...E< T.....T........K|
0000000000000A00   800   B9040041 B90B0000 D5034004 C268A744  00B7D503 4004C270 A72400B2 91034007   |........N. .B.x. ..N. .B.x...j. .|
0000000000000A20   820   A77400AE 910F4008 A77400AA 95804009  A77400A6 9500400B A77400A2 D200C1DE   |x...j. .x...n. . x..wn. .x..sK.A.|
0000000000000A40   840   4002940C C1DE9180 4002A714 001DD503  400CC1D4 A7840094 58504004 58105004   | .m.A.j. .x...N.  .AMxd.m.& ...&.|
0000000000000A60   860   41604004 B2336000 A784000E A7240082  A7140080 91405002 A7E40076 A7F40004   |.- ...-.xd..x..b x...j &.xU..x4..|
0000000000000A80   880   92805003 D20F01F0 C1B4B2B2 C1A4D20F  01F0C1C4 587000BC 55704004 A7840006   |k.&.K..0A...AuK. .0AD...... .xd..|
0000000000000AA0   8A0   9202C274 A7F40004 9201C274 581000B8  5820C278 B2352000 A7840003 00009202   |k.B.x4..k.B..... ..B.....xd....k.|
0000000000000AC0   8C0   C275D20B 70102000 D6017008 70189602  70039102 7003A714 00030000 91407002   |B.K.....O.....o. ..j...x.....j ..|
0000000000000AE0   8E0   A7E40012 91807008 47E0C118 9204700B  96207003 92014003 B9210057 A774FFC4   |xU..j.....A.k... o...k. .....x..D|
0000000000000B00   900   47F0C160 95005009 A774002E 4330500C  4430C1DA A7740028 91025008 A7E4000A   |.0A-n.&.x.....&. ..A.x...j.&.xU..|
0000000000000B20   920   9200500B 92014003 96205003 A7F4001C  4330C1DE 4430C1DA A7E4FFA6 91805002   |k.&.k. .o.&.x4.. ..A...A.xU.wj.&.|
0000000000000B40   940   A7E40006 91015008 A7140008 947F5003  B90B0000 A7F40016 947F5003 41000004   |xU..j.&.x...m"&. ....x4..m"&.....|
0000000000000B60   960   A7F40010 947F5003 41000008 A7F4000A  947F5003 4100000C A7F40004 41000010   |x4..m"&.....x4.. m"&.....x4......|
0000000000000B80   980   E3D0D008 0004E3F0 02780017 07FF0000  02020000 00000000 00000000 00000000   |T.....T0........ ................|
0000000000000BA0   9A0   00000000 80000000 00000000 00000A8E  00020000 00000000 00000000 00000170   |................ ................|
0000000000000BC0   9C0   00000000 00019100 50080000 C2D3E205  4120C3F8 E320D010 0024E3D0 20080024   |......j.&...BLS. ..C8T.....T.....|
0000000000000BE0   9E0   B90400D2 B9090000 BF5F1004 A7840008  91205003 A7140016 A7F40020 E350C084   |...K.....ª..xd.. j.&.x...x4..T&.d|
0000000000000C00   A00   0017E360 C0880017 E370C08C 00179120  5003A714 0007EC56 FFFC0045 A7F4000E   |..T-.h..T.....j. &.x.........x4..|
0000000000000C20   A20   9504500B A7840006 41000004 A7F40004  41000008 50501004 E3D0D008 0004E3F0   |n.&.xd......x4.. ....&&..T.....T0|
0000000000000C40   A40   02780017 07FF0000 00000C68 00000000  00000100 00000000 00000020 00000000   |................ ................|
0000000000000C60   A60   00000000 00000000                                                          |........                         |
ASMA Ver. 0.2.0  BOOT LOADER                                                                        08 Sep 2020 07:32:45  Page    70

   STMT                       FILE NAME

1     /home/harold/SATKREPO/SATK/srcasm/loader/fbalodr.asm
2     /home/harold/SATKREPO/SATK/srcasm/loader/bls.asm


** NO ERRORS FOUND **

[167] MNOTE *,ARCHLVL - ARCHITECTURE LEVEL SET - 9
