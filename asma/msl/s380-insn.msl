# Copyright (C) 2014-2020 Harold Grovesteen
#
# This file is part of SATK.
#
#     SATK is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     SATK is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with SATK.  If not, see <http://www.gnu.org/licenses/>.

# System/370 instructions and instruction sets in Machine Specification Language

# Include machine instruction formats
# Uses MSLPATH when searching for include files
include formats.msl

cpu s370x         # Generic Hercules S/370X CPU
    addrmax 24
    ccw CCW0
    psw PSWEC
    base s380-base s380-DECIMAL s380-extended s380-io
    features s380-HFP
    features s380-EPHFP
    features s380-BRANCH-AND-SAVE
    features s380-CHANNEL-SET-SWITCHING
    features s380-CONDITIONAL-SWAPPING
    features s380-CPU-TIMERS
    features s380-DAS
    features s380-EXTENDED
    features s380-EXTENSIONS      # Back-ported instructions
    features s380-MOVE-INVERSE
    features s380-MULTIPROCESSING
    features s380-PSW-KEY-HANDLING
    features s380-RECOVERY
    features s380-STORAGE-KEY
    features s380-SUSPEND-RESUME
    features s380-TEST-BLOCK
    features s380-TRANSLATION

cpu s380         # Generic Hercules S/380 CPU
    addrmax 31
    ccw CCW0
    psw PSW380
    base s380-base s380-DECIMAL s380-extended s380-io
    features s380-HFP
    features s380-EPHFP
    features s380-BRANCH-AND-SAVE
    features s380-CHANNEL-SET-SWITCHING
    features s380-CONDITIONAL-SWAPPING
    features s380-CPU-TIMERS
    features s380-DAS
    features s380-EXTENDED
    features s380-EXTENSIONS      # Back-ported instructions
    features s380-MOVE-INVERSE
    features s380-MULTIPROCESSING
    features s380-PSW-KEY-HANDLING
    features s380-RECOVERY
    features s380-STORAGE-KEY
    features s380-SUSPEND-RESUME
    features s380-TEST-BLOCK
    features s380-TRANSLATION


# STANDARD INSTRUCTIONS (see below for I/O instructions)
inst A      5A   RXA            # ADD (32)
inst AH     4A   RXA            # ADD HALFWORD
inst AL     5E   RXA            # ADD LOGICAL (32)
inst ALR    1E   RR             # ADD LOGICAL (32)
inst AR     1A   RR             # ADD (32)
inst BAL    45   RXA            # BRANCH AND LINK
inst BALR   05   RR             # BRANCH AND LINK
inst BC     47   RXA            # BRANCH ON CONDITION
inst BCR    07   RR             # BRANCH ON CONDITION
inst BCT    46   RXA            # BRANCH ON COUNT (32)
inst BCTR   06   RR             # BRANCH ON COUNT (32)
inst BXH    86   RSA            # BRANCH ON INDEX HIGH (32)
inst BXLE   87   RSA            # BRANCH ON INDEX LOW OR EQUAL (32)
inst C      59   RXA            # COMPARE (32)
inst CH     49   RXA            # COMPARE HALFWORD
inst CL     55   RXA            # COMPARE LOGICAL (32)
inst CLI    95   SI             # COMPARE LOGICAL (immediate)
inst CLC    D5   SSA            # COMPARE LOGICAL (character)
inst CLCL   0F   RR             # COMPARE LOGICAL LONG (character)
inst CLM    BD   RSB            # COMPARE LOGICAL UNDER MASK
inst CLR    15   RR             # COMPARE LOGICAL (32)
inst CR     19   RR             # COMPARE (32)
inst CVB    4F   RXA            # CONVERT TO BINARY (32)
inst CVD    4E   RXA            # CONVERT TO DECIMAL (32)
inst D      5D   RXA            # DIVIDE (32<64)
inst DIAG   83   RSA     P      # DIAGNOSE
inst DR     1D   RR             # DIVIDE
inst EX     44   RXA            # EXECUTE
inst IC     43   RXA            # INSERT CHARACTER
inst ICM    BF   RSB            # INSERT CHARACTER UNDER MASK
inst ISK    09   RR      P      # INSERT STORAGE KEY
inst L      58   RXA            # LOAD (32)
inst LA     41   RXA            # LOAD ADDRESS
inst LCR    13   RR             # LOAD COMPLEMENT (32)
inst LCTL   B7   RSA     P      # LOAD CONTROL
inst LH     48   RXA            # LOAD HALFWORD
inst LM     98   RSA            # LOAD MULTIPLE (32)
inst LNR    11   RR             # LOAD NEGATIVE (32)
inst LPR    10   RR             # LOAD POSITIVE (32)
inst LPSW   8200 S0      P      # LOAD PROGRAM STATUS WORD
inst LR     18   RR             # LOAD (32)
inst LTR    12   RR             # LOAD AND TEST (32)
inst M      5C   RXA            # MULTIPLY (64<32)
inst MC     AF   SI             # MONITOR CALL
inst MH     4C   RXA            # MULTIPLY HALFWORD (32)
inst MR     1C   RR             # MULTIPLY (63<32)
inst MVC    D2   SSA            # MOVE (character)
inst MVCL   0E   RR             # MOVE CHARACTER LONG
inst MVI    92   SI             # MOVE (immediate)
inst MVN    D1   SSA            # MOVE NUMERICS
inst MVO    F1   SSB            # MOVE WITH OFFSET
inst MVZ    D3   SSA            # MOVE NUMERICS
inst N      54   RXA            # AND (32)
inst NC     D4   SSA            # AND (character)
inst NI     94   SI             # AND (immediate)
inst NR     14   RR             # AND (32)
inst O      56   RXA            # OR (32)
inst OC     D6   SSA            # OR (character)
inst OI     96   SI             # OR (immediate)
inst OR     16   RR             # OR (32)
inst PACK   F2   SSB            # PACK
inst S      5B   RXA            # SUBTRACT (32)
inst SCK    B204 S0      P      # SET CLOCK
inst SH     4B   RXA            # SUBTRACT HALFWORD
inst SL     5F   RXA            # SUBTRACT LOGICAL (32)
inst SLA    8B   RSA1           # SHIFT LEFT SINGLE
inst SLDA   8F   RSA1           # SHIFT LEFT DOUBLE
inst SLDL   8D   RSA1           # SHIFT LEFT DOUBLE LOGICAL
inst SLL    89   RSA1           # SHIFT LEFT SINGLE LOGICAL (32)
inst SLR    1F   RR             # SUBTRACT LOGICAL (32)
inst SPM    04   RR      P      # SET PROGRAM MASK
inst SR     1B   RR             # SUBTRACT (32)
inst SRA    8A   RSA1           # SHIFT RIGHT SINGLE
inst SRDA   8E   RSA1           # SHIFT RIGHT DOUBLE
inst SRDL   8C   RSA1           # SHIFT RIGHT DOUBLE LOGICAL
inst SRL    88   RSA1           # SHIFT RIGHT SINGLE LOGICAL (32)
inst SSK    08   RR      P      # SET STORAGE KEY
inst SSM    8000 S0      P      # SET SYSTEM MASK
inst ST     50   RXA            # STORE (32)
inst STC    42   RXA            # STORE CHARACTER
inst STCM   BE   RSB            # STORE CHARACTERS UNDER MASK
inst STCK   B205 S0      P      # STORE CLOCK
inst STCTL  B6   RSA     P      # STORE CONTROL
inst STH    40   RXA            # STORE HALFWORD
inst STIDP  B202 S0      P      # STORE PROCESSOR ID
inst STM    90   RSA            # STORE MULTIPLE (32)
inst SVC    0A   I              # SUPERVISOR CALL
inst TM     91   SI             # TEST UNDER MASK
inst TR     DC   SSA            # TRANSLATE
inst TRT    DD   SSA            # TRASNLATE AND TEST
inst TS     9300 S0             # TEST AND SET
inst UNPK   F3   SSB            # UNPACK
inst X      57   RXA            # EXCLUSIVE OR (32)
inst XC     D7   SSA            # EXCLUSIVE OR (character)
inst XI     97   SI             # EXCLUSIVE OR (immediate)
inst XR     17   RR             # EXCLUSIVE OR (32)


# STANDARD EXTENDED MNEMONICS
inst B      47F  ERXB    E      # BC  15,D1(X1,B1)  Unconditional branch
inst BE     478  ERXB    E      # BC  8,D1(X1,B1)   Branch on A equal B
inst BER    078  ER      E      # BCR 8,R           Branch on A equal B (reg)
inst BH     472  ERXB    E      # BC  2,D1(X1,B1)   Branch on A higher than B
inst BHR    072  ER      E      # BCR 2,R           Branch on A higher than B (reg)
inst BL     474  ERXB    E      # BC  4,D1(X1,B1)   Branch on A lower than B
inst BLR    074  ER      E      # BCR 4,R           Branch on A lower than B (reg)
inst BM     474  ERXB    E      # BC  4,D1(X1,B1)   Branch on Minus or Mixed
inst BMR    074  ER      E      # BCR 4,R           Branch on Minus or Mixed (reg)
inst BNE    477  ERXB    E      # BC  7,D1(X1,B1)   Branch on A not equal B
inst BNER   077  ER      E      # BCR 8,R           Branch on A not equal B (reg)
inst BNH    47D  ERXB    E      # BC  13,D1(X1,B1)  Branch on A not higher than B
inst BNHR   07D  ER      E      # BCR 13,R          Branch on A not higher than B (reg)
inst BNL    47B  ERXB    E      # BC  11,D1(X1,B1)  Branch on A not lower than B
inst BNLR   07B  ER      E      # BCR 11,R          Branch on A not lower than B (reg)
inst BNM    47B  ERXB    E      # BC  11,D1(X1,B1)  Branch on not minus or not mixed
inst BNMR   07B  ER      E      # BC  11,R          Branch on not minur or not mixed (reg)
inst BNO    47E  ERXB    E      # BC  14,D1(X1,B1)  Branch on no overflow or not ones
inst BNOR   07E  ER      E      # BCR 14,R          Branch on no overflow or not ones (reg)
inst BNP    47D  ERXB    E      # BC  13,D1(X1,B1)  Branch on not plus
inst BNPR   07D  ER      E      # BCR 13,R          Branch on not plus (reg)
inst BNZ    477  ERXB    E      # BC  7,D1(X1,B1)   Branch on not zero or zeros
inst BNZR   077  ER      E      # BCR 7,R           Branch on not zero or zeros (reg)
inst BO     471  ERXB    E      # BC  1,D1(X1,B1)   Branch on overflow or ones
inst BOR    071  ER      E      # BCR 1,R           Branch on overflow or ones (reg)
inst BP     472  ERXB    E      # BC  2,D1(X1,B1)   Branch on plus
inst BPR    072  ER      E      # BCR 2,R           Branch on plus (reg)
inst BR     07F  ER      E      # BCR 15,R          Unconditional branch (reg)
inst BZ     478  ERXB    E      # BC  8,D1(X1,B1)   Branch on zero or zeros
inst BZR    078  ER      E      # BCR 8,R           Branch on zero or zeros (reg)
inst NOP    470  ERXB    E      # BC  0,D1(X1,B1)   no operation
inst NOPR   070  ER      E      # BCR 0,R           no operation (reg)

iset s380-base
    mnemonics A AH AL ALR AR BAL BALR BC BCR BCT BCTR BXH BXLE C CH CL CLC CLCL CLI
    mnemonics CLM CLR CR CVB CVD D DIAG DR EX IC ICM ISK L LA LCR LCTL LH LM LNR
    mnemonics LPR LPSW LR LTR M MC MH MR MVC MVCL MVI MVN MVO MVZ N NC NI NR O OC
    mnemonics OI OR PACK S SCK SH SL SLA SLDA SLDL SLL SLR SPM SR SRA SRDA SRDL SRL
    mnemonics SSK SSM ST STC STCM STCK STCTL STH STIDP STM SVC TM TR TRT TS
    mnemonics UNPK X XC XI XR

iset s380-extended
    mnemonics B BE BER BH BHR BL BLR BM BMR BNE BNER BNH BNHR BNL BNLR BNM BNMR
    mnemonics BNO BNOR BNP BNPR BNZ BNZR BO BOR BP BPR BR BZ BZR NOP NOPR


# INPUT/OUTPUT INSTRUCTIONS
inst CLRIO  9D01 S0      P      # CLEAR IO
inst HDV    9E01 S0      P      # HALD DEVICE
inst HIO    9E00 S0      P      # HALT IO
inst SIOF   9C01 S0      P      # START IO FAST RELEASE
inst SIO    9C00 S0      P      # START IO
inst STIDC  B203 S0      P      # STORE CHANNEL ID
inst TCH    9F00 S0      P      # TEST CHANNEL
inst TIO    9D00 S0      P      # TEST IO

iset s380-io
     mnemonics CLRIO HDV HIO SIO SIOF STIDC TCH TIO


# BRANCH AND SAVE FACILITY
inst BAS    4D   RXA            # BRANCH AND SAVE
inst BASR   0D   RR             # BRANCH AND SAVE

iset s380-BRANCH-AND-SAVE
     mnemonics BAS BASR


# CHANNEL-SET SWITCHING FACILITY
inst CONCS B200 S0       P      # CONNECT CHANNEL SET
inst DISCS B201 S0       P      # DISCONNECT CHANNEL SET

iset s380-CHANNEL-SET-SWITCHING
    mnemonics CONCS DISCS


# CONDITIONAL SWAPPING FACILITY
inst CS    BA   RSA             # COMPARE AND SWAP
inst CDS   BB   RSA             # COMPARE DOUBLE AND SWAP

iset s380-CONDITIONAL-SWAPPING
    mnemonics CS CDS


# CPU TIMER AND CLOCK COMPARATOR
inst SCKC  B206 S0       P      # SET CLOCK COMPARATOR
inst SPT   B208 S0       P      # SET CPU TIMER
inst STCKC B207 S0       P      # STORE CLOCK COMPARATOR
inst STPT  B209 S0       P      # STORE CPU TIMER

iset s380-CPU-TIMERS
    mnemonics SCKC SPT STCKC STPT


# DECIMAL INSTRUCTIONS FACILIY
inst AP     FA   SSB            # ADD DECIMAL
inst CP     F9   SSB            # COMPARE DECIMAL
inst DP     FD   SSB            # DIVIDE DECIMAL
inst ED     DE   SSA            # EDIT
inst EDMK   DF   SSA            # EDIT AND MARK
inst MP     FC   SSB            # MULTIPLY DECIMAL
inst SP     FB   SSB            # SUBTRACT DECIMAL
inst SRP    F0   SSC            # SHIFT AND ROUND DECIMAL
inst ZAP    F8   SSB            # ZERO AND ADD

iset s380-DECIMAL
    mnemonics AP CP DP ED EDMK MP SP SRP ZAP


# DUAL ADDRESS SPACE FACILITY
inst EPAR  B226 RRE             # EXTRACT PRIMARY ADDRESS SPACE NUMBER
inst ESAR  B227 RRE             # EXTRACT SECONARY ADDRESS SPACE NUMBER
inst IAC   B224 RRE             # INSERT ADDRESS SPACE CONTROL
inst IVSK  B223 RRE             # INSERT VIRTUAL STORAGE KEY
inst LASP  E500 SSE2     P      # LOAD ADDRESS SPACE CONTROL
inst MVCK  D9   SSD             # MOVE WITH KEY
inst MVCP  DA   SSD             # MOVE TO PRIMARY
inst MVCS  DB   SSD             # MOVE TO SECONDARY
inst PC    B218 S0              # PROGRAM CALL
inst PT    B228 RRE      P      # PROGRAM TRANSFER
inst SAC   B219 S0       P      # SET ADDRESS SPACE CONTROL
inst SSAR  B225 RRE             # SET SECONDARY ADDRESS SPACE NUMBER

iset s380-DAS
    mnemonics EPAR ESAR IAC LASP MVCP MVCS MVCK PC PT SAC SSAR


# EXTENDED FACILITY (without MVS Assist)
inst IPTE  B221 RRE      P      # INVALIDATA PAGE TABLE ENTRY
inst TPROT E501 SSE2     P      # TEST PROTECTION

iset s380-EXTENDED
    mnemonics IPTE TPROT


# EXTENDED PRECISION HEXADECIMAL FLOATING POINT FEATURE
inst AXR    36   RR             # ADD NORMALIZED (EH)
inst LRDR   25   RR             # LOAD ROUNDED (LH<EH)
inst LRER   35   RR             # LOAD ROUNDED (SH<LH)
inst MXD    67   RXA            # MULTIPLY (EH<LH)
inst MXDR   27   RR             # MULTIPLY (EH<LH)
inst MXR    26   RR             # MULTIPLY (EH)
inst SXR    37   RR             # SUBTRACT NORMALIZED (EH)

iset s380-EPHFP
    mnemonics AXR LRDR LRER MXD MXDR MXR SXR


# HEXADECIMAL FLOATING POINT INSTRUCTION FEATURE
inst AD     6A   RXA            # ADD NORMALIZED (LH)
inst ADR    2A   RR             # ADD NORMALIZED (LH)
inst AE     7A   RXA            # ADD NORMALIZED (SH
inst AER    3A   RR             # ADD NORMALIZED (SH)
inst AU     7E   RXA            # ADD UNNORMALISZE (SH)
inst AUR    3E   RR             # ADD UNNORMALIZED (SH)
inst AW     6E   RXA            # ADD UNNORMALIZED (LH)
inst AWR    2E   RR             # ADD UNNORMALIZED (LH)
inst CD     69   RXA            # COMPARE (LH)
inst CDR    29   RR             # COMPARE (LH)
inst CE     79   RXA            # COMPARE (SH)
inst CER    39   RR             # COMPARE (SH)
inst DD     6D   RXA            # DIVIDE (LH)
inst DDR    2D   RR             # DIVIDE (LH)
inst DE     7D   RXA            # DIVIDE (SH)
inst DER    3D   RR             # DIVIDE (SH)
inst HDR    24   RR             # HALVE (LH)
inst HER    34   RR             # HALVE (SH)
inst LCDR   23   RR             # LOAD COMPLEMENT (LH)
inst LCER   33   RR             # LOAD COMPLEMENT (SH)
inst LD     68   RXA            # LOAD (LH)
inst LDR    28   RR             # LOAD (LH)
inst LE     78   RXA            # LOAD (SH)
inst LER    38   RR             # LOAD (SH)
inst LNDR   21   RR             # LOAD NEGATIVE (LH)
inst LNER   31   RR             # LOAD NEGATIVE (SH)
inst LPDR   20   RR             # LOAD POSITIVE (LH)
inst LPER   30   RR             # LOAD POSITIVE (SH)
inst LTDR   22   RR             # LOAD AND TEST (LH)
inst LTER   32   RR             # LOAD AND TEST (SH)
inst MD     6C   RXA            # MULTIPLY (LH)
inst MDR    2C   RR             # MULTIPLY (LH)
inst ME     7C   RXA            # MULTIPLY (SH)
inst MER    3C   RR             # MULTIPLY (SH)
inst SD     6B   RXA            # SUBTRACT NORMALIZED (LH)
inst SDR    2B   RR             # SUBTRACT NORMALIZED (LH)
inst SE     7B   RXA            # SUBTRACT NORMALIZED (SH)
inst SER    3B   RR             # SUBTRACT NORMALIZED (SH)
inst STD    60   RXA            # STORE (L)
inst STE    70   RXA            # STORE (S)
inst SU     7F   RXA            # SUBTRACT UNNORMALIZED (SH)
inst SUR    3F   RR             # SUBTRACT UNNORMALIZED (SH)
inst SW     6F   RXA            # SUBTRACT UNNORMALIZED (LH)
inst SWR    2F   RR             # SUBTRACT UNNORMALIZED (LH)

iset s380-HFP
    mnemonics AD ADR AE AER AU AUR AW AWR CD CDR CE CER DD DDR DE DER HDR HER LCDR LCER
    mnemonics LD LDR LE LER LNDR LNER LPDR LPER LTDR LTER MD MDR ME MER SD SDR SE SER
    mnemonics STD STE SU SUR SW SWR


# MOVE INVERSE FACILITY
inst MVCIN  E8  SSA             # MOVE INVERSE

iset s380-MOVE-INVERSE
    mnemonics MVCIN


# MULTIPROCESSING FACILITY
inst SPX   B210 S0       P      # SET PREFIX
inst SIGP  AE   RSA      P      # SIGNAL PROCESSOR
inst STAP  B212 S0       P      # STORE CPU ADDRESS
inst STPX  B211 S0       P      # STORE PREFIX

iset s380-MULTIPROCESSING
    mnemonics SPX SIGP STAP STPX


# PSW KEY-HANDLING
inst IPK   B20B S0       P      # INSERT PSW KEY
inst SPKA  B20A S0       P      # SET PSW KEY FROM ADDRESS

iset s380-PSW-KEY-HANDLING
    mnemonics IPK SPKA


# RECOVERY EXTENSIONS
inst CLRCH 9F01 S0       P      # CLEAR CHANNEL

iset s380-RECOVERY
    mnemonics CLRCH


# STORAGE-KEY-INSTRUCTION EXTENSIONS
inst ISKE  B229 RRE      P      # INSERT STORAGE KEY EXTENDED
inst RRBE  B22A RRE      P      # RESET REFERENCE BIT EXTENDED
inst SSKE  B22B RRE      P      # SET STORAGE KEY EXTENDED

iset s380-STORAGE-KEY
    mnemonics ISKE RRBE SSKE


# SUSPEND AND RESUME
inst RIO   9C02 S0       P      # RESUME IO

iset s380-SUSPEND-RESUME
    mnemonics RIO


# TEST BLOCK
inst TB    B22C RRE      P      # TEST BLOCK

iset s380-TEST-BLOCK
    mnemonics TB


# TRANSLATION
inst LRA   B1   RXA      P      # LOAD REAL ADDRESS
inst PTLB  B20D S0       P      # PURGE TLB
inst RRB   B213 S0       P      # RESET REFERENCE BIT
inst STNSM AC   SI       P      # STORE THEN AND SYSTEM MASK
inst STOSM AD   SI       P      # STORE THEN OR SYSTEM MASK

iset s380-TRANSLATION
    mnemonics LRA PTLB RRB STNSM STOSM

# S/370 Extensions (back-ported instructions)
inst ADB    ED1A RXE            # ADD (LB)
inst ADBR   B31A RRE            # ADD (LB)
inst AEB    ED0A RXE            # ADD (SB)
inst AEBR   B30A RRE            # ADD (SB)
inst AFI    C29  RILA           # ADD IMMEDIATE (32)
inst AGSI   EB7A SIY1           # ADD IMMEDIATE (64<8)
inst AHI    A7A  RIA            # ADD HALFWORD IMMEDIATE
inst ALC    E398 RXE            # ADD LOGICAL WITH CARRY (32)
inst ALCR   B998 RRE            # ADD LOGICAL WITH CARRY (32)
inst ALFI   C2B  RILD           # ADD LOGICAL IMMEDIATE (32)
inst ALGSI  EB7E SIY1           # ADD LOGICAL WITH SIGNED IMMEDIATE (64<8)
inst ALSI   EB6E SIY1           # ADD LOGICAL WITH SIGNED IMMEDIATE (32<8)
inst ASI    EB6A SIY1           # ADD IMMEDIATE (32<8)
inst AXBR   B34A RRE            # ADD (EB)
inst BRAS   A75  RIB            # BRANCH RELATIVE AND SAVE
inst BRASL  C05  RILB           # BRANCH RELATIVE AND SAVE LONG
inst BRC    A74  RIC            # BRANCH RELATIVE ON CONDITION
inst BRCL   C04  RILC           # BRANCH RELATIVE ON CONDITION LONG
inst BRCT   A76  RIB            # BRANCH RELATIVE ON COUNT
inst BRE    A784 ERIC    E      # BRANCH RELATIVE ON EQUAL             (BRC 8,IMMED)
inst BREL   C084 ERILC   E      # BRANCH RELATIVE ON EQUAL             (BRCL 8,IMMED)
inst BRH    A724 ERIC    E      # BRANCH RELATIVE ON HIGH              (BRC 2,IMMED)
inst BRHL   C024 ERILC   E      # BRANCH RELATIVE ON HIGH              (BRCL 2,IMMED)
inst BRL    A744 ERIC    E      # BRANCH RELATIVE ON LOW               (BRC 4,IMMED)
inst BRLL   C044 ERILC   E      # BRANCH RELATIVE ON LOW               (BRCL 4,IMMED)
inst BRM    A744 ERIC    E      # BRANCH RELATIVE ON MINUS             (BRC 4,IIMED)
inst BRML   C044 ERILC   E      # BRANCH RELATIVE ON MINUS             (BRCL 4,IIMED)
inst BRNE   A774 ERIC    E      # BRANCH RELATIVE ON NOT EQUAL         (BRC 7,IMMED)
inst BRNEL  C074 ERILC   E      # BRANCH RELATIVE ON NOT EQUAL         (BRCL 7,IMMED)
inst BRNH   A7D4 ERIC    E      # BRANCH RELATIVE ON NOT HIGH          (BRC 13,IMMED)
inst BRNHL  C0D4 ERILC   E      # BRANCH RELATIVE ON NOT HIGH          (BRCL 13,IMMED)
inst BRNL   A7B4 ERIC    E      # BRANCH RELATIVE ON NOT HIGH          (BRC 11,IMMED)
inst BRNLL  C084 ERILC   E      # BRANCH RELATIVE ON NOT HIGH          (BRCL 11,IMMED)
inst BRNM   A7B4 ERIC    E      # BRANCH RELATIVE ON NOT MINUS         (BRC 11,IMMED)
inst BRNML  C084 ERILC   E      # BRANCH RELATIVE ON NOT MINUS         (BRCL 11,IMMED)
inst BRNO   A7E4 ERIC    E      # BRANCH RELATIVE ON NOT ONES/OVERFLOW (BRC 14,IMMED)
inst BRNOL  C0E4 ERILC   E      # BRANCH RELATIVE ON NOT ONES/OVERFLOW (BRCL 14,IMMED)
inst BRNP   A7D4 ERIC    E      # BRANCH RELATIVE ON NOT PLUS          (BRC 13,IMMED)
inst BRNPL  C0D4 ERILC   E      # BRANCH RELATIVE ON NOT PLUS          (BRCL 13,IMMED)
inst BRNZ   A774 ERIC    E      # BRANCH RELATIVE ON NOT ZERO(S)       (BRC 7,IMMED)
inst BRNZL  C074 ERILC   E      # BRANCH RELATIVE ON NOT ZERO(S)       (BRCL 7,IMMED)
inst BRO    A714 ERIC    E      # BRANCH RELATIVE ON ONES/OVERFLOW     (BRC 1,IMMED)
inst BROL   C014 ERILC   E      # BRANCH RELATIVE ON ONES/OVERFLOW     (BRCL 1,IMMED)
inst BRP    A724 ERIC    E      # BRANCH RELATIVE ON PLUS              (BRC 2,IIMED)
inst BRPL   C024 ERILC   E      # BRANCH RELATIVE ON PLUS              (BRCL 2,IIMED)
inst BRU    A7F4 ERIC    E      # UNCONDITIONAL BRANCH RELATIVE        (BRC 15,IMMED)
inst BRUL   C0F4 ERILC   E      # UNCONDITIONAL BRANCH RELATIVE        (BRCL 15,IMMED)
inst BRXH   84   RSI            # BRANCH RELATIVE ON INDEX HIGH
inst BRXLE  85   RSI            # BRANCH RELATIVE ON INDEX LOW OR EQUA
inst BRZ    A784 ERIC    E      # BRANCH RELATIVE ON ZERO              (BRC 8,IMMED)
inst BRZL   C084 ERILC   E      # BRANCH RELATIVE ON ZERO              (BRCL 8,IMMED)
inst CDB    ED19 RXE            # COMPARE (LB)
inst CDBR   B319 RRE            # COMPARE (LB)
inst CDFBR  B395 RRE            # CONVERT FROM FIXED (LB<32)
inst CDFR   B3B5 RRE            # CONVERT FROM FIXED (LH<32)
inst CEB    ED09 RXE            # COMPARE (SB)
inst CEBR   B309 RRE            # COMPARE (SB)
inst CEFBRA B394 RRFE           # CONVERT FROM FIXED (SB<32)
inst CEFR   B3B4 RRE            # CONVERT FROM FIXED (SH<32)
inst CFDBR  B399 RRFG           # CONVERT TO FIXED (32<LB)
inst CFDR   B3B9 RRFG           # CONVERT TO FIXED (32<LH)
inst CFEBRA B398 RRFE           # CONVERT TO FIXED (32<SB)
inst CFER   B3B8 RRFG           # CONVERT TO FIXED (32<SH)
inst CFXBR  B39A RRFG           # CONVERT TO FIXED (32<EB)
inst CFXR   B3BA RRFG           # CONVERT TO FIXED (32<EH)
inst CFI    C2D  RILA           # COMPARE IMMEDIATE (32)
inst CGHSI  E558 SIL1           # COMPARE HALFWORD IMMEDIATE (64<16)
inst CHHSI  E554 SIL1           # COMPARE HALFWORD IMMEDIATE (16)
inst CHI    A7E  RIA            # COMPARE HALFWORD IMMEDIATE
inst CHRL   C65  RILB           # COMPARE HALFWORD RELATIVE LONG (32<16)
inst CHSI   E55C SIL1           # COMPARE HALFWORD IMMEDIATE (32<16)
inst CIB    ECFE RIS            # COMPARE IMMEDIATE AND BRANCH (32<8)
inst CIJ    EC7E RIEC           # COMPARE IMMEIDATE AND BRANCH RELATIVE (32<8)
inst CIT    EC72 RIEA           # COMPARE IMMEDIATE AND TRAP (32<16)
inst CKSM   B241 RRE            # CHECKSUM
inst CLCLU  EB8F RSA2           # COMPARE LOGICAL LONG UNICODE
inst CLFHSI E55D SIL            # COMPARE LOGICAL IMMEDIATE (32<16)
inst CLFI   C2F  RILD           # COMPARE LOGICAL IMMEDIATE (32)
inst CLFIT  EC73 RIEA1          # COMPARE LOGICAL IMMEDIATE AND TRAP (32<16)
inst CLGHSI E559 SIL            # COMPARE LOGICAL IMMEDIATE (64<16)
inst CLHHSI E555 SIL            # COMPARE LOGICAL IMMEDIATE (16)
inst CLHRL  C67  RILB           # COMPARE LOGICAL RELATIVE LONG (32<16)
inst CLIB   ECFF RIS1           # COMPARE LOGICAL IMMEDIATE AND BRANCH (32<8)
inst CLIJ   EC7F RIEC1          # COMPARE LOGICAL IMMEDIATE AND BRANCH RELATIVE (32<8)
inst CLRB   ECF7 RRS            # COMPARE LOGICAL AND BRANCH (32)
inst CLRJ   EC77 RIEB           # COMPARE LOGICAL AND BRANCH RELATIVE (32)
inst CLRL   C6F  RILB           # COMPARE LOGICAL RELATIVE LONG (32)
inst CLRT   B973 RRFC           # COMPARE LOGICAL AND TRAP (32)
inst CLST   B25D RRE            # COMPARE LOGICAL STRING
inst CMPSC  B263 RRE            # COMPRESSION CALL
inst CRB    ECF6 RRS            # COMPARE AND BRANCH (32)
inst CRJ    EC76 RIEB           # COMPARE AND BRANCH RELATIVE (32)
inst CRL    C6D  RILB           # COMPARE RELATIVE LONG (32)
inst CRT    B972 RRFC           # COMPARE AND TRAP (32)
inst CUSE   B257 RRE            # COMPARE UNTIL SUBSTRING EQUAL
inst CUTFU  B2A7 RRE            # CONVERT UTF-8 TO UNICODE
inst CUUTF  B2A6 RRE            # CONVERT UNICODE TO UTF-8
inst CU12   B2A7 RRE            # CONVERT UTF-8 TO UTF-16
inst CU14   B9B0 RRE            # CONVERT UFT-8 TO UTF-32
inst CU21   B2A6 RRE            # CONVERT UTF-16 TO UTF-8
inst CU24   B9B1 RRE            # CONVERT UTF-16 TO UTF-32
inst CU41   B9B2 RRE            # CONVERT UTF-32 TO UTF-8
inst CU42   B9B3 RRE            # CONVERT UTF-32 TO UTF-16
inst CXBR   B349 RRE            # COMPARE (EB)
inst CXFBR  B396 RRE            # CONVERT FROM FIXED (EB<32)
inst CXFR   B3B6 RRE            # CONVERT FROM FIXED (EH<32)
inst CXR    B369 RRE            # COMPARE (EH)
inst DDB    ED1D RXE            # DIVIDE (LB)
inst DDBR   B31D RRE            # DIVIDE (LB)
inst DEB    ED0D RXE            # DIVIDE (SB)
inst DEBR   B30D RRE            # DIVIDE (SB)
inst DIDBR  B35B RRFB2          # DIVIDE TO INTEGER (LB)
inst DIEBR  B353 RRFB2          # DIVIDE TO INTEGER (SB)
inst DL     E397 RXE            # DIVIDE LOGICAL (32<64)
inst DLR    B997 RRE            # DIVIDE LOGICAL (32<64)
inst DXBR   B34D RRE            # DIVIDE (EB)
inst EFPC   B38C RRE1           # EXTRACT FPC
inst EPSW   B98D RRE            # EXTRACT PSW
inst FIDBR  B35F RRFG           # LOAD FP INTEGER (LB)
inst FIDR   B37F RRE            # LOAD FP INTEGER (LH)
inst FIEBR  B357 RRFG           # LOAD FP INTEGER (SB)
inst FIER   B377 RRE            # LOAD FP INTEGER (SH)
inst FIXBRA B347 RRFE           # LOAD FP INTERER (EB)
inst FIXR   B367 RRE            # LOAD FP INTEGER (EH)
inst J      A7F4 ERIC    E      # UNCONDITIONAL "JUMP" RELATIVE        (BRC 15,IMMED)
inst JAS    A75  RIB     E      # "JUMP" RELATIVE AND SAVE           (BRAS R1,IMMED)
inst JASL   C05  RILB    E      # "JUMP" RELATIVE AND SAVE LONG       (BRASL R,IMMED)
inst JCT    A76  RIB     E      # "JUMP" RELATIVE ON COUNT           (BRCT R1,IMMED)
inst JE     A784 ERIC    E      # "JUMP" RELATIVE ON EQUAL             (BRC 8,IMMED)
inst JH     A724 ERIC    E      # "JUMP" RELATIVE ON HIGH              (BRC 2,IMMED)
inst JL     A744 ERIC    E      # "JUMP" RELATIVE ON LOW               (BRC 4,IMMED)
inst JLE    C084 ERILC   E      # "JUMP" RELATIVE ON EQUAL             (BRCL 8,IMMED)
inst JLH    C024 ERILC   E      # "JUMP" RELATIVE ON HIGH              (BRCL 2,IMMED)
inst JLL    C044 ERILC   E      # "JUMP" RELATIVE ON LOW               (BRCL 4,IMMED)
inst JLM    C044 ERILC   E      # "JUMP" RELATIVE ON MINUS             (BRCL 4,IIMED)
inst JLNE   C074 ERILC   E      # "JUMP" RELATIVE ON NOT EQUAL         (BRCL 7,IMMED)
inst JLNH   C0D4 ERILC   E      # "JUMP" RELATIVE ON NOT HIGH          (BRCL 13,IMMED)
inst JLNL   C084 ERILC   E      # "JUMP" RELATIVE ON NOT HIGH          (BRCL 11,IMMED)
inst JLNM   C084 ERILC   E      # "JUMP" RELATIVE ON NOT MINUS         (BRCL 11,IMMED)
inst JLNO   C0E4 ERILC   E      # "JUMP" RELATIVE ON NOT ONES/OVERFLOW (BRCL 14,IMMED)
inst JLNOP  C004 ERILC   E      # NO OPERATION                         (BRCL 0,IMMED)
inst JLNP   C0D4 ERILC   E      # "JUMP" RELATIVE ON NOT PLUS          (BRCL 13,IMMED)
inst JLNZ   C074 ERILC   E      # "JUMP" RELATIVE ON NOT ZERO(S)       (BRCL 7,IMMED)
inst JLO    C014 ERILC   E      # "JUMP" RELATIVE ON ONES/OVERFLOW     (BRCL 1,IMMED)
inst JLP    C024 ERILC   E      # "JUMP" RELATIVE ON PLUS              (BRCL 2,IIMED)
inst JLU    C0F4 ERILC   E      # UNCONDITIONAL "JUMP" RELATIVE        (BRCL 15,IMMED)
inst JLZ    C084 ERILC   E      # "JUMP" RELATIVE ON ZERO              (BRCL 8,IMMED)
inst JM     A744 ERIC    E      # "JUMP" RELATIVE ON MINUS             (BRC 4,IIMED)
inst JNE    A774 ERIC    E      # "JUMP" RELATIVE ON NOT EQUAL         (BRC 7,IMMED)
inst JNH    A7D4 ERIC    E      # "JUMP" RELATIVE ON NOT HIGH          (BRC 13,IMMED)
inst JNL    A7B4 ERIC    E      # "JUMP" RELATIVE ON NOT HIGH          (BRC 11,IMMED)
inst JNM    A7B4 ERIC    E      # "JUMP" RELATIVE ON NOT MINUS         (BRC 11,IMMED)
inst JNO    A7E4 ERIC    E      # "JUMP" RELATIVE ON NOT ONES/OVERFLOW (BRC 14,IMMED)
inst JNOP   A704 ERIC    E      # NO OPERATION                         (BRC 0,IMMED)
inst JNP    A7D4 ERIC    E      # "JUMP" RELATIVE ON NOT PLUS          (BRC 13,IMMED)
inst JNZ    A774 ERIC    E      # "JUMP" RELATIVE ON NOT ZERO(S)       (BRC 7,IMMED)
inst JO     A714 ERIC    E      # "JUMP" RELATIVE ON ONES/OVERFLOW     (BRC 1,IMMED)
inst JP     A724 ERIC    E      # "JUMP" RELATIVE ON PLUS              (BRC 2,IIMED)
inst JXH    84   RSI     E      # "JUMP" RELATIVE ON INDEX HIGH     (BRXH R,R,IMMED)
inst JXLE   85   RSI     E      # BRANCH RELATIVE ON INDEX LOW OR EQUAL (BRXLE R,R,IM)
inst JZ     A784 ERIC    E      # "JUMP" RELATIVE ON ZERO              (BRC 8,IMMED)
inst KDB    ED18 RXE            # COMPARE AND SIGNAL (LB)
inst KDBR   B318 RRE            # COMPARE AND SIGNAL (LB)
inst KEB    ED08 RXE            # COMPARE AND SIGNAL (SB)
inst KEBR   B308 RRE            # COMPARE AND SIGNAL (SB)
inst KXBR   B348 RRE            # COMPARE AND SIGNAL (EB)
inst LARL   C00  RILB           # LOAD ADDRESS RELATIVE LONG
inst LBR    B926 RRE            # LOAD BYTE (32)
inst LFPC   B29D S0             # LOAD FPC
inst LHI    A78  RIA            # LOAD HALFWORD IMMEDIATE
inst LHR    B927 RRE            # LOAD HALFWORD (32)
inst LHRL   C45  RILB           # LOAD HALFWORD RELATIVE LONG (32<16)
inst LCDBR  B313 RRE            # LOAD COMPLEMENT (LB)
inst LCEBR  B303 RRE            # LOAD COMPLEMENT (SB)
inst LCXBR  B343 RRE            # LOAD COMPLEMENT (EB)
inst LCXR   B363 RRE            # LOAD COMPLEMENT (EH)
inst LDE    ED24 RXE            # LOAD LENGTHENED (LH<SH)
inst LDEB   ED04 RXE            # LOAD LENGTHENED (LB<SB)
inst LDEBR  B304 RRE            # LOAD LENGTHENED (LB<SB)
inst LDER   B324 RRE            # LOAD LENGTHENED (LH<SH)
inst LDXBRA B345 RRFE           # LOAD ROUNDED (LB<EB)
inst LEDBR  B344 RRE            # LOAD ROUNDED (SB<LB)
inst LEXBR  B346 RRE            # LOAD ROUNDED (SB<EB)
inst LEXR   B366 RRE            # LOAD ROUNDED (SH<EH)
inst LLC    E394 RXYA           # LOAD LOGICAL CHARACTER (32)
inst LLCR   B994 RRE            # LOAD LOGICAL CHARACTER (32)
inst LLH    E395 RXYA           # LOAD LOGICAL HALFWORD (32)
inst LLHR   B995 RRE            # LOAD LOGICAL HALFWORD (32)
inst LLHRL  C42  RILB           # LOAD LOGICAL HALFWORD RELATIVE LONG (32<16)
inst LNDBR  B311 RRE            # LOAD NEGATIVE (LB)
inst LNEBR  B301 RRE            # LOAD NEGATIVE (SB)
inst LNXBR  B341 RRE            # LOAD NEGATIVE (EB)
inst LNXR   B361 RRE            # LOAD NEGATIVE (EH)
inst LPD    C84  SSF3           # LOAD PAIR DISJOINT (32)
inst LPDBR  B310 RRE            # LOAD POSITIVE (LB)
inst LPEBR  B300 RRE            # LOAD POSITIVE (SB)
inst LPXBR  B340 RRE            # LOAD POSITIVE (EB)
inst LPXR   B360 RRE            # LOAD POSITIVE (EH)
inst LRL    C4D  RILB           # LOAD RELATIVE LONG (32)
inst LT     E312 RXYA           # LOAD AND TEST (32)
inst LTDBR  B312 RRE            # LOAD AND TEXT (LB)
inst LTEBR  B302 RRE            # LOAD AND TEST (SB)
inst LTXBR  B342 RRE            # LOAD AND TEST (EB)
inst LTXR   B362 RRE            # LOAD AND TEST (EH)
inst LXDB   ED05 RXE            # LOAD LENGTHENED (EB<LB)
inst LXDBR  B305 RRE            # LOAD LENGTHENED (EB<LB)
inst LXD    ED25 RXE            # LOAD LENGTHENED (EH<LH)
inst LXDR   B325 RRE            # LOAD LENGTHENED (EH<LH)
inst LXE    ED26 RXE            # LOAD LENGTHENED (EH<SH)
inst LXEB   ED06 RXE            # LOAD LENGTHENED (EB<SB)
inst LXEBR  B306 RRE            # LOAD LENGTHENED (EB<SB)
inst LXER   B326 RRE            # LOAD LENGTHENED (EH<SH)
inst MAD    ED3E RXF            # MULTIPLY AND ADD (LH)
inst MADB   ED1E RXF            # MULTIPLY AND ADD (LB)
inst MADBR  B31E RRD            # MULTIPLY AND ADD (LB)
inst MADR   B33E RRD            # MULTIPLY AND ADD (LH)
inst MAE    ED2E RXF            # MULTIPLY AND ADD (SH)
inst MAEB   ED0E RXF            # MULTIPLY AND ADD (SB)
inst MAEBR  B30E RRD            # MULTIPLY AND ADD (SB)
inst MAER   B32E RRD            # MULTIPLY AND ADD (SH)
inst MAY    ED3A RXF            # MULTIPLY AND ADD UNNORMALIZED (EH<LH)
inst MAYH   ED3C RXF            # MULTIPLY AND ADD UNNORMALIZED (EH HIGH<LH)
inst MAYHR  B33C RRFH           # MULTIPLY AND ADD UNNORMALIZED (EH HIGH<LH)
inst MAYL   ED38 RXF            # MULTIPLY AND ADD UNNORMALIZED (EH LOW<LH)
inst MAYLR  B338 RRFH           # MULTIPLY AND ADD UNNORMALIZED (EH LOW<LH)
inst MAYR   B33A RRFH           # MULTIPLY AND ADD UNNORMALIZED (EH<LH)
inst MDB    ED1C RXE            # MULTIPLY (LB)
inst MDBR   B31C RRE            # MULTIPLY (LB)
inst MDEB   ED0C RXE            # MULTIPLY (LB<SB)
inst MDEBR  B30C RRE            # MULTIPLY (LB<SB)
inst MEE    ED37 RXE            # MULTIPLY (SH)
inst MEEB   ED17 RXE            # MULTIPLY (SB)
inst MEEBR  B317 RRE            # MULTIPLY (SB)
inst MEER   B337 RRE            # MULTIPLY (SH)
inst MHI    A7C  RIA            # MULTIPLY HALFWORD IMMEDIATE
inst ML     E396 RXE            # MULTIPLY LOGICAL (64<32)
inst MLR    B996 RRE            # MULTIPLY LOGICAL (64<32)
inst MS     71   RXA            # MULTIPLY SINGLE
inst MSD    ED3F RXF            # MULTIPLY AND SUBTRACT (LH)
inst MSDB   ED1F RXF            # MULTIPLY AND SUBTRACT (LB)
inst MSDBR  B31F RRD            # MULTIPLY AND SUBTRACT (LB)
inst MSDR   B33F RRD            # MULTIPLY AND SUBTRACT (LH)
inst MSE    ED2F RXF            # MULTIPLY AND SUBTRACT (SH)
inst MSEB   ED0F RXF            # MULTIPLY AND SUBTRACT (SB)
inst MSEBR  B30F RRD            # MULTIPLY AND SUBTRACT (SB)
inst MSER   B32F RRD            # MULTIPLY AND SUBTRACT (SH)
inst MSFI   C21  RILA           # MULTIPLY SINGLE IMMEDIATE (32)
inst MSR    B252 RRE            # MULTIPLY SINGLE
inst MVCLU  EB8E RSA2           # MOVE LONG UNICODE
inst MVGHI  E548 SIL1           # MOVE (64<16)
inst MVHHI  E544 SIL1           # MOVE (16<16)
inst MVHI   E54C SIL1           # MOVE (32<16)
inst MVST   B255 RRE            # MOVE STRING
inst MXBR   B34C RRE            # MULTIPLY (EB)
inst MXDB   ED07 RXE            # MULTIPLY (EB<LB)
inst MXDBR  B307 RRE            # MULTIPLY (EB<LB)
inst MYHR   B33D RRFH           # MULTIPLY UNNORMALIZED (EH HIGH<LH)
inst MY     ED3B RXF            # MULTIPLY UNNORMALIZED (EH<LH)
inst MYH    ED3D RXF            # MULTIPLY UNNORMALIZED (EH HIGH<LH)
inst MYL    ED39 RXF            # MULTIPLY UNNORMALIZED (EH LOW<LH)
inst MYLR   B339 RRFH           # MULTIPLY UNNORMALIZED (EH LOW<LH)
inst MYR    B33B RRFH           # MULTIPLY UNNORMALIZED (EH<LH)
inst PFD    E336 RXYB           # PREFETCH DATA
inst PFDRL  C62  RILC           # PREFETCH DATA RELATIVE LONG
inst PKA    E9   SSF1           # PACK ASCII
inst PKU    E1   SSF1           # PACK UNICODE
inst RLL    EB1D RSA2           # ROTATE LEFT SINGLE LOGICAL (32)
inst SDB    ED1B RXE            # SUBTRACT (LB)
inst SDBR   B31B RRE            # SUBTRACT (LB)
inst SEB    ED0B RXE            # SUBTRACT (SB)
inst SEBR   B30B RRE            # SUBTRACT (SB)
inst SFPC   B384 RRE1           # SET FPC
inst SLB    E399 RXE            # SUBTRACT LOGICAL WITH BORROW (32)
inst SLBR   B999 RRE            # SUBTRACT LOGICAL WITH BORROW (32)
inst SLFI   C25  RILD           # SUBTRACT LOGICAL IMMEDIATE (32)
inst SQD    ED35 RXE            # SQUARE ROOT (LH)
inst SQDB   ED15 RXE            # SQUARE ROOT (LB)
inst SQDBR  B315 RRE            # SQUARE ROOT (LB)
inst SQDR   B244 RRE            # SQUARE ROOT (LH)
inst SQE    ED34 RXE            # SQUARE ROOT (SH)
inst SQEB   ED14 RXE            # SQUARE ROOT (SB)
inst SQEBR  B314 RRE            # SQUARE ROOT (SB)
inst SQER   B245 RRE            # SQUARE ROOT (SH)
inst SQXBR  B316 RRE            # SQUARE ROOT (XB)
inst SQXR   B336 RRE            # SQUARE ROOT (EH)
inst SRNM   B299 S0             # SET ROUNDING MODE
inst SRST   B25E RRE            # SEARCH STRING
inst SRSTU  B9BE RRE            # SEARCH STRING UNICODE
inst STFPC  B29C S0             # STORE FPC
inst STHRL  C47  RILB           # STORE HALFWORD RELATIVE LONG
inst STRL   C4F  RILB           # STORE RELATIVE LONG (32)
inst SXBR   B34B RRE            # SUBTRACT (EB)
inst TCDB   ED11 RXE            # TEST DATA CLASS (LB)
inst TCEB   ED10 RXE            # TEST DATA CLASS (SB)
inst TCXB   ED12 RXE            # TEST DATA CLASS (EB)
inst TMH    A70  RIAU           # TEST UNDER MASK HIGH
inst TML    A71  RIAU           # TEST UNDER MASK LOW
inst TMLH   A70  RIAU           # TEST UNDER MASK (LOW HIGH) same as TMH
inst TMLL   A71  RIAU           # TEST UNDER MASK (LOW LOW) same as TML
inst TP     EBC0 RSLA           # TEST DECIMAL
inst TRE    B2A5 RRE            # TRANSLATE EXTENDED
inst TROO   B993 RRE            # TRANSLATE ONE TO ONE
inst TROT   B992 RRE            # TRANSLATE ONE TO TWO
inst TRTE   B9BF RRFC           # TRANSLATE AND TEST EXTENDED
inst TRTO   B991 RRE            # TRANSLATE TWO TO ONE
inst TRTR   D0   SSA            # TRANSLATE AND TEST REVERSED
inst TRTRE  B9BD RRFC           # TRANSLATE AND TEST REVERSE EXTENDED
inst TRTT   B990 RRE            # TRANSLATE TWO TO TWO
inst UNPKA  EA   SSA            # UNPACK ASCII
inst UNPKU  E2   SSA            # UNPACK UNICODE

iset s380-EXTENSIONS
    mnemonics ADB ADBR AEB AEBR AFI AGSI AHI ALC ALCR ALFI ALGSI ALSI ASI AXBR
    mnemonics BRAS BRASL BRC BRCL BRCT BRE BRH BRL BRM BRNE BRNH BRNL BRNM BRNO
    mnemonics BRNP BRNZ BRO BRP BRU BRXH BRXLE BRZ
    mnemonics CDB CDBR CDFBR CDFR CEB CEBR CEFBRA CEFR
    mnemonics CFDBR CFDR CFEBRA CFER CFI CFXBR CFXR
    mnemonics CGHSI CHHSI CHI CHRL CHSI CIB CIJ CIT CKSM
    mnemonics CLCLU CLFHSI CLFI CLFIT CLGHSI CLHHSI CLHRL
    mnemonics CLIB CLIJ CLRB CLRJ CLRL CLRT CLST
    mnemonics CMPSC CRB CRJ CRL CRT CUSE CUTFU CUUTF CU12 CU14 CU21 CU24 CU41 CU42
    mnemonics CXBR CXFBR CXFR CXR
    mnemonics DDB DDBR DEB DEBR DIDBR DIEBR DL DLR DXBR EFPC EPSW
    mnemonics FIDBR FIDR FIEBR FIER FIXBRA FIXR
    mnemonics J JAS JCT JE JH JL JM JNE JNH JNL JNM JNO JNOP JNP JNZ JO JP JXH JXLE JZ
    mnemonics KDB KDBR KEB KEBR LARL LBR LCDBR LCEBR LCXBR LCXR
    mnemonics LDE LDEB LDEBR LDER LDXBRA LEDBR LEXBR LEXR
    mnemonics LFPC LHI LHR LHRL LLC LLCR LLH LLHR LLHRL
    mnemonics LNDBR LNEBR LNXBR LNXR LPD LPDBR LPEBR LPXBR LPXR LRL
    mnemonics LT LTDBR LTEBR LTXBR LTXR LXDB LXDBR LXD LXDR LXE LXEB LXEBR LXER
    mnemonics MAD MADB MADBR MADR MAE MAEB MAEBR MAER MAY MAYH MAYHR MAYL MAYLR MAYR
    mnemonics MDB MDBR MDEB MDEBR MEE MEEB MEEBR MEER MHI ML MLR
    mnemonics MS MSD MSDB MSDBR MSDR MSE MSEB MSEBR MSER MSFI SQXR
    mnemonics MSR MVCLU MVGHI MVHHI MVHI MVST MXBR MXDB MXDBR MY MYH MYHR MYL MYLR MYR
    mnemonics PFD PFDRL PKA PKU RLL SDB SDBR SEB SEBR SFPC SLB SLBR SLFI
    mnemonics SQD SQDB SQDBR SQDR SQE SQEB SQEBR SQER SQXBR
    mnemonics SRNM SRST SRSTU STFPC STHRL STRL SXBR
    mnemonics TCDB TCEB TCXB TMH TML TMLH TMLL TP
    mnemonics TRE TROO TROT TRTE TRTO TRTR TRTRE TRTT
    mnemonics UNPKA UNPKU
    mnemonics BREL BRHL BRLL BRML BRNEL BRNHL BRNLL BRNML BRNOL BRNPL BRNZL BROL
    mnemonics BRPL BRUL BRZL JASL JLE JLH JLL JLM JLNE JLNH JLNL JLNM JLNO JLNOP JLNP
    mnemonics JLNZ JLO JLP JLU JLZ
