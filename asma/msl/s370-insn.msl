# Copyright (C) 2014-2021 Harold Grovesteen
#
# This file is part of SATK.
#
#     SATK is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     SATK is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with SATK.  If not, see <http://www.gnu.org/licenses/>.

# System/370 instructions and instruction sets in Machine Specification Language

# Include machine instruction formats
# Uses MSLPATH when searching for include files
include formats.msl

cpu s370         # Generic S/370 CPU
    addrmax 24
    ccw CCW0
    psw PSWEC
    base s370-base s370-DECIMAL s370-extended s370-io
    features s370-DIRECT
    features s370-HFP
    features s370-EPHFP
    features s370-BRANCH-AND-SAVE
    features s370-CHANNEL-SET-SWITCHING
    features s370-CONDITIONAL-SWAPPING
    features s370-CPU-TIMERS
    features s370-DAS
    features s370-EXTENDED
    features s370-MOVE-INVERSE
    features s370-MULTIPROCESSING
    features s370-PSW-KEY-HANDLING
    features s370-RECOVERY
    features s370-STORAGE-KEY
    features s370-SUSPEND-RESUME
    features s370-TEST-BLOCK
    features s370-TRANSLATION
    features s370-VM

cpu s370BC       # Generic S/370 Compatibility Mode CPU
    addrmax 24
    ccw CCW0
    psw PSWBC
    base s370-base s370-DECIMAL s370-extended s370-io


# STANDARD INSTRUCTIONS (see below for I/O instructions)
inst A      5A   RXA            # ADD (32)
inst AH     4A   RXA            # ADD HALFWORD
inst AL     5E   RXA            # ADD LOGICAL (32)
inst ALR    1E   RR             # ADD LOGICAL (32)
inst AR     1A   RR             # ADD (32)
inst BAL    45   RXA            # BRANCH AND LINK
inst BALR   05   RR             # BRANCH AND LINK
inst BC     47   RXA            # BRANCH ON CONDITION
inst BCR    07   RR             # BRANCH ON CONDITION
inst BCT    46   RXA            # BRANCH ON COUNT (32)
inst BCTR   06   RR             # BRANCH ON COUNT (32)
inst BXH    86   RSA            # BRANCH ON INDEX HIGH (32)
inst BXLE   87   RSA            # BRANCH ON INDEX LOW OR EQUAL (32)
inst C      59   RXA            # COMPARE (32)
inst CH     49   RXA            # COMPARE HALFWORD
inst CL     55   RXA            # COMPARE LOGICAL (32)
inst CLI    95   SI             # COMPARE LOGICAL (immediate)
inst CLC    D5   SSA            # COMPARE LOGICAL (character)
inst CLCL   0F   RR             # COMPARE LOGICAL LONG (character)
inst CLM    BD   RSB            # COMPARE LOGICAL UNDER MASK
inst CLR    15   RR             # COMPARE LOGICAL (32)
inst CR     19   RR             # COMPARE (32)
inst CVB    4F   RXA            # CONVERT TO BINARY (32)
inst CVD    4E   RXA            # CONVERT TO DECIMAL (32)
inst D      5D   RXA            # DIVIDE (32<64)
inst DIAG   83   RSA     P      # DIAGNOSE
inst DR     1D   RR             # DIVIDE
inst EX     44   RXA            # EXECUTE
inst IC     43   RXA            # INSERT CHARACTER
inst ICM    BF   RSB            # INSERT CHARACTER UNDER MASK
inst ISK    09   RR      P      # INSERT STORAGE KEY
inst L      58   RXA            # LOAD (32)
inst LA     41   RXA            # LOAD ADDRESS
inst LCR    13   RR             # LOAD COMPLEMENT (32)
inst LCTL   B7   RSA     P      # LOAD CONTROL
inst LH     48   RXA            # LOAD HALFWORD
inst LM     98   RSA            # LOAD MULTIPLE (32)
inst LNR    11   RR             # LOAD NEGATIVE (32)
inst LPR    10   RR             # LOAD POSITIVE (32)
inst LPSW   8200 S0      P      # LOAD PROGRAM STATUS WORD
inst LR     18   RR             # LOAD (32)
inst LTR    12   RR             # LOAD AND TEST (32)
inst M      5C   RXA            # MULTIPLY (64<32)
inst MC     AF   SI             # MONITOR CALL
inst MH     4C   RXA            # MULTIPLY HALFWORD (32)
inst MR     1C   RR             # MULTIPLY (63<32)
inst MVC    D2   SSA            # MOVE (character)
inst MVCL   0E   RR             # MOVE CHARACTER LONG
inst MVI    92   SI             # MOVE (immediate)
inst MVN    D1   SSA            # MOVE NUMERICS
inst MVO    F1   SSB            # MOVE WITH OFFSET
inst MVZ    D3   SSA            # MOVE NUMERICS
inst N      54   RXA            # AND (32)
inst NC     D4   SSA            # AND (character)
inst NI     94   SI             # AND (immediate)
inst NR     14   RR             # AND (32)
inst O      56   RXA            # OR (32)
inst OC     D6   SSA            # OR (character)
inst OI     96   SI             # OR (immediate)
inst OR     16   RR             # OR (32)
inst PACK   F2   SSB            # PACK
inst S      5B   RXA            # SUBTRACT (32)
inst SCK    B204 S0      P      # SET CLOCK
inst SH     4B   RXA            # SUBTRACT HALFWORD
inst SL     5F   RXA            # SUBTRACT LOGICAL (32)
inst SLA    8B   RSA1           # SHIFT LEFT SINGLE
inst SLDA   8F   RSA1           # SHIFT LEFT DOUBLE
inst SLDL   8D   RSA1           # SHIFT LEFT DOUBLE LOGICAL
inst SLL    89   RSA1           # SHIFT LEFT SINGLE LOGICAL (32)
inst SLR    1F   RR             # SUBTRACT LOGICAL (32)
inst SPM    04   RR      P      # SET PROGRAM MASK
inst SR     1B   RR             # SUBTRACT (32)
inst SRA    8A   RSA1           # SHIFT RIGHT SINGLE
inst SRDA   8E   RSA1           # SHIFT RIGHT DOUBLE
inst SRDL   8C   RSA1           # SHIFT RIGHT DOUBLE LOGICAL
inst SRL    88   RSA1           # SHIFT RIGHT SINGLE LOGICAL (32)
inst SSK    08   RR      P      # SET STORAGE KEY
inst SSM    8000 S0      P      # SET SYSTEM MASK
inst ST     50   RXA            # STORE (32)
inst STC    42   RXA            # STORE CHARACTER
inst STCM   BE   RSB            # STORE CHARACTERS UNDER MASK
inst STCK   B205 S0      P      # STORE CLOCK
inst STCTL  B6   RSA     P      # STORE CONTROL
inst STH    40   RXA            # STORE HALFWORD
inst STIDP  B202 S0      P      # STORE PROCESSOR ID
inst STM    90   RSA            # STORE MULTIPLE (32)
inst SVC    0A   I              # SUPERVISOR CALL
inst TM     91   SI             # TEST UNDER MASK
inst TR     DC   SSA            # TRANSLATE
inst TRT    DD   SSA            # TRASNLATE AND TEST
inst TS     9300 S0             # TEST AND SET
inst UNPK   F3   SSB            # UNPACK
inst X      57   RXA            # EXCLUSIVE OR (32)
inst XC     D7   SSA            # EXCLUSIVE OR (character)
inst XI     97   SI             # EXCLUSIVE OR (immediate)
inst XR     17   RR             # EXCLUSIVE OR (32)


# STANDARD EXTENDED MNEMONICS
inst B      47F  ERXB    E      # BC  15,D1(X1,B1)  Unconditional branch
inst BE     478  ERXB    E      # BC  8,D1(X1,B1)   Branch on A equal B
inst BER    078  ER      E      # BCR 8,R           Branch on A equal B (reg)
inst BH     472  ERXB    E      # BC  2,D1(X1,B1)   Branch on A higher than B
inst BHR    072  ER      E      # BCR 2,R           Branch on A higher than B (reg)
inst BL     474  ERXB    E      # BC  4,D1(X1,B1)   Branch on A lower than B
inst BLR    074  ER      E      # BCR 4,R           Branch on A lower than B (reg)
inst BM     474  ERXB    E      # BC  4,D1(X1,B1)   Branch on Minus or Mixed
inst BMR    074  ER      E      # BCR 4,R           Branch on Minus or Mixed (reg)
inst BNE    477  ERXB    E      # BC  7,D1(X1,B1)   Branch on A not equal B
inst BNER   077  ER      E      # BCR 8,R           Branch on A not equal B (reg)
inst BNH    47D  ERXB    E      # BC  13,D1(X1,B1)  Branch on A not higher than B
inst BNHR   07D  ER      E      # BCR 13,R          Branch on A not higher than B (reg)
inst BNL    47B  ERXB    E      # BC  11,D1(X1,B1)  Branch on A not lower than B
inst BNLR   07B  ER      E      # BCR 11,R          Branch on A not lower than B (reg)
inst BNM    47B  ERXB    E      # BC  11,D1(X1,B1)  Branch on not minus or not mixed
inst BNMR   07B  ER      E      # BC  11,R          Branch on not minur or not mixed (reg)
inst BNO    47E  ERXB    E      # BC  14,D1(X1,B1)  Branch on no overflow or not ones
inst BNOR   07E  ER      E      # BCR 14,R          Branch on no overflow or not ones (reg)
inst BNP    47D  ERXB    E      # BC  13,D1(X1,B1)  Branch on not plus
inst BNPR   07D  ER      E      # BCR 13,R          Branch on not plus (reg)
inst BNZ    477  ERXB    E      # BC  7,D1(X1,B1)   Branch on not zero or zeros
inst BNZR   077  ER      E      # BCR 7,R           Branch on not zero or zeros (reg)
inst BO     471  ERXB    E      # BC  1,D1(X1,B1)   Branch on overflow or ones
inst BOR    071  ER      E      # BCR 1,R           Branch on overflow or ones (reg)
inst BP     472  ERXB    E      # BC  2,D1(X1,B1)   Branch on plus
inst BPR    072  ER      E      # BCR 2,R           Branch on plus (reg)
inst BR     07F  ER      E      # BCR 15,R          Unconditional branch (reg)
inst BZ     478  ERXB    E      # BC  8,D1(X1,B1)   Branch on zero or zeros
inst BZR    078  ER      E      # BCR 8,R           Branch on zero or zeros (reg)
inst NOP    470  ERXB    E      # BC  0,D1(X1,B1)   no operation
inst NOPR   070  ER      E      # BCR 0,R           no operation (reg)

iset s370-base
    mnemonics A AH AL ALR AR BAL BALR BC BCR BCT BCTR BXH BXLE C CH CL CLC CLCL CLI 
    mnemonics CLM CLR CR CVB CVD D DIAG DR EX IC ICM ISK L LA LCR LCTL LH LM LNR 
    mnemonics LPR LPSW LR LTR M MC MH MR MVC MVCL MVI MVN MVO MVZ N NC NI NR O OC
    mnemonics OI OR PACK S SCK SH SL SLA SLDA SLDL SLL SLR SPM SR SRA SRDA SRDL SRL
    mnemonics SSK SSM ST STC STCM STCK STCTL STH STIDP STM SVC TM TR TRT TS
    mnemonics UNPK X XC XI XR

iset s370-extended
    mnemonics B BE BER BH BHR BL BLR BM BMR BNE BNER BNH BNHR BNL BNLR BNM BNMR  
    mnemonics BNO BNOR BNP BNPR BNZ BNZR BO BOR BP BPR BR BZ BZR NOP NOPR


# INPUT/OUTPUT INSTRUCTIONS
inst CLRIO  9D01 S0      P      # CLEAR IO
inst HDV    9E01 S0      P      # HALD DEVICE
inst HIO    9E00 S0      P      # HALT IO
inst SIOF   9C01 S0      P      # START IO FAST RELEASE
inst SIO    9C00 S0      P      # START IO
inst STIDC  B203 S0      P      # STORE CHANNEL ID
inst TCH    9F00 S0      P      # TEST CHANNEL
inst TIO    9D00 S0      P      # TEST IO

iset s370-io
     mnemonics CLRIO HDV HIO SIO SIOF STIDC TCH TIO


# BRANCH AND SAVE FACILITY
inst BAS    4D   RXA            # BRANCH AND SAVE
inst BASR   0D   RR             # BRANCH AND SAVE

iset s370-BRANCH-AND-SAVE
     mnemonics BAS BASR


# CHANNEL-SET SWITCHING FACILITY
inst CONCS B200 S0       P      # CONNECT CHANNEL SET
inst DISCS B201 S0       P      # DISCONNECT CHANNEL SET

iset s370-CHANNEL-SET-SWITCHING
    mnemonics CONCS DISCS


# CONDITIONAL SWAPPING FACILITY
inst CS    BA   RSA             # COMPARE AND SWAP
inst CDS   BB   RSA             # COMPARE DOUBLE AND SWAP

iset s370-CONDITIONAL-SWAPPING
    mnemonics CS CDS


# CPU TIMER AND CLOCK COMPARATOR
inst SCKC  B206 S0       P      # SET CLOCK COMPARATOR
inst SPT   B208 S0       P      # SET CPU TIMER
inst STCKC B207 S0       P      # STORE CLOCK COMPARATOR
inst STPT  B209 S0       P      # STORE CPU TIMER

iset s370-CPU-TIMERS
    mnemonics SCKC SPT STCKC STPT


# DECIMAL INSTRUCTIONS FACILIY
inst AP     FA   SSB            # ADD DECIMAL
inst CP     F9   SSB            # COMPARE DECIMAL
inst DP     FD   SSB            # DIVIDE DECIMAL
inst ED     DE   SSA            # EDIT
inst EDMK   DF   SSA            # EDIT AND MARK
inst MP     FC   SSB            # MULTIPLY DECIMAL
inst SP     FB   SSB            # SUBTRACT DECIMAL
inst SRP    F0   SSC            # SHIFT AND ROUND DECIMAL
inst ZAP    F8   SSB            # ZERO AND ADD

iset s370-DECIMAL
    mnemonics AP CP DP ED EDMK MP SP SRP ZAP


# DIRECT CONTROL FEATURE
inst RDD    85   SI      P      # READ DIRECT
inst WRD    84   SI      P      # WRITE DIRECT

iset s370-DIRECT
    mnemonics RDD WRD


# DUAL ADDRESS SPACE FACILITY
inst EPAR  B226 RRE             # EXTRACT PRIMARY ADDRESS SPACE NUMBER
inst ESAR  B227 RRE             # EXTRACT SECONARY ADDRESS SPACE NUMBER
inst IAC   B224 RRE             # INSERT ADDRESS SPACE CONTROL
inst IVSK  B223 RRE             # INSERT VIRTUAL STORAGE KEY
inst LASP  E500 SSE2     P      # LOAD ADDRESS SPACE CONTROL
inst MVCK  D9   SSD             # MOVE WITH KEY
inst MVCP  DA   SSD             # MOVE TO PRIMARY
inst MVCS  DB   SSD             # MOVE TO SECONDARY
inst PC    B218 S0              # PROGRAM CALL
inst PT    B228 RRE      P      # PROGRAM TRANSFER
inst SAC   B219 S0       P      # SET ADDRESS SPACE CONTROL
inst SSAR  B225 RRE             # SET SECONDARY ADDRESS SPACE NUMBER

iset s370-DAS
    mnemonics EPAR ESAR IAC IVSK LASP MVCP MVCS MVCK PC PT SAC SSAR


# EXTENDED FACILITY (without MVS Assist)
inst IPTE  B221 RRE      P      # INVALIDATA PAGE TABLE ENTRY
inst TPROT E501 SSE2     P      # TEST PROTECTION

iset s370-EXTENDED
    mnemonics IPTE TPROT


# EXTENDED PRECISION HEXADECIMAL FLOATING POINT FEATURE
inst AXR    36   RR             # ADD NORMALIZED (EH)
inst LRDR   25   RR             # LOAD ROUNDED (LH<EH)
inst LRER   35   RR             # LOAD ROUNDED (SH<LH)
inst MXD    67   RXA            # MULTIPLY (EH<LH)
inst MXDR   27   RR             # MULTIPLY (EH<LH)
inst MXR    26   RR             # MULTIPLY (EH)
inst SXR    37   RR             # SUBTRACT NORMALIZED (EH)

iset s370-EPHFP
    mnemonics AXR LRDR LRER MXD MXDR MXR SXR


# HEXADECIMAL FLOATING POINT INSTRUCTION FEATURE
inst AD     6A   RXA            # ADD NORMALIZED (LH)
inst ADR    2A   RR             # ADD NORMALIZED (LH)
inst AE     7A   RXA            # ADD NORMALIZED (SH
inst AER    3A   RR             # ADD NORMALIZED (SH)
inst AU     7E   RXA            # ADD UNNORMALISZE (SH)
inst AUR    3E   RR             # ADD UNNORMALIZED (SH)
inst AW     6E   RXA            # ADD UNNORMALIZED (LH)
inst AWR    2E   RR             # ADD UNNORMALIZED (LH)
inst CD     69   RXA            # COMPARE (LH)
inst CDR    29   RR             # COMPARE (LH)
inst CE     79   RXA            # COMPARE (SH)
inst CER    39   RR             # COMPARE (SH)
inst DD     6D   RXA            # DIVIDE (LH)
inst DDR    2D   RR             # DIVIDE (LH)
inst DE     7D   RXA            # DIVIDE (SH)
inst DER    3D   RR             # DIVIDE (SH)
inst HDR    24   RR             # HALVE (LH)
inst HER    34   RR             # HALVE (SH)
inst LCDR   23   RR             # LOAD COMPLEMENT (LH)
inst LCER   33   RR             # LOAD COMPLEMENT (SH)
inst LD     68   RXA            # LOAD (LH)
inst LDR    28   RR             # LOAD (LH)
inst LE     78   RXA            # LOAD (SH)
inst LER    38   RR             # LOAD (SH)
inst LNDR   21   RR             # LOAD NEGATIVE (LH)
inst LNER   31   RR             # LOAD NEGATIVE (SH)
inst LPDR   20   RR             # LOAD POSITIVE (LH)
inst LPER   30   RR             # LOAD POSITIVE (SH)
inst LTDR   22   RR             # LOAD AND TEST (LH)
inst LTER   32   RR             # LOAD AND TEST (SH)
inst MD     6C   RXA            # MULTIPLY (LH)
inst MDR    2C   RR             # MULTIPLY (LH)
inst ME     7C   RXA            # MULTIPLY (SH)
inst MER    3C   RR             # MULTIPLY (SH)
inst SD     6B   RXA            # SUBTRACT NORMALIZED (LH)
inst SDR    2B   RR             # SUBTRACT NORMALIZED (LH)
inst SE     7B   RXA            # SUBTRACT NORMALIZED (SH)
inst SER    3B   RR             # SUBTRACT NORMALIZED (SH)
inst STD    60   RXA            # STORE (L)
inst STE    70   RXA            # STORE (S)
inst SU     7F   RXA            # SUBTRACT UNNORMALIZED (SH)
inst SUR    3F   RR             # SUBTRACT UNNORMALIZED (SH)
inst SW     6F   RXA            # SUBTRACT UNNORMALIZED (LH)
inst SWR    2F   RR             # SUBTRACT UNNORMALIZED (LH)

iset s370-HFP
    mnemonics AD ADR AE AER AU AUR AW AWR CD CDR CE CER DD DDR DE DER HDR HER LCDR LCER
    mnemonics LD LDR LE LER LNDR LNER LPDR LPER LTDR LTER MD MDR ME MER SD SDR SE SER 
    mnemonics STD STE SU SUR SW SWR


# MOVE INVERSE FACILITY
inst MVCIN  E8  SSA             # MOVE INVERSE

iset s370-MOVE-INVERSE
    mnemonics MVCIN


# MULTIPROCESSING FACILITY
inst SPX   B210 S0       P      # SET PREFIX
inst SIGP  AE   RSA      P      # SIGNAL PROCESSOR
inst STAP  B212 S0       P      # STORE CPU ADDRESS
inst STPX  B211 S0       P      # STORE PREFIX

iset s370-MULTIPROCESSING
    mnemonics SPX SIGP STAP STPX


# PSW KEY-HANDLING
inst IPK   B20B S0       P      # INSERT PSW KEY
inst SPKA  B20A S0       P      # SET PSW KEY FROM ADDRESS

iset s370-PSW-KEY-HANDLING
    mnemonics IPK SPKA


# RECOVERY EXTENSIONS
inst CLRCH 9F01 S0       P      # CLEAR CHANNEL

iset s370-RECOVERY
    mnemonics CLRCH


# STORAGE-KEY-INSTRUCTION EXTENSIONS
inst ISKE  B229 RRE      P      # INSERT STORAGE KEY EXTENDED
inst RRBE  B22A RRE      P      # RESET REFERENCE BIT EXTENDED
inst SSKE  B22B RRE      P      # SET STORAGE KEY EXTENDED

iset s370-STORAGE-KEY
    mnemonics ISKE RRBE SSKE


# SUSPEND AND RESUME
inst RIO   9C02 S0       P      # RESUME IO

iset s370-SUSPEND-RESUME
    mnemonics RIO


# TEST BLOCK
inst TB    B22C RRE      P      # TEST BLOCK

iset s370-TEST-BLOCK
    mnemonics TB


# TRANSLATION
inst LRA   B1   RXA      P      # LOAD REAL ADDRESS
inst PTLB  B20D S0       P      # PURGE TLB
inst RRB   B213 S0       P      # RESET REFERENCE BIT
inst STNSM AC   SI       P      # STORE THEN AND SYSTEM MASK
inst STOSM AD   SI       P      # STORE THEN OR SYSTEM MASK

iset s370-TRANSLATION
    mnemonics LRA PTLB RRB STNSM STOSM


# VM SPECIFIC
inst IUCV  B2F0 S0       P      # INTER-USER COMMUNICATIONS VEHICLE

iset s370-VM
    mnemonics IUCV


# PROCESSOR SPECIFIC INSTRUCTIONS
inst DIL20  EB00 SSE2    P      # 370-115 Model 1 DO INTERPRETIVE LOOP for 360-20
inst DIL22  EA20 SSE2    P      # 370-115 Model 2 DO INTERPRETIVE LOOP for 360-20
